[{"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\index.js":"1","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\redux\\store.js":"2","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\scroll-to-top\\ScrollToTop.jsx":"3","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\App.js":"4","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\reportWebVitals.js":"5","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\redux\\cart\\cart.reducers.js":"6","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\redux\\product\\product.reducers.js":"7","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\redux\\user\\user.reducers.js":"8","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\redux\\order\\order.reducers.js":"9","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\redux\\cart\\cart.actions.js":"10","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\profile-screen\\ProfileScreen.js":"11","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\login-screen\\Login.js":"12","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\shipping-screen\\ShippingScreen.js":"13","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\signup-screen\\Signup.js":"14","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\redux\\cart\\cart.constants.js":"15","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\redux\\product\\product.constants.js":"16","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\redux\\user\\user.constants.js":"17","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\redux\\order\\order.constants.js":"18","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\footer\\Footer.js":"19","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\header\\Header.js":"20","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\payment-screen\\PaymentScreen.js":"21","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\product-screen\\ProductScreen.js":"22","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\complete-order-screen\\CompleteOrder.js":"23","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\redux\\user\\user.actions.js":"24","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\redux\\order\\order.actions.js":"25","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\profile-sidebar\\ProfileSidebar.js":"26","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\profile-info-screen\\YourInfo.js":"27","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\profile-addresses-screen\\ProfileAddresses.js":"28","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\checkout-screen\\Checkout.js":"29","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\error-message\\ErrorMessage.js":"30","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\redux\\product\\product.actions.js":"31","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\user-menu-dropdown\\UserDropdown.js":"32","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\cart-dropdown\\CartDropdown.js":"33","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\utils.js":"34","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\loader\\Loader.js":"35","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\loader-product\\LoaderProduct.js":"36","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\action-show\\ActionShow.js":"37","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\order-screen\\OrderScreen.js":"38","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\profile-favorite-screen\\FavoriteScreen.js":"39","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\checkout-steps\\CheckoutSteps.js":"40","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\add-address\\AddAddress.js":"41","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\product\\Product.js":"42","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\loader-generic\\LoaderGeneric.js":"43","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\profile-orders\\ProfileOrders.js":"44","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\order-of-orders\\OrderOfOrders.js":"45","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\add-review\\AddReview.js":"46","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\review\\Review.js":"47","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\searchbox\\SearchBox.js":"48","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\profile-reviews-screen\\ProfileReviews.js":"49","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\shop\\Shop.js":"50","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\product-filter\\ProductFilter.js":"51","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\home-page\\HomePage.js":"52","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\carousel-products\\CarouselProductShow.js":"53","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\category-screen\\ProductCategory.js":"54","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\search-results\\SearchResults.js":"55","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\modals\\address-edit-modal\\AddressEdit.js":"56","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\modals\\product-review-modal\\ProductReviewModal.js":"57","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\order-item\\OrderItem.js":"58","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\deals-screen\\DealsScreen.js":"59"},{"size":768,"mtime":1612129189000,"results":"60","hashOfConfig":"61"},{"size":4372,"mtime":1613844846749,"results":"62","hashOfConfig":"61"},{"size":347,"mtime":1612129189000,"results":"63","hashOfConfig":"61"},{"size":2544,"mtime":1614369689489,"results":"64","hashOfConfig":"61"},{"size":362,"mtime":1612129189000,"results":"65","hashOfConfig":"61"},{"size":886,"mtime":1612129189000,"results":"66","hashOfConfig":"61"},{"size":2438,"mtime":1614163652005,"results":"67","hashOfConfig":"61"},{"size":5646,"mtime":1613058002987,"results":"68","hashOfConfig":"61"},{"size":2912,"mtime":1614225220161,"results":"69","hashOfConfig":"61"},{"size":1827,"mtime":1612129189000,"results":"70","hashOfConfig":"61"},{"size":1737,"mtime":1614033867092,"results":"71","hashOfConfig":"61"},{"size":2739,"mtime":1613721936147,"results":"72","hashOfConfig":"61"},{"size":4968,"mtime":1614033789349,"results":"73","hashOfConfig":"61"},{"size":5866,"mtime":1614060246728,"results":"74","hashOfConfig":"61"},{"size":626,"mtime":1612129189000,"results":"75","hashOfConfig":"61"},{"size":900,"mtime":1614037446795,"results":"76","hashOfConfig":"61"},{"size":1509,"mtime":1612897264410,"results":"77","hashOfConfig":"61"},{"size":809,"mtime":1614225234874,"results":"78","hashOfConfig":"61"},{"size":1134,"mtime":1614223274353,"results":"79","hashOfConfig":"61"},{"size":5584,"mtime":1614227352064,"results":"80","hashOfConfig":"61"},{"size":5942,"mtime":1612820017238,"results":"81","hashOfConfig":"61"},{"size":10937,"mtime":1617850560566,"results":"82","hashOfConfig":"61"},{"size":12418,"mtime":1614171058087,"results":"83","hashOfConfig":"61"},{"size":8749,"mtime":1612897966262,"results":"84","hashOfConfig":"61"},{"size":4127,"mtime":1612630597633,"results":"85","hashOfConfig":"61"},{"size":4975,"mtime":1613182516344,"results":"86","hashOfConfig":"61"},{"size":8965,"mtime":1614223833920,"results":"87","hashOfConfig":"61"},{"size":4090,"mtime":1614033512842,"results":"88","hashOfConfig":"61"},{"size":6801,"mtime":1614206664895,"results":"89","hashOfConfig":"61"},{"size":482,"mtime":1614222740788,"results":"90","hashOfConfig":"61"},{"size":3332,"mtime":1613844398175,"results":"91","hashOfConfig":"61"},{"size":1532,"mtime":1612617763350,"results":"92","hashOfConfig":"61"},{"size":6705,"mtime":1614225499852,"results":"93","hashOfConfig":"61"},{"size":554,"mtime":1612824891496,"results":"94","hashOfConfig":"61"},{"size":611,"mtime":1612129189000,"results":"95","hashOfConfig":"96"},{"size":420,"mtime":1612129189000,"results":"97","hashOfConfig":"96"},{"size":633,"mtime":1614222667450,"results":"98","hashOfConfig":"61"},{"size":10557,"mtime":1614225465570,"results":"99","hashOfConfig":"61"},{"size":5549,"mtime":1614223777591,"results":"100","hashOfConfig":"61"},{"size":3582,"mtime":1612819348447,"results":"101","hashOfConfig":"61"},{"size":4732,"mtime":1614385172896,"results":"102","hashOfConfig":"61"},{"size":5359,"mtime":1614168265448,"results":"103","hashOfConfig":"61"},{"size":421,"mtime":1613419137956,"results":"104","hashOfConfig":"61"},{"size":1422,"mtime":1612737550858,"results":"105","hashOfConfig":"61"},{"size":2103,"mtime":1614055048787,"results":"106","hashOfConfig":"61"},{"size":5040,"mtime":1614040074158,"results":"107","hashOfConfig":"61"},{"size":1128,"mtime":1612836009442,"results":"108","hashOfConfig":"61"},{"size":1442,"mtime":1613996491584,"results":"109","hashOfConfig":"61"},{"size":1934,"mtime":1614170104132,"results":"110","hashOfConfig":"61"},{"size":3536,"mtime":1613965874261,"results":"111","hashOfConfig":"61"},{"size":349,"mtime":1613382663829,"results":"112","hashOfConfig":"61"},{"size":7094,"mtime":1614223162186,"results":"113","hashOfConfig":"61"},{"size":3304,"mtime":1614270522912,"results":"114","hashOfConfig":"61"},{"size":3460,"mtime":1613996719404,"results":"115","hashOfConfig":"61"},{"size":4110,"mtime":1614124622340,"results":"116","hashOfConfig":"61"},{"size":6117,"mtime":1614034378431,"results":"117","hashOfConfig":"61"},{"size":1733,"mtime":1614038904249,"results":"118","hashOfConfig":"61"},{"size":3279,"mtime":1614224980606,"results":"119","hashOfConfig":"61"},{"size":2747,"mtime":1614270110640,"results":"120","hashOfConfig":"61"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1j4c21t",{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"196","messages":"197","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},"jkitux",{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"209"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"212","messages":"213","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"229","messages":"230","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"234","messages":"235","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"241","messages":"242","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"255"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"258"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"263","messages":"264","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\index.js",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\redux\\store.js",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\scroll-to-top\\ScrollToTop.jsx",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\App.js",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\redux\\cart\\cart.reducers.js",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\redux\\product\\product.reducers.js",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\redux\\user\\user.reducers.js",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\redux\\order\\order.reducers.js",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\redux\\cart\\cart.actions.js",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\profile-screen\\ProfileScreen.js",["271"],"//! Core\r\nimport React from \"react\";\r\nimport \"./ProfileScreen.scss\";\r\nimport { Route } from \"react-router-dom\";\r\n//todo ADD GSAP SCROLL TO MAKE LEFT MENU STICKY\r\nimport gsap from \"gsap\";\r\n\r\n//! Components\r\nimport ProfileSidebar from \"../../components/profile-sidebar/ProfileSidebar.js\";\r\nimport YourInfo from \"../profile-info-screen/YourInfo.js\";\r\nimport ProfileAddresses from \"../profile-addresses-screen/ProfileAddresses.js\";\r\nimport Checkout from \"../checkout-screen/Checkout.js\";\r\nimport ProfileOrders from \"../profile-orders/ProfileOrders\";\r\nimport AddressEdit from \"../../modals/address-edit-modal/AddressEdit\";\r\nimport FavoriteScreen from \"../profile-favorite-screen/FavoriteScreen\";\r\nimport OrderScreen from \"../order-screen/OrderScreen\";\r\nimport ProfileReviews from \"../profile-reviews-screen/ProfileReviews.js\";\r\n//!=================================================================\r\nconst ProfileScreen = () => {\r\n  return (\r\n    <div className=\"profile-screen\">\r\n      <ProfileSidebar />\r\n      <div className=\"profile-screen__right\">\r\n        <Route exact path=\"/profile/info\" component={YourInfo} />\r\n        <Route exact path=\"/profile/addresses\" component={ProfileAddresses} />\r\n        <Route exact path=\"/profile/checkout/:id?\" component={Checkout} />{\" \"}\r\n        <Route exact path=\"/profile/addresses/:id\" component={AddressEdit} />{\" \"}\r\n        <Route exact path=\"/profile/favorites\" component={FavoriteScreen} />{\" \"}\r\n        <Route exact path=\"/profile/orders/:id\" component={OrderScreen} />\r\n        <Route exact path=\"/profile/orders\" component={ProfileOrders} />\r\n        <Route exact path=\"/profile/reviews\" component={ProfileReviews} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileScreen;\r\n","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\login-screen\\Login.js",["272"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport ErrorMessage from \"../../components/error-message/ErrorMessage.js\";\r\nimport { login } from \"../../redux/user/user.actions.js\";\r\nimport \"./Login.scss\";\r\n\r\n//!==========================================================\r\nconst Login = ({ location }) => {\r\n  const history = useHistory();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { error, userInfo } = userLogin;\r\n\r\n  const redirect = location.search ? location.search.split(\"+\")[1] : \"/\";\r\n\r\n  //! Check if we are logged in so you get a redirect if you try to access the login route while logged in\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect);\r\n    }\r\n  }, [history, userInfo, redirect]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    //! Dispatch Login ====================\r\n    dispatch(login(email, password));\r\n  };\r\n  return (\r\n    <div className=\"login-screen\">\r\n      <div className=\"home-screen__top\">\r\n        <h1 className=\"heading-1  home-screen__title\">SIGNIN</h1>\r\n      </div>\r\n      {error && <ErrorMessage color=\"alert\">{error}</ErrorMessage>}\r\n\r\n      <div className=\"login-screen__form-container\">\r\n        <form className=\"login-screen__form\" onSubmit={submitHandler}>\r\n          <label className=\"login-screen__form--input-label\" htmlFor=\"email\">\r\n            Email Address\r\n          </label>\r\n          <input\r\n            placeholder=\"Enter email\"\r\n            className=\"login-screen__form--input\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            name=\"email\"\r\n            type=\"email\"\r\n          />\r\n          <label className=\"login-screen__form--input-label\" htmlFor=\"password\">\r\n            Password\r\n          </label>\r\n          <input\r\n            placeholder=\"Enter password\"\r\n            className=\"login-screen__form--input\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            name=\"password\"\r\n            type=\"password\"\r\n          />\r\n          <input\r\n            className=\"login-screen__form--submit-btn\"\r\n            type=\"submit\"\r\n            value=\"Sign In\"\r\n          />\r\n        </form>\r\n        <Link\r\n          className=\"login-screen__create-account-link\"\r\n          to={redirect ? \"/register?redirect=${redirect}\" : \"/register\"}\r\n        >\r\n          Don't have an account? Create one here.\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\shipping-screen\\ShippingScreen.js",["273"],"//! Core\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport \"./ShippingScreen.scss\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\n//! Components\r\nimport AddAddress from \"../../components/add-address/AddAddress\";\r\nimport AddressEdit from \"../../modals/address-edit-modal/AddressEdit\";\r\nimport CheckoutSteps from \"../../components/checkout-steps/CheckoutSteps\";\r\n\r\n//! Redux Actions\r\nimport { getUserAddresses } from \"../../redux/user/user.actions.js\";\r\nimport { addOrderAddress } from \"../../redux/order/order.actions.js\";\r\n\r\n//! Icons\r\nimport { IoMdArrowDropdown } from \"react-icons/io\";\r\nimport { IoMdArrowDropup } from \"react-icons/io\";\r\nimport { AiOutlineDoubleRight } from \"react-icons/ai\";\r\n\r\n//!=======================================================\r\nconst ShippingScreen = () => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  const [addAddressShow, setAddAddressShow] = useState(false);\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const orderAddressSelector = useSelector((state) => state.orderAddress);\r\n  const { orderAddress } = orderAddressSelector;\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { user } = userDetails;\r\n\r\n  const userAddresses = useSelector((state) => state.userAddresses);\r\n  const { addresses } = userAddresses;\r\n\r\n  useEffect(() => {\r\n    if (orderAddress.fullName) {\r\n      history.push(\"/payment\");\r\n    }\r\n    if (!userInfo) {\r\n      history.push(\"/login\");\r\n    } else {\r\n      dispatch(getUserAddresses());\r\n    }\r\n  }, [history, userInfo, user, dispatch]);\r\n\r\n  const deleteAddressHandler = (id) => {\r\n    const deleteAddress = async () => {\r\n      try {\r\n        const config = {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${userInfo.token}`,\r\n          },\r\n        };\r\n        await axios.delete(`/api/users/profile/addresses/${id}`, config);\r\n\r\n        dispatch(getUserAddresses());\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    deleteAddress();\r\n  };\r\n\r\n  const handleSubmit = (address) => {\r\n    dispatch(addOrderAddress(address));\r\n    history.push(\"/payment\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"shipping-screen shipping-section\">\r\n      <CheckoutSteps />\r\n      <div>\r\n        <h1 className=\"heading-1  mt-sm mb-sm\">Chose a delivery address</h1>\r\n        <div className=\"shipping-screen__address-container\">\r\n          {addresses\r\n            ? addresses.map((address) => (\r\n                <div key={address._id} className=\"shipping-screen__address\">\r\n                  <address\r\n                    style={{\r\n                      display: \"flex\",\r\n                      flexDirection: \"column\",\r\n                      alignItems: \"center\",\r\n                      marginBottom: \"2rem\",\r\n                    }}\r\n                  >\r\n                    <p className=\"profile-addresses__text\">\r\n                      <strong>{address.fullName}</strong>\r\n                    </p>\r\n                    <p className=\"profile-addresses__text\">{address.line1}</p>\r\n                    <p className=\"profile-addresses__text\">{address.line2}</p>\r\n                    <p className=\"profile-addresses__text\">\r\n                      {address.city} , {address.stateProvinceRegion} ,{\" \"}\r\n                      {address.postalCode}\r\n                    </p>\r\n\r\n                    <p className=\"profile-addresses__text\">{address.country}</p>\r\n                  </address>\r\n                  <button\r\n                    onClick={() => handleSubmit(address)}\r\n                    className=\"shipping-screen__ship-btn\"\r\n                  >\r\n                    Deliver to this address{\" \"}\r\n                    <AiOutlineDoubleRight className=\"payment-screen__arrows\" />{\" \"}\r\n                  </button>\r\n                  <div className=\"shipping-screen__delete-edit-container mt-xs mb-xs\">\r\n                    <AddressEdit address={address} />\r\n                    <span\r\n                      onClick={() => {\r\n                        deleteAddressHandler(address._id);\r\n                      }}\r\n                      className=\"shipping-screen--action shipping-screen--action--delete\"\r\n                    >\r\n                      Delete\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              ))\r\n            : \"\"}\r\n        </div>\r\n\r\n        <div className=\"line-break\" />\r\n        <h2\r\n          onClick={() => setAddAddressShow(!addAddressShow)}\r\n          className=\"heading-2 shipping-screen__add-address mb-sm\"\r\n        >\r\n          Add new address&nbsp;\r\n          {addAddressShow ? <IoMdArrowDropup /> : <IoMdArrowDropdown />}\r\n        </h2>\r\n        {addAddressShow ? <AddAddress /> : \"\"}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ShippingScreen;\r\n","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\signup-screen\\Signup.js",["274","275"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport ErrorMessage from \"../../components/error-message/ErrorMessage.js\";\r\nimport { register } from \"../../redux/user/user.actions.js\";\r\nimport \"./Signup.scss\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\n//!==========================================================\r\nconst Signup = ({ location }) => {\r\n  const redirect = location.search ? location.search.split(\"+\")[1] : \"/\";\r\n  const dispatch = useDispatch();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setconfirmPassword] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [message, setMessage] = useState(null);\r\n  const userRegister = useSelector((state) => state.userRegister);\r\n  const { loading, error, userInfo } = userRegister;\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect);\r\n    }\r\n  }, [userInfo, redirect, history]);\r\n  const passwordLength = password.length < 6 ? false : true;\r\n  const passwordLowercase = /[a-z]/.test(password) < 1 ? false : true;\r\n  const passwordUppercase = /[A-Z]/.test(password) < 1 ? false : true;\r\n  const passwordNumber = /[0-9]/.test(password) < 1 ? false : true;\r\n  const passwordEqualConfirmPassword =\r\n    password !== confirmPassword ? false : true;\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    history.push(\"/\");\r\n    //!Password check =====================\r\n\r\n    if (\r\n      passwordLength &&\r\n      passwordLowercase &&\r\n      passwordUppercase &&\r\n      passwordNumber &&\r\n      passwordEqualConfirmPassword\r\n    ) {\r\n      //! Dispatch Login ====================\r\n      dispatch(register(name, email, password));\r\n    } else {\r\n      setMessage(\"You must comply with all the password requisites.\");\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"login-screen\">\r\n      <div className=\"home-screen__top\">\r\n        <h1 className=\"heading-1  home-screen__title\">SIGNUP</h1>\r\n      </div>\r\n      {error && <ErrorMessage color=\"alert\">{error}</ErrorMessage>}\r\n\r\n      <div className=\"login-screen__form-container\">\r\n        <form className=\"login-screen__form\" onSubmit={submitHandler}>\r\n          <label className=\"login-screen__form--input-label\" htmlFor=\"name\">\r\n            Name\r\n          </label>\r\n          <input\r\n            placeholder=\"Enter name\"\r\n            className=\"login-screen__form--input\"\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n            name=\"name\"\r\n            type=\"text\"\r\n          />\r\n          <label className=\"login-screen__form--input-label\" htmlFor=\"email\">\r\n            Email\r\n          </label>\r\n          <input\r\n            placeholder=\"Enter email\"\r\n            className=\"login-screen__form--input\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            name=\"email\"\r\n            type=\"email\"\r\n          />\r\n          <label className=\"login-screen__form--input-label\" htmlFor=\"password\">\r\n            Password\r\n          </label>\r\n          <input\r\n            placeholder=\"Enter password\"\r\n            className=\"login-screen__form--input\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            name=\"password\"\r\n            type=\"password\"\r\n          />\r\n          <label\r\n            className=\"login-screen__form--input-label\"\r\n            htmlFor=\"confirmPassword\"\r\n          >\r\n            Confirm Password\r\n          </label>\r\n          <input\r\n            placeholder=\"Confirm password\"\r\n            className=\"login-screen__form--input\"\r\n            value={confirmPassword}\r\n            onChange={(e) => setconfirmPassword(e.target.value)}\r\n            name=\"confirmPassword\"\r\n            type=\"password\"\r\n          />\r\n          {message && <p className=\"signup__password-error\">{message}</p>}\r\n          <div className=\"signup__password-box\">\r\n            <h3>Password must:</h3>\r\n            <p\r\n              className={\r\n                passwordEqualConfirmPassword\r\n                  ? \"signup__password-box--fail\"\r\n                  : \"signup__password-box--checked\"\r\n              }\r\n            >\r\n              match Confirm Password\r\n            </p>\r\n            <p\r\n              className={\r\n                passwordUppercase\r\n                  ? \"signup__password-box--fail\"\r\n                  : \"signup__password-box--checked\"\r\n              }\r\n            >\r\n              contain an uppercase letter\r\n            </p>\r\n            <p\r\n              className={\r\n                passwordLowercase\r\n                  ? \"signup__password-box--fail\"\r\n                  : \"signup__password-box--checked\"\r\n              }\r\n            >\r\n              contain an lowercase letter\r\n            </p>\r\n            <p\r\n              className={\r\n                passwordNumber\r\n                  ? \"signup__password-box--fail\"\r\n                  : \"signup__password-box--checked\"\r\n              }\r\n            >\r\n              contain a number\r\n            </p>\r\n            <p\r\n              className={\r\n                passwordLength\r\n                  ? \"signup__password-box--fail\"\r\n                  : \"signup__password-box--checked\"\r\n              }\r\n            >\r\n              be at least 6 characters long\r\n            </p>\r\n          </div>\r\n          <input\r\n            className=\"login-screen__form--submit-btn\"\r\n            type=\"submit\"\r\n            value=\"Register\"\r\n          />\r\n        </form>\r\n\r\n        <Link\r\n          className=\"login-screen__create-account-link\"\r\n          to={redirect ? \"/login?redirect=${redirect}\" : \"/login\"}\r\n        >\r\n          Have an account? Log in here.\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\redux\\cart\\cart.constants.js",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\redux\\product\\product.constants.js",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\redux\\user\\user.constants.js",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\redux\\order\\order.constants.js",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\footer\\Footer.js",["276"],"import React from \"react\";\r\nimport \"./Footer.scss\";\r\nimport { GrFacebook, GrTwitter, GrInstagram } from \"react-icons/gr\";\r\nimport { Link } from \"react-router-dom\";\r\n//!=============================================================\r\nconst Footer = () => {\r\n  return (\r\n    <footer className=\"footer\">\r\n      <div className=\"footer__top\">\r\n        <GrFacebook className=\"footer__icon\" />\r\n        <GrTwitter className=\"footer__icon\" />\r\n        <GrInstagram className=\"footer__icon\" />\r\n      </div>\r\n      <div className=\"footer__bottom\">\r\n        <div className=\"footer__ofertas footer__flex\">\r\n          {\" \"}\r\n          <h4 className=\"heading-4\">Get to Know Us</h4>\r\n        </div>\r\n        <div className=\"footer__information footer__flex\">\r\n          <h4 className=\"heading-4\">Information</h4>\r\n        </div>\r\n        <div className=\"footer__conditions footer__flex\">\r\n          <h4 className=\"heading-4\">Selling Conditions</h4>\r\n        </div>\r\n        <div className=\"footer__more footer__flex\">\r\n          <h4 className=\"heading-4\">More...</h4>\r\n        </div>\r\n      </div>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\header\\Header.js",["277"],"//! Core\r\nimport React from \"react\";\r\nimport \"./Header.scss\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\n//! Components\r\nimport CartDropdown from \"../cart-dropdown/CartDropdown.js\";\r\nimport UserDropdown from \"../user-menu-dropdown/UserDropdown.js\";\r\nimport SearchBox from \"../searchbox/SearchBox.js\";\r\n\r\n//! Icons\r\nimport { GiTechnoHeart } from \"react-icons/gi\";\r\nimport { TiShoppingCart, TiUserOutline } from \"react-icons/ti\";\r\nimport { FaHeart } from \"react-icons/fa\";\r\nimport { IoMdArrowDropdown } from \"react-icons/io\";\r\n\r\n//! Redux Actions\r\nimport { productConstants } from \"../../redux/product/product.constants\";\r\nimport { toggleCartShow } from \"../../redux/cart/cart.actions.js\";\r\nimport { toggleUserMenuShow } from \"../../redux/user/user.actions.js\";\r\n\r\n//!==============================================================\r\n\r\nconst Header = () => {\r\n  //! Hooks declaration\r\n  const location = useLocation();\r\n  const { pathname } = location;\r\n  const dispatch = useDispatch();\r\n\r\n  //! Redux data selection hook\r\n  const cartToggle = useSelector((state) => state.cartToggle.showCart);\r\n  const cartItems = useSelector((state) => state.cart);\r\n  const { loading, cartProducts } = cartItems;\r\n\r\n  const cartItemsNumber = cartProducts.reduce(\r\n    (accum, cartItem) => accum + cartItem.quantity,\r\n    0\r\n  );\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const dropdownShow = useSelector((state) => state.showUserMenu);\r\n  const { showUserMenu } = dropdownShow;\r\n\r\n  return (\r\n    <>\r\n      {\" \"}\r\n      {pathname === \"/shipping\" ||\r\n      pathname === \"/payment\" ||\r\n      pathname === \"/complete-order\" ? (\r\n        \"\"\r\n      ) : (\r\n        <header className=\"header\">\r\n          <nav className=\"nav\">\r\n            <div className=\"nav__logo-container\">\r\n              <GiTechnoHeart className=\"nav__logo\" />{\" \"}\r\n              <Link title=\"Go home\" to=\"/\">\r\n                <h2 className=\"nav__title\">Cyber Heart</h2>\r\n              </Link>\r\n            </div>\r\n\r\n            <div className=\" nav__searchbox-container\">\r\n              <SearchBox nav__icon />{\" \"}\r\n              <div className=\"nav__subnav\">\r\n                <h4 className=\"heading-4 nav__subnav--text mr-md\">\r\n                  <NavLink\r\n                    onClick={() =>\r\n                      dispatch({ type: productConstants.PRODUCT_LIST_RESET })\r\n                    }\r\n                    activeClassName=\"nav__subnav--text nav__subnav--text--active\"\r\n                    to=\"/shop/all-products\"\r\n                  >\r\n                    All Products\r\n                  </NavLink>\r\n                </h4>\r\n                <h4 className=\"heading-4 nav__subnav--text mr-md\">\r\n                  <NavLink\r\n                    onClick={() =>\r\n                      dispatch({ type: productConstants.PRODUCT_LIST_RESET })\r\n                    }\r\n                    activeClassName=\"nav__subnav--text nav__subnav--text--active\"\r\n                    to=\"/shop/electronics\"\r\n                  >\r\n                    Electronics\r\n                  </NavLink>\r\n                </h4>\r\n                <h4 className=\"heading-4 nav__subnav--text mr-md\">\r\n                  <NavLink\r\n                    onClick={() =>\r\n                      dispatch({ type: productConstants.PRODUCT_LIST_RESET })\r\n                    }\r\n                    activeClassName=\"nav__subnav--text nav__subnav--text--active\"\r\n                    to=\"/shop/home-appliances\"\r\n                  >\r\n                    Home Appliances\r\n                  </NavLink>\r\n                </h4>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"nav__icons-container\">\r\n              <NavLink\r\n                title=\"Favorites\"\r\n                className=\"nav__icon  nav__icon--heart\"\r\n                activeClassName=\"nav__icon--heart--active\"\r\n                to=\"/profile/favorites\"\r\n              >\r\n                {\" \"}\r\n                <FaHeart />\r\n              </NavLink>\r\n\r\n              <div\r\n                title=\"Shopping cart\"\r\n                onClick={() => dispatch(toggleCartShow())}\r\n                className=\"nav__icon nav__icon--cart\"\r\n              >\r\n                {\" \"}\r\n                <TiShoppingCart />\r\n                <span className=\"nav__cart-items-number\">\r\n                  {cartItemsNumber}\r\n                </span>\r\n              </div>\r\n              {cartToggle ? <CartDropdown /> : null}\r\n              {userInfo ? (\r\n                <>\r\n                  {\" \"}\r\n                  <span\r\n                    className=\"nav__welcome-message\"\r\n                    onClick={() => dispatch(toggleUserMenuShow())}\r\n                  >\r\n                    Your menu &nbsp;\r\n                    <IoMdArrowDropdown\r\n                      style={{ fontSize: \"2rem\" }}\r\n                      className={\r\n                        showUserMenu\r\n                          ? \"dropdown-arrow-class\"\r\n                          : \"dropdown-revert\"\r\n                      }\r\n                    />\r\n                  </span>\r\n                  {showUserMenu ? <UserDropdown /> : null}\r\n                </>\r\n              ) : (\r\n                <Link className=\"nav__icon\" to=\"/login\">\r\n                  {\" \"}\r\n                  <TiUserOutline title=\"Log In / Register\" />\r\n                </Link>\r\n              )}\r\n            </div>\r\n          </nav>\r\n        </header>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\payment-screen\\PaymentScreen.js",["278","279"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./PaymentScreen.scss\";\r\nimport CheckoutSteps from \"../../components/checkout-steps/CheckoutSteps\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { saveOrderPaymentMethod } from \"../../redux/order/order.actions.js\";\r\nimport { GrPaypal, GrStripe } from \"react-icons/gr\";\r\nimport { AiOutlineDoubleRight } from \"react-icons/ai\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nimport { BsCreditCard } from \"react-icons/bs\";\r\nimport { ReactComponent as DHL } from \"../../assets/dhl-express.svg\";\r\nimport { ReactComponent as Correos } from \"../../assets/correos.svg\";\r\n//!=======================================================\r\n\r\nconst PaymentScreen = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const orderAddressState = useSelector((state) => state.orderAddress);\r\n  const { orderAddress } = orderAddressState;\r\n\r\n  const orderPaymentMethod = useSelector((state) => state.orderPaymentMethod);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      orderPaymentMethod.paymentMethod &&\r\n      orderPaymentMethod.shippingMethod.name\r\n    ) {\r\n      history.push(\"/complete-order\");\r\n    }\r\n    if (!orderAddress.fullName) {\r\n      history.push(\"/shipping\");\r\n    }\r\n  }, [orderAddress, history]);\r\n\r\n  const [paymentMethod, setPaymentMethod] = useState(\"PayPal\");\r\n  const [shippingMethod, setShippingMethod] = useState({\r\n    name: \"DHL Standard Delivery\",\r\n    price: 5.99,\r\n  });\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(saveOrderPaymentMethod(paymentMethod, shippingMethod));\r\n    history.push(\"/complete-order\");\r\n  };\r\n\r\n  const paymentMethodHandler = (e) => setPaymentMethod(e.target.value);\r\n  const shippmentMethodHandler = (e) =>\r\n    setShippingMethod({ price: Number(e.target.value), name: e.target.id });\r\n  return (\r\n    <div className=\"payment-screen shipping-section\">\r\n      <CheckoutSteps />\r\n      <div>\r\n        <h1 className=\"heading-1  mt-sm mb-sm\">Chose a payment method</h1>\r\n        <form onSubmit={handleSubmit}>\r\n          <label className=\"payment-screen__label mb-md\" htmlFor=\"PayPal\">\r\n            <input\r\n              id=\"PayPal\"\r\n              className=\"payment-screen__input mr-md\"\r\n              name=\"paymentmethod\"\r\n              type=\"radio\"\r\n              value=\"PayPal\"\r\n              onChange={paymentMethodHandler}\r\n              defaultChecked\r\n            />\r\n            <GrPaypal className=\"payment-screen__payment-icon mr-sm\" />\r\n            PayPal\r\n          </label>\r\n          <label\r\n            className=\"payment-screen__label payment-screen__label--disabled mb-md\"\r\n            htmlFor=\"CreditCard\"\r\n          >\r\n            <input\r\n              id=\"CreditCard\"\r\n              className=\"payment-screen__input  mr-md\"\r\n              name=\"paymentmethod\"\r\n              type=\"radio\"\r\n              value=\"Credit Card\"\r\n              onChange={paymentMethodHandler}\r\n              disabled\r\n            />\r\n            <BsCreditCard className=\"payment-screen__payment-icon payment-screen__payment-icon--disabled mr-sm\" />{\" \"}\r\n            Credit Card\r\n          </label>\r\n          <label\r\n            className=\"payment-screen__label  payment-screen__label--disabled mb-md\"\r\n            htmlFor=\"Stripe\"\r\n          >\r\n            <input\r\n              id=\"Stripe\"\r\n              className=\"payment-screen__input payment-screen__input--disabled mr-md\"\r\n              name=\"paymentmethod\"\r\n              type=\"radio\"\r\n              value=\"Stripe\"\r\n              onChange={paymentMethodHandler}\r\n              disabled\r\n            />\r\n            <GrStripe className=\"payment-screen__payment-icon mr-sm\" /> Stripe\r\n          </label>\r\n\r\n          <div className=\"line-break\" />\r\n          <h1 className=\"heading-1  mt-sm mb-sm\">Chose a shipping method</h1>\r\n\r\n          <label className=\"payment-screen__label \" htmlFor=\"DHLStandard\">\r\n            <input\r\n              id=\"DHL Standard Shipping\"\r\n              className=\"payment-screen__input mr-md\"\r\n              name=\"shippingOption\"\r\n              type=\"radio\"\r\n              value={5.99}\r\n              onChange={shippmentMethodHandler}\r\n              defaultChecked\r\n            />\r\n            <DHL\r\n              style={{ width: \"7rem\", height: \"7rem\" }}\r\n              className=\"payment-screen__payment-icon mr-sm\"\r\n            />\r\n            DHL Standard Shipping <strong>&nbsp;&nbsp;( + 5.99 €)</strong>\r\n          </label>\r\n          <label className=\"payment-screen__label \" htmlFor=\"DHL1Day\">\r\n            <input\r\n              id=\"DHL 1 Day Delivery\"\r\n              className=\"payment-screen__input mr-md\"\r\n              name=\"shippingOption\"\r\n              type=\"radio\"\r\n              value={8.99}\r\n              onChange={shippmentMethodHandler}\r\n            />\r\n            <DHL\r\n              style={{ width: \"7rem\", height: \"7rem\" }}\r\n              className=\"payment-screen__payment-icon mr-sm\"\r\n            />\r\n            DHL 1 Day Delivery <strong>&nbsp;&nbsp;( + 8.99 €)</strong>\r\n          </label>\r\n          <label className=\"payment-screen__label mb-md\" htmlFor=\"Correos\">\r\n            <input\r\n              id=\"Correos 3-5 Day Delivery\"\r\n              className=\"payment-screen__input mr-md\"\r\n              name=\"shippingOption\"\r\n              type=\"radio\"\r\n              value={3.99}\r\n              onChange={shippmentMethodHandler}\r\n            />\r\n            <Correos\r\n              style={{ width: \"7rem\", height: \"7rem\" }}\r\n              className=\"payment-screen__payment-icon mr-sm\"\r\n            />\r\n            Correos 3-5 Day Delivery <strong>&nbsp;&nbsp;( + 3.99 €)</strong>\r\n          </label>\r\n          <button className=\"payment-screen__ship-btn\">\r\n            Continue <AiOutlineDoubleRight className=\"payment-screen__arrows\" />{\" \"}\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PaymentScreen;\r\n","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\product-screen\\ProductScreen.js",["280","281"],"//! Core\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Link, useHistory, useRouteMatch } from \"react-router-dom\";\r\nimport \"./ProductScreen.scss\";\r\nimport axios from \"axios\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { roundToTwo } from \"../../utils\";\r\n\r\n//! Components\r\nimport LoaderGeneric from \"../../components/loader-generic/LoaderGeneric.js\";\r\nimport ActionShow from \"../../components/action-show/ActionShow.js\";\r\nimport AddReview from \"../../components/add-review/AddReview.js\";\r\nimport Review from \"../../components/review/Review\";\r\n\r\nimport Rating from \"@material-ui/lab/Rating\";\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\n//! Icons\r\nimport { FaHeart } from \"react-icons/fa\";\r\nimport { TiShoppingCart } from \"react-icons/ti\";\r\nimport { AiOutlineCheckCircle, AiOutlineCloseCircle } from \"react-icons/ai\";\r\n\r\n//! Redux Actions\r\nimport { addToCart, getCartProducts } from \"../../redux/cart/cart.actions.js\";\r\nimport { listFavoriteProducts } from \"../../redux/user/user.actions.js\";\r\nimport { listProductDetails } from \"../../redux/product/product.actions\";\r\n\r\n//!==================================================================\r\n\r\nconst ProductScreen = () => {\r\n  //! Hooks declaration\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const match = useRouteMatch();\r\n\r\n  //! State\r\n  const [like, setLike] = useState(false);\r\n\r\n  const [qty, setQty] = useState(1);\r\n  const [toCart, setToCart] = useState(false);\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  //! Redux data selection hook\r\n  const productDetailsInfo = useSelector((state) => state.productDetails);\r\n  const { loading, product } = productDetailsInfo;\r\n\r\n  const isFavorite = product?.likedBy?.find((id) => id == userInfo?._id);\r\n\r\n  //! Get the product by id from the API\r\n  useEffect(() => {\r\n    dispatch(listFavoriteProducts());\r\n    dispatch(listProductDetails(match.params.id));\r\n    if (isFavorite) {\r\n      setLike(true);\r\n    } else {\r\n      setLike(false);\r\n    }\r\n    return () => clearTimeout(timer);\r\n  }, [isFavorite, dispatch, match.params.id]);\r\n  let timer;\r\n  //!Handlers\r\n  const addToCartHandler = () => {\r\n    try {\r\n      if (!userInfo) {\r\n        history.push(\"/login\");\r\n      } else {\r\n        dispatch(addToCart(match.params.id, Number(qty)));\r\n        dispatch(getCartProducts());\r\n        setToCart(true);\r\n        timer = setTimeout(() => {\r\n          setToCart(false);\r\n        }, 3100);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const handleAddUserToLikedArrayAndProductToFavorites = async (id) => {\r\n    try {\r\n      if (!userInfo) {\r\n        history.push(\"/login\");\r\n      } else {\r\n        const config = {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${userInfo.token}`,\r\n          },\r\n        };\r\n        await axios.put(`/api/products/`, { _id: id }, config);\r\n        await axios.post(`/api/users/profile/favorites`, { _id: id }, config);\r\n        setLike(true);\r\n        dispatch(listFavoriteProducts());\r\n        dispatch(listProductDetails(match.params.id));\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const removeFromFavoriteHandler = (id) => {\r\n    const deleteProduct = async () => {\r\n      try {\r\n        const config = {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${userInfo.token}`,\r\n          },\r\n        };\r\n        await axios.delete(`/api/users/profile/favorites/${id}`, config);\r\n        setLike(false);\r\n        dispatch(listFavoriteProducts());\r\n        dispatch(listProductDetails(match.params.id));\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    deleteProduct();\r\n  };\r\n\r\n  const likedByNumber = product.likedBy.length;\r\n\r\n  return (\r\n    <>\r\n      {toCart ? <ActionShow /> : null}\r\n      <div className=\" top-links mb-sm\">\r\n        {\" \"}\r\n        <Link className=\"product-screen__link\" to=\"/\">\r\n          &#10092;&#10092; Home\r\n        </Link>\r\n        <span onClick={() => history.goBack()} className=\"product-screen__link\">\r\n          &#10092;&#10092; Back\r\n        </span>\r\n      </div>\r\n      {loading ? (\r\n        <LoaderGeneric />\r\n      ) : (\r\n        <>\r\n          <div className=\"product-screen__body\">\r\n            <h1 className=\"product-screen__name\">{product.name}</h1>\r\n            <div className=\"product-screen__image-wrapper\">\r\n              <img\r\n                className=\"product-screen__image\"\r\n                src={product.image}\r\n                alt=\"product\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"product-screen__price\">\r\n              <h4 className=\" product-screen__price--title\">PRICE</h4>\r\n              <span className=\" product-screen__price--value\">\r\n                {product.onOffer ? (\r\n                  <strong style={{ textAlign: \"center\" }}>\r\n                    {\" \"}\r\n                    €{\" \"}\r\n                    {roundToTwo(\r\n                      product.price -\r\n                        product.price * (product.offerPriceDiscount / 100)\r\n                    )}{\" \"}\r\n                    <br />\r\n                    <s style={{ fontSize: \"1.3rem\", width: \"100%\" }}>\r\n                      {\" \"}\r\n                      € {product.price}\r\n                    </s>\r\n                  </strong>\r\n                ) : (\r\n                  <strong>\r\n                    {\" \"}\r\n                    €{\" \"}\r\n                    {roundToTwo(\r\n                      product.price -\r\n                        product.price * (product.offerPriceDiscount / 100)\r\n                    )}{\" \"}\r\n                  </strong>\r\n                )}\r\n              </span>\r\n              {product.countInStock > 0 ? (\r\n                <p className=\"product-screen__stock\">\r\n                  <AiOutlineCheckCircle />\r\n                  &nbsp;&nbsp;Product is in stock\r\n                </p>\r\n              ) : (\r\n                <p className=\"product-screen__stock product-screen__stock--out\">\r\n                  <AiOutlineCloseCircle />\r\n                  &nbsp;&nbsp; Product out of stock\r\n                </p>\r\n              )}\r\n\r\n              {product.countInStock > 0 && (\r\n                <div className=\"product-screen__quantity-selector\">\r\n                  <form action=\"\">\r\n                    <label\r\n                      className=\"product-screen__quantity-selector--text\"\r\n                      htmlFor=\"quantity\"\r\n                    >\r\n                      Select quantity\r\n                    </label>\r\n                    <select\r\n                      className=\"product-screen__quantity-selector--selection\"\r\n                      value={qty}\r\n                      name=\"quantity\"\r\n                      id=\"quantity\"\r\n                      onChange={(e) => setQty(e.target.value)}\r\n                    >\r\n                      {[...Array(product.countInStock).keys()].map((el) => (\r\n                        <option\r\n                          className=\"product-screen__quantity-selector--option\"\r\n                          key={el + 1}\r\n                          value={el + 1}\r\n                        >\r\n                          {el + 1}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                  </form>\r\n                </div>\r\n              )}\r\n              {product.countInStock === 0 ? (\r\n                <button className=\"product-screen__button-disabled\">\r\n                  {\" \"}\r\n                  <TiShoppingCart className=\"product-screen__button--icon\" />{\" \"}\r\n                  out of stock{\" \"}\r\n                </button>\r\n              ) : (\r\n                <button\r\n                  onClick={async () => addToCartHandler()}\r\n                  className=\"product-screen__button\"\r\n                >\r\n                  <TiShoppingCart className=\"product-screen__button--icon\" />{\" \"}\r\n                  Add to cart\r\n                </button>\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"product-screen__rating\">\r\n              <span className=\"product__rating-text\">\r\n                User Rating:&nbsp;&nbsp;&nbsp;\r\n                <strong>{roundToTwo(product.rating)}</strong> (\r\n                {product.numReviews} reviews)\r\n              </span>\r\n              <Box component=\"fieldset\" borderColor=\"transparent\">\r\n                <Rating\r\n                  name=\"Product Rating\"\r\n                  title=\"Product Rating\"\r\n                  value={product.rating || 0}\r\n                  size=\"large\"\r\n                  readOnly\r\n                />\r\n              </Box>\r\n            </div>\r\n            <div className=\"product-screen__add-favorite\">\r\n              {like ? (\r\n                <div className=\"product-screen__add-favorite--flex\">\r\n                  <FaHeart\r\n                    onClick={() => {\r\n                      removeFromFavoriteHandler(product._id);\r\n                    }}\r\n                    className=\"product-screen__heart product-screen__heart--selected\"\r\n                  />\r\n                  <span className=\"product-screen__add-favorite--text ml-sm\">\r\n                    FAVORITE PRODUCT\r\n                  </span>{\" \"}\r\n                </div>\r\n              ) : (\r\n                <div className=\"product-screen__add-favorite--flex\">\r\n                  <FaHeart\r\n                    onClick={() => {\r\n                      handleAddUserToLikedArrayAndProductToFavorites(\r\n                        product._id\r\n                      );\r\n                    }}\r\n                    className=\"product-screen__heart\"\r\n                  />\r\n                  <span className=\"product-screen__add-favorite--text ml-sm\">\r\n                    ADD TO FAVORITES\r\n                  </span>\r\n                </div>\r\n              )}\r\n              <span className=\"product-screen__add-favorite--favorite-by\">\r\n                {\" \"}\r\n                ( Favorite by {likedByNumber}{\" \"}\r\n                {likedByNumber > 1 ? \"users\" : \"user\"} )\r\n              </span>\r\n            </div>\r\n            <div className=\"product-screen__details\">\r\n              <h3 className=\"heading-3 product-screen__product-description-title\">\r\n                {\" \"}\r\n                <strong>PRODUCT DESCRIPTION</strong>{\" \"}\r\n              </h3>\r\n              <p className=\"product-screen__details--text\">\r\n                {product.description}\r\n              </p>\r\n            </div>\r\n          </div>\r\n          <div style={{ width: \"50%\" }}>\r\n            <AddReview showModal={false} productId={product._id} />\r\n          </div>\r\n          <div className=\"line-break\"></div>\r\n\r\n          {product.reviews.map((review) => (\r\n            <Review key={review._id} review={review} />\r\n          ))}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductScreen;\r\n","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\complete-order-screen\\CompleteOrder.js",["282","283","284"],"//! Core\r\nimport React, { useState, useEffect } from \"react\";\r\nimport \"./CompleteOrder.scss\";\r\nimport axios from \"axios\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { roundToTwo } from \"../../utils.js\";\r\n\r\n//! Components\r\nimport CheckoutSteps from \"../../components/checkout-steps/CheckoutSteps\";\r\n\r\n//! Icons\r\nimport { GrPaypal, GrCreditCard, GrStripe } from \"react-icons/gr\";\r\n\r\n//! Redux Actions\r\nimport {\r\n  addOrderAddress,\r\n  createOrder,\r\n  saveOrderPaymentMethod,\r\n} from \"../../redux/order/order.actions\";\r\nimport { addToCart, getCartProducts } from \"../../redux/cart/cart.actions.js\";\r\nimport { productConstants } from \"../../redux/product/product.constants\";\r\n\r\n//todo implement gsapp to stop the buy now on screen\r\n//!=======================================================\r\n\r\nconst CompleteOrder = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const cart = useSelector((state) => state.cart);\r\n  const { cartProducts } = cart;\r\n  const orderAddressState = useSelector((state) => state.orderAddress);\r\n  const { orderAddress } = orderAddressState;\r\n\r\n  const orderCreate = useSelector((state) => state.orderCreate);\r\n  const { order, success, error } = orderCreate;\r\n\r\n  const orderPaymentMethod = useSelector((state) => state.orderPaymentMethod);\r\n  const paymentMethod = orderPaymentMethod.paymentMethod;\r\n  const { shippingMethod } = orderPaymentMethod;\r\n  //! REMOVE ALL CART ITEMS WHEN YOU PLACE THE ORDER==\r\n\r\n  const clearCartHandler = async () => {\r\n    try {\r\n      if (!userInfo) {\r\n        history.push(\"/login\");\r\n      } else {\r\n        const config = {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${userInfo.token}`,\r\n          },\r\n        };\r\n        await axios.delete(`/api/cart`, config);\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n  //!==================================================\r\n  useEffect(() => {\r\n    if (success) {\r\n      history.push(`/profile/orders/${order._id}`);\r\n    }\r\n    if (!orderAddress.fullName) {\r\n      history.push(\"/shipping\");\r\n    } else if (!orderPaymentMethod.paymentMethod) {\r\n      history.push(\"/payment\");\r\n    }\r\n  }, [orderAddress, history, orderPaymentMethod, order]);\r\n  const removeCartProduct = (id) => {\r\n    const deleteProduct = async () => {\r\n      try {\r\n        const config = {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${userInfo.token}`,\r\n          },\r\n        };\r\n        await axios.delete(`/api/cart/${id}`, config);\r\n\r\n        dispatch(getCartProducts());\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    deleteProduct();\r\n  };\r\n\r\n  const subtotal = cartProducts.reduce(\r\n    (accum, cartItem) =>\r\n      accum +\r\n      cartItem.quantity *\r\n        roundToTwo(\r\n          cartItem.product.price -\r\n            cartItem.product.price * (cartItem.product.offerPriceDiscount / 100)\r\n        ),\r\n    0\r\n  );\r\n  const totalPrice = roundToTwo(subtotal + shippingMethod.price);\r\n\r\n  //* Place order action ======================================\r\n  const placeOrderHandler = async () => {\r\n    dispatch(\r\n      createOrder({\r\n        orderItems: cartProducts,\r\n        shippingAddress: orderAddress,\r\n        paymentMethod: paymentMethod,\r\n        itemsPrice: roundToTwo(subtotal),\r\n        shippingPrice: roundToTwo(shippingMethod.price),\r\n        shippingMethod: shippingMethod.name,\r\n        totalPrice: roundToTwo(totalPrice),\r\n      })\r\n    );\r\n\r\n    clearCartHandler();\r\n    dispatch(getCartProducts());\r\n  };\r\n  //*============================================================\r\n  return (\r\n    <div className=\"complete-order shipping-section\">\r\n      <CheckoutSteps active3=\"selected-3\" />\r\n      <div>\r\n        <h1 className=\"heading-1  mt-sm mb-sm\">Order summary</h1>\r\n      </div>\r\n      <div className=\"complete-order__grid\">\r\n        <div className=\"complete-order__address-info complete-order__steps-container\">\r\n          <h3 className=\"heading-3 complete-order__steps-title mb-sm mt-sm\">\r\n            1. Shipping address\r\n          </h3>\r\n          <address className=\"complete-order__middle-text\">\r\n            <p>{orderAddress.fullName}</p>\r\n            <p>{orderAddress.line1}</p>\r\n            <p>{orderAddress.line2}</p>\r\n            <p>{orderAddress.city}</p>\r\n            <p>{orderAddress.stateProvinceRegion}</p>\r\n            <p>{orderAddress.country}</p>\r\n            <p>{orderAddress.postalCode}</p>\r\n            <p>{orderAddress.phoneNumber}</p>\r\n          </address>\r\n          <span\r\n            onClick={() => {\r\n              dispatch(addOrderAddress({}));\r\n            }}\r\n            className=\"complete-order__change-link\"\r\n          >\r\n            Change address\r\n          </span>\r\n        </div>\r\n        <div className=\"complete-order__payment-info complete-order__steps-container\">\r\n          <h3 className=\"heading-3 complete-order__steps-title mb-sm mt-sm\">\r\n            2. Payment Method\r\n          </h3>\r\n          <p\r\n            style={{ alignSelf: \"center\", fontSize: \"1.4rem\" }}\r\n            className=\"complete-order__middle-text\"\r\n          >\r\n            {paymentMethod === \"PayPal\" ? (\r\n              <GrPaypal className=\" mr-sm\" />\r\n            ) : paymentMethod === \"Credit Card\" ? (\r\n              <GrCreditCard className=\" mr-sm\" />\r\n            ) : (\r\n              <GrStripe className=\" mr-sm\" />\r\n            )}\r\n            {paymentMethod}\r\n          </p>\r\n          <span\r\n            onClick={() => {\r\n              dispatch(saveOrderPaymentMethod(\"\", {}));\r\n            }}\r\n            className=\"complete-order__change-link\"\r\n          >\r\n            Change payment\r\n          </span>\r\n        </div>\r\n        <div className=\"complete-order__shipment-info complete-order__steps-container\">\r\n          <h3 className=\"heading-3 complete-order__steps-title mb-sm mt-sm\">\r\n            3. Shipment Method\r\n          </h3>\r\n          <p\r\n            style={{ alignSelf: \"center\" }}\r\n            className=\"complete-order__middle-text\"\r\n          >\r\n            {shippingMethod.name} &nbsp;{\" \"}\r\n            <span style={{ color: \" #fd3e3e\" }}>\r\n              + {shippingMethod.price} €\r\n            </span>\r\n          </p>\r\n\r\n          <span\r\n            onClick={() => dispatch(saveOrderPaymentMethod(\"\", {}))}\r\n            className=\"complete-order__change-link\"\r\n          >\r\n            Change shipment\r\n          </span>\r\n        </div>\r\n        <div className=\"complete-order__products-info \">\r\n          <h3\r\n            style={{ padding: \"1rem\" }}\r\n            className=\"heading-3 complete-order__steps-title mb-sm mt-sm\"\r\n          >\r\n            4. Review Products\r\n          </h3>\r\n\r\n          {cartProducts.length === 0 ? (\r\n            <h3 className=\"heading-3 complete-order__steps-title\">\r\n              Cart is empty\r\n            </h3>\r\n          ) : (\r\n            cartProducts.map((item) => (\r\n              <div key={item.product._id} className=\"complete-order__item\">\r\n                <img\r\n                  onClick={() => {\r\n                    dispatch({ type: productConstants.PRODUCT_DETAILS_RESET });\r\n                    history.push(`/product/${item.product._id}`);\r\n                  }}\r\n                  src={item.product.image}\r\n                  alt={item.product.name}\r\n                  className=\"complete-order__image\"\r\n                />\r\n                <div className=\"complete-order__item-details\">\r\n                  <h4\r\n                    onClick={() => {\r\n                      dispatch({\r\n                        type: productConstants.PRODUCT_DETAILS_RESET,\r\n                      });\r\n                      history.push(`/product/${item.product._id}`);\r\n                    }}\r\n                    className=\"heading-4 complete-order__item-details--title\"\r\n                  >\r\n                    {item.product.name} x {item.quantity}\r\n                  </h4>\r\n                  {item.product.countInStock ? (\r\n                    <h3 className=\"in-stock\">In stock</h3>\r\n                  ) : (\r\n                    <h3 className=\"out-of-stock-favorites\">Not in stock</h3>\r\n                  )}\r\n                  <h4 className=\"heading-4 complete-order__item-details--price\">\r\n                    PRICE:\r\n                  </h4>\r\n                  <h4 className=\"heading-4 complete-order__item-details--price-value\">\r\n                    €{\" \"}\r\n                    {roundToTwo(\r\n                      item.product.price -\r\n                        item.product.price *\r\n                          (item.product.offerPriceDiscount / 100)\r\n                    )}{\" \"}\r\n                    &#10006;&nbsp;\r\n                    {item.product.countInStock > 0 && (\r\n                      <div className=\"complete-order__quantity-selector complete-order__quantity-selector\">\r\n                        <form action=\"\">\r\n                          <label\r\n                            className=\"complete-order__quantity-selector--text\"\r\n                            htmlFor=\"quantity\"\r\n                          >\r\n                            quantity\r\n                          </label>\r\n                          <select\r\n                            className=\"complete-order__quantity-selector--selection\"\r\n                            value={item.quantity}\r\n                            name=\"quantity\"\r\n                            id=\"quantity\"\r\n                            onChange={(e) => {\r\n                              dispatch(\r\n                                addToCart(\r\n                                  item.product._id,\r\n                                  Number(e.target.value)\r\n                                )\r\n                              );\r\n                              dispatch(getCartProducts());\r\n                            }}\r\n                          >\r\n                            {[...Array(item.product.countInStock).keys()].map(\r\n                              (el) => (\r\n                                <option\r\n                                  className=\"complete-order__quantity-selector--option\"\r\n                                  key={el + 1}\r\n                                  value={el + 1}\r\n                                >\r\n                                  {el + 1}\r\n                                </option>\r\n                              )\r\n                            )}\r\n                          </select>\r\n                        </form>\r\n                      </div>\r\n                    )}\r\n                  </h4>\r\n                  <span\r\n                    onClick={() => removeCartProduct(item._id)}\r\n                    className=\"complete-order__remove\"\r\n                  >\r\n                    Remove\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            ))\r\n          )}\r\n        </div>\r\n        <div className=\"complete-order__summary\">\r\n          {cartProducts.length === 0 ? (\r\n            <button className=\" complete-order__btn  btn-disabled\">\r\n              Cart is empty\r\n            </button>\r\n          ) : (\r\n            <button\r\n              onClick={placeOrderHandler}\r\n              className=\"complete-order__buy-btn complete-order__btn\"\r\n            >\r\n              PLACE ORDER\r\n            </button>\r\n          )}\r\n          <h3 className=\"heading-3 complete-order__summary--title\">\r\n            Order Price\r\n          </h3>\r\n          <span style={{ gridColumn: \"1/3\", fontSize: \"1.2rem\" }}>\r\n            (All prices include VAT)\r\n          </span>\r\n          <h4 className=\"heading-4 complete-order__summary--text\">Products:</h4>\r\n          <span className=\"complete-order__summary--value\">\r\n            {roundToTwo(subtotal)}€\r\n          </span>\r\n          <h4 className=\"heading-4 complete-order__summary--text\">Shipping:</h4>\r\n          <span className=\"complete-order__summary--value\">\r\n            {shippingMethod.price}€\r\n          </span>\r\n          <h2 className=\"heading-2 complete-order__summary--total\">TOTAL:</h2>\r\n          <h2 className=\"heading-2 complete-order__summary--total-value\">\r\n            {totalPrice}€\r\n          </h2>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CompleteOrder;\r\n","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\redux\\user\\user.actions.js",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\redux\\order\\order.actions.js",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\profile-sidebar\\ProfileSidebar.js",["285"],"import React, { useEffect } from \"react\";\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport \"./ProfileSidebar.scss\";\r\nimport { listFavoriteProducts } from \"../../redux/user/user.actions.js\";\r\nimport { FaHeart } from \"react-icons/fa\";\r\nimport { BiShoppingBag } from \"react-icons/bi\";\r\n//!=======================================================================\r\n\r\nfunction ProfileSidebar() {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const favoriteProductsList = useSelector(\r\n    (state) => state.userFavoriteProducts\r\n  );\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const { userFavoriteProducts, loading } = favoriteProductsList;\r\n  const favoriteProductsLength = userFavoriteProducts.length;\r\n\r\n  const cartItems = useSelector((state) => state.cart);\r\n  const { cartProducts } = cartItems;\r\n  const cartItemsNumber = cartProducts.reduce(\r\n    (accum, cartItem) => accum + cartItem.quantity,\r\n    0\r\n  );\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/login\");\r\n    }\r\n    dispatch(listFavoriteProducts());\r\n  }, [history, userInfo, dispatch]);\r\n  return (\r\n    <div className=\"profile-sidebar\">\r\n      <h1 className=\"profile-screen__title\">Your Account</h1>\r\n      <NavLink\r\n        className=\"profile-sidebar__options\"\r\n        activeClassName=\"profile-sidebar__active-link\"\r\n        to=\"/profile/info\"\r\n      >\r\n        {\" \"}\r\n        <p>Info</p>{\" \"}\r\n      </NavLink>\r\n\r\n      <NavLink\r\n        className=\"profile-sidebar__options\"\r\n        activeClassName=\"profile-sidebar__active-link\"\r\n        to=\"/profile/addresses\"\r\n      >\r\n        {\" \"}\r\n        <p>Addresses</p>{\" \"}\r\n      </NavLink>\r\n\r\n      <NavLink\r\n        className=\"profile-sidebar__options\"\r\n        activeClassName=\"profile-sidebar__active-link\"\r\n        to=\"/profile/favorites\"\r\n      >\r\n        {\" \"}\r\n        <p\r\n          style={{\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          Favorites &nbsp;\r\n          <i\r\n            style={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            ({favoriteProductsLength}&nbsp;{\" \"}\r\n            <FaHeart style={{ color: \" #fd3e3e\" }} />)\r\n          </i>{\" \"}\r\n        </p>\r\n      </NavLink>\r\n\r\n      <NavLink\r\n        activeClassName=\"profile-sidebar__active-link\"\r\n        className=\"profile-sidebar__options\"\r\n        to=\"/profile/reviews\"\r\n      >\r\n        {\" \"}\r\n        <p>Reviews</p>{\" \"}\r\n      </NavLink>\r\n\r\n      <NavLink\r\n        className=\"profile-sidebar__options\"\r\n        activeClassName=\"profile-sidebar__active-link\"\r\n        to=\"/profile/messages\"\r\n      >\r\n        {\" \"}\r\n        <p>Messages</p>{\" \"}\r\n      </NavLink>\r\n\r\n      <h1 className=\"profile-screen__title\">Orders</h1>\r\n      <NavLink\r\n        className=\"profile-sidebar__options\"\r\n        activeClassName=\"profile-sidebar__active-link\"\r\n        to=\"/profile/orders\"\r\n      >\r\n        {\" \"}\r\n        <p>Orders & Bills</p>{\" \"}\r\n      </NavLink>\r\n\r\n      <NavLink\r\n        className=\"profile-sidebar__options\"\r\n        activeClassName=\"profile-sidebar__active-link\"\r\n        to=\"/profile/checkout\"\r\n      >\r\n        {\" \"}\r\n        <p\r\n          style={{\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          Checkout &nbsp;\r\n          <i\r\n            style={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            ({cartItemsNumber}&nbsp;\r\n            <BiShoppingBag />)\r\n          </i>\r\n        </p>{\" \"}\r\n      </NavLink>\r\n\r\n      <NavLink\r\n        className=\"profile-sidebar__options\"\r\n        activeClassName=\"profile-sidebar__active-link\"\r\n        to=\"/profile/returns\"\r\n      >\r\n        {\" \"}\r\n        <p>Item returns</p>{\" \"}\r\n      </NavLink>\r\n\r\n      <NavLink\r\n        activeClassName=\"profile-sidebar__active-link\"\r\n        className=\"profile-sidebar__options\"\r\n        to=\"/profile/warranty\"\r\n      >\r\n        {\" \"}\r\n        <p>Warranty</p>{\" \"}\r\n      </NavLink>\r\n\r\n      <h1 className=\"profile-screen__title\">Payment</h1>\r\n      <NavLink\r\n        activeClassName=\"profile-sidebar__active-link\"\r\n        className=\"profile-sidebar__options\"\r\n        to=\"/profile/cards\"\r\n      >\r\n        {\" \"}\r\n        <p>Your cards</p>{\" \"}\r\n      </NavLink>\r\n\r\n      <NavLink\r\n        className=\"profile-sidebar__options\"\r\n        activeClassName=\"profile-sidebar__active-link\"\r\n        to=\"/profile/payment-methods\"\r\n      >\r\n        {\" \"}\r\n        <p>Other payment methods</p>{\" \"}\r\n      </NavLink>\r\n\r\n      <NavLink\r\n        className=\"profile-sidebar__options\"\r\n        activeClassName=\"profile-sidebar__active-link\"\r\n        to=\"/profile/discounts\"\r\n      >\r\n        {\" \"}\r\n        <p>Discount coupons</p>{\" \"}\r\n      </NavLink>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProfileSidebar;\r\n","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\profile-info-screen\\YourInfo.js",["286"],"import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  getUserDetails,\r\n  updateUserProfile,\r\n} from \"../../redux/user/user.actions.js\";\r\nimport \"./YourInfo.scss\";\r\nimport ErrorMessage from \"../../components/error-message/ErrorMessage.js\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport LoaderGeneric from \"../../components/loader-generic/LoaderGeneric\";\r\n//!==================================================\r\n\r\nconst YourInfo = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [message, setMessage] = useState(null);\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { user, loading } = userDetails;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const [edit, setEdit] = useState(false);\r\n\r\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile);\r\n  const { success } = userUpdateProfile;\r\n\r\n  const [successColor, setSuccessColor] = useState(\"alert\");\r\n  const [error, setError] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/login\");\r\n    } else {\r\n      if (!user.name) {\r\n        dispatch(getUserDetails(\"profile\"));\r\n      } else {\r\n        setName(user.name);\r\n        setEmail(user.email);\r\n      }\r\n    }\r\n    return () => clearTimeout(timer);\r\n  }, [history, userInfo, user, dispatch]);\r\n\r\n  let timer;\r\n\r\n  const passwordLength = password.length < 6 ? false : true;\r\n  const passwordLowercase = /[a-z]/.test(password) < 1 ? false : true;\r\n  const passwordUppercase = /[A-Z]/.test(password) < 1 ? false : true;\r\n  const passwordNumber = /[0-9]/.test(password) < 1 ? false : true;\r\n  const passwordEqualConfirmPassword =\r\n    password !== confirmPassword ? false : true;\r\n\r\n  const handleEdit = () => setEdit(!edit);\r\n\r\n  const handleUserInfoUpdate = () => {\r\n    setMessage(\"Your profile has been successfully updated.\");\r\n    setSuccessColor(\"success\");\r\n    dispatch(\r\n      updateUserProfile({\r\n        id: user._id,\r\n        name,\r\n      })\r\n    );\r\n  };\r\n  const handlePasswordUpdate = (e) => {\r\n    e.preventDefault();\r\n    //!Password check =====================\r\n\r\n    if (\r\n      passwordLength &&\r\n      passwordLowercase &&\r\n      passwordUppercase &&\r\n      passwordNumber &&\r\n      passwordEqualConfirmPassword\r\n    ) {\r\n      //! Dispatch Login ====================\r\n      dispatch(\r\n        updateUserProfile({\r\n          id: user._id,\r\n          password,\r\n        })\r\n      );\r\n      setPassword(\"\");\r\n      setConfirmPassword(\"\");\r\n      setMessage(\"Your password has been successfully changed\");\r\n      setSuccessColor(\"success\");\r\n    } else {\r\n      timer = setTimeout(() => {\r\n        setError(true);\r\n      }, 100);\r\n      setError(false);\r\n      setMessage(\"You must comply with all the password requisites.\");\r\n      setSuccessColor(\"alert\");\r\n    }\r\n  };\r\n  return loading ? (\r\n    <LoaderGeneric />\r\n  ) : (\r\n    <div className=\"your-info\">\r\n      <div className=\"your-info__header\">\r\n        <div className=\"your-info__header-img\">\r\n          <h1 className=\"your-info__title--name\">{name}</h1>\r\n          <h2 className=\"your-info__title--email\">{email}</h2>\r\n          <img\r\n            className=\"your-info__header--avatar\"\r\n            src=\"https://st4.depositphotos.com/5575514/23597/v/600/depositphotos_235978748-stock-illustration-neutral-profile-picture.jpg\"\r\n            alt=\"avatar\"\r\n          />\r\n        </div>\r\n      </div>\r\n      <main className=\"profile-main\">\r\n        {success ? (\r\n          <ErrorMessage color={successColor}>{message}</ErrorMessage>\r\n        ) : null}\r\n        {error ? (\r\n          <ErrorMessage color={successColor}>{message}</ErrorMessage>\r\n        ) : null}\r\n        <h1 className=\"heading-1\">YOUR INFO</h1>\r\n        <div className=\"your-info__my-details\">\r\n          <div>\r\n            <h3 className=\"heading-3\">Personal details</h3>\r\n            <p className=\"your-info__address-label\">\r\n              <strong>Full name</strong>\r\n            </p>\r\n            {edit ? (\r\n              <input\r\n                onChange={(e) => setName(e.target.value)}\r\n                value={name}\r\n                className=\"your-info__password-section__input\"\r\n              />\r\n            ) : (\r\n              <p className=\"your-info__address-text\">{name}</p>\r\n            )}\r\n            <p className=\"your-info__address-label\">\r\n              <strong>Email</strong>\r\n            </p>\r\n\r\n            <p className=\"your-info__address-text\">{email}</p>\r\n            {edit ? (\r\n              <p style={{ fontSize: \"1.2rem\", color: \"grey\" }}>\r\n                Email cannot be changed\r\n              </p>\r\n            ) : (\r\n              <p style={{ fontSize: \"1.2rem\" }}>&nbsp;</p>\r\n            )}\r\n          </div>\r\n\r\n          {edit ? (\r\n            <button\r\n              className=\"your-info__info-edit-btn\"\r\n              onClick={() => {\r\n                handleEdit();\r\n                handleUserInfoUpdate();\r\n              }}\r\n            >\r\n              {\" \"}\r\n              Save changes\r\n            </button>\r\n          ) : (\r\n            <button\r\n              className=\"your-info__info-edit-btn\"\r\n              onClick={() => handleEdit()}\r\n            >\r\n              {\" \"}\r\n              Edit info\r\n            </button>\r\n          )}\r\n        </div>\r\n        <div className=\"line-break\" />\r\n        <h3 className=\" heading-3 your-info__title\">Password</h3>\r\n        <div className=\"your-info__password-section\">\r\n          <form\r\n            className=\"your-info__password-section__form\"\r\n            onSubmit={handlePasswordUpdate}\r\n          >\r\n            {/* <label\r\n          className=\"your-info__password-section__label\"\r\n          htmlFor=\"oldPassword\"\r\n        >\r\n          Old password\r\n        </label> */}\r\n\r\n            <label\r\n              className=\"your-info__password-section__label\"\r\n              htmlFor=\"newPassword\"\r\n            >\r\n              New password\r\n            </label>\r\n\r\n            {/* <input\r\n          className=\"your-info__password-section__input\"\r\n          name=\"oldPassword\"\r\n          type=\"password\"\r\n        /> */}\r\n            <input\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              className=\"your-info__password-section__input\"\r\n              name=\"newPassword\"\r\n              type=\"password\"\r\n            />\r\n            <label\r\n              className=\"your-info__password-section__label\"\r\n              htmlFor=\"repeatPassword\"\r\n            >\r\n              Confirm new password\r\n            </label>\r\n            <input\r\n              value={confirmPassword}\r\n              onChange={(e) => setConfirmPassword(e.target.value)}\r\n              className=\"your-info__password-section__input\"\r\n              name=\"repeatPassword\"\r\n              type=\"password\"\r\n            />\r\n          </form>\r\n          <div className=\"signup__password-box your-info__password-section__password-box\">\r\n            <h3>New password must:</h3>\r\n            <p\r\n              className={\r\n                passwordEqualConfirmPassword\r\n                  ? \"signup__password-box--fail\"\r\n                  : \"signup__password-box--checked\"\r\n              }\r\n            >\r\n              match Confirm Password\r\n            </p>\r\n            <p\r\n              className={\r\n                passwordUppercase\r\n                  ? \"signup__password-box--fail\"\r\n                  : \"signup__password-box--checked\"\r\n              }\r\n            >\r\n              contain an uppercase letter\r\n            </p>\r\n            <p\r\n              className={\r\n                passwordLowercase\r\n                  ? \"signup__password-box--fail\"\r\n                  : \"signup__password-box--checked\"\r\n              }\r\n            >\r\n              contain an lowercase letter\r\n            </p>\r\n            <p\r\n              className={\r\n                passwordNumber\r\n                  ? \"signup__password-box--fail\"\r\n                  : \"signup__password-box--checked\"\r\n              }\r\n            >\r\n              contain a number\r\n            </p>\r\n            <p\r\n              className={\r\n                passwordLength\r\n                  ? \"signup__password-box--fail\"\r\n                  : \"signup__password-box--checked\"\r\n              }\r\n            >\r\n              be at least 6 characters long\r\n            </p>\r\n          </div>\r\n          <input\r\n            onClick={handlePasswordUpdate}\r\n            className=\"your-info__password-submit\"\r\n            type=\"submit\"\r\n            value=\"Update password\"\r\n          />\r\n        </div>\r\n        <div className=\"line-break\" />\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default YourInfo;\r\n","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\profile-addresses-screen\\ProfileAddresses.js",["287"],"import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getUserAddresses } from \"../../redux/user/user.actions.js\";\r\nimport \"./ProfileAddresses.scss\";\r\nimport AddressEdit from \"../../modals/address-edit-modal/AddressEdit\";\r\nimport AddAddress from \"../../components/add-address/AddAddress.js\";\r\nimport axios from \"axios\";\r\n//!=============================================\r\n\r\nconst ProfileAddresses = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const [addAddressToggle, setAddAddressToggle] = useState(false);\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { user } = userDetails;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile);\r\n  const { success } = userUpdateProfile;\r\n\r\n  const userAddresses = useSelector((state) => state.userAddresses);\r\n\r\n  const { addresses } = userAddresses;\r\n\r\n  const handleAddAddress = () => {\r\n    setAddAddressToggle(!addAddressToggle);\r\n  };\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/login\");\r\n    }\r\n    dispatch(getUserAddresses());\r\n  }, [history, userInfo, user, dispatch]);\r\n\r\n  const deleteAddressHandler = (id) => {\r\n    const deleteAddress = async () => {\r\n      try {\r\n        const config = {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${userInfo.token}`,\r\n          },\r\n        };\r\n        await axios.delete(`/api/users/profile/addresses/${id}`, config);\r\n\r\n        dispatch(getUserAddresses());\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    deleteAddress();\r\n  };\r\n\r\n  return (\r\n    <div className=\"profile-addresses\">\r\n      <h1 className=\"heading-1 \">YOUR ADDRESSES</h1>\r\n      <div className=\"profile-addresses__grid\">\r\n        {addresses\r\n          ? addresses.map((address, idx) => (\r\n              <div key={address._id} className=\"gradient-wrapper\">\r\n                <div className=\"profile-addresses__address\">\r\n                  <h3 className=\"profile-addresses__address__title\">\r\n                    Address {idx + 1}\r\n                  </h3>\r\n\r\n                  <address>\r\n                    <p className=\"profile-addresses__text\">\r\n                      <strong>{address.fullName}</strong>\r\n                    </p>\r\n                    <p className=\"profile-addresses__text\">{address.line1}</p>\r\n                    <p className=\"profile-addresses__text\">{address.line2}</p>\r\n                    <p className=\"profile-addresses__text\">\r\n                      {address.city} , {address.stateProvinceRegion} ,{\" \"}\r\n                      {address.postalCode}\r\n                    </p>\r\n\r\n                    <p className=\"profile-addresses__text\">{address.country}</p>\r\n                    <p className=\"profile-addresses__text\">\r\n                      {address.phoneNumber}\r\n                    </p>\r\n                  </address>\r\n                  <div className=\"profile-addresses__address__bottom-links\">\r\n                    <AddressEdit address={address} />\r\n                    <span\r\n                      onClick={() => {\r\n                        deleteAddressHandler(address._id);\r\n                      }}\r\n                      className=\"profile-addresses__address__bottom-links--action \"\r\n                    >\r\n                      Delete\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))\r\n          : \"\"}\r\n        <address\r\n          onClick={handleAddAddress}\r\n          className=\"profile-addresses__address profile-addresses__add-address\"\r\n        >\r\n          <span style={{ fontSize: \"8rem\" }}>&#9783;</span>\r\n          Add new address\r\n        </address>\r\n      </div>\r\n      <div className=\"line-break\" />\r\n\r\n      {addAddressToggle ? <AddAddress /> : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileAddresses;\r\n","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\checkout-screen\\Checkout.js",["288","289"],"//! Core\r\nimport React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"./Checkout.scss\";\r\nimport { roundToTwo } from \"../../utils.js\";\r\nimport axios from \"axios\";\r\n\r\n//! Components\r\nimport StarRatings from \"react-star-ratings\";\r\n\r\n//! Redux Actions\r\nimport { getCartProducts, addToCart } from \"../../redux/cart/cart.actions.js\";\r\nimport { productConstants } from \"../../redux/product/product.constants\";\r\n\r\n//!=======================================================\r\nconst Checkout = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const cartItems = useSelector((state) => state.cart);\r\n  const { loading, cartProducts } = cartItems;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const cartItemsNumber = cartProducts.reduce(\r\n    (accum, cartItem) => accum + cartItem.quantity,\r\n    0\r\n  );\r\n  //todo if the item is in cart but it runs out of stock it still calculates it to the total... do a check to eliminate the cart item out of stock first\r\n  const subtotal = cartProducts.reduce(\r\n    (accum, cartItem) =>\r\n      accum +\r\n      cartItem.quantity *\r\n        roundToTwo(\r\n          cartItem.product.price -\r\n            cartItem.product.price * (cartItem.product.offerPriceDiscount / 100)\r\n        ),\r\n    0\r\n  );\r\n\r\n  const removeCartProduct = (id) => {\r\n    const deleteProduct = async () => {\r\n      try {\r\n        const config = {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${userInfo.token}`,\r\n          },\r\n        };\r\n        await axios.delete(`/api/cart/${id}`, config);\r\n\r\n        dispatch(getCartProducts());\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    deleteProduct();\r\n  };\r\n\r\n  const checkoutHandler = () => {\r\n    history.push(\"/shipping\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"checkout-screen\">\r\n      <h1 className=\"heading-1  \">CHECK OUT</h1>\r\n      <div className=\"checkout-screen__subtotal\">\r\n        <div>\r\n          <h3 className=\"checkout-screen__subtotal--title\">\r\n            Subtotal ({cartItemsNumber} products):\r\n          </h3>\r\n          <h3 className=\"checkout-screen__subtotal--value\">\r\n            € {roundToTwo(subtotal)}\r\n          </h3>\r\n        </div>\r\n        {cartItemsNumber === 0 ? (\r\n          <button className=\" btn-disabled\">Cart is empty</button>\r\n        ) : (\r\n          <button\r\n            onClick={() => {\r\n              checkoutHandler();\r\n            }}\r\n            className=\"checkout-screen__subtotal--button\"\r\n          >\r\n            Proceed to checkout\r\n          </button>\r\n        )}\r\n      </div>\r\n      <h2 className=\"checkout-screen__item-count\">\r\n        You have {cartItemsNumber} items in your cart.\r\n      </h2>\r\n      {cartProducts.map((item) => (\r\n        <div key={item.product._id} className=\"checkout-screen__item\">\r\n          <img\r\n            onClick={() => {\r\n              history.push(`/product/${item.product._id}`);\r\n              dispatch({ type: productConstants.PRODUCT_DETAILS_RESET });\r\n            }}\r\n            src={item.product.image}\r\n            alt={item.product.name}\r\n            className=\"checkout-screen__image\"\r\n          />\r\n          <div className=\"checkout-screen__item-details\">\r\n            <h3\r\n              onClick={() => {\r\n                history.push(`/product/${item.product._id}`);\r\n                dispatch({ type: productConstants.PRODUCT_DETAILS_RESET });\r\n              }}\r\n              className=\"heading-3 checkout-screen__item-details--title\"\r\n            >\r\n              {item.product.name} x {item.quantity}\r\n            </h3>\r\n            {item.product.countInStock ? (\r\n              <h3 className=\"in-stock\">In stock</h3>\r\n            ) : (\r\n              <h3 className=\"out-of-stock-favorites\">Not in stock</h3>\r\n            )}\r\n            <h3 className=\"heading-3 checkout-screen__item-details--price\">\r\n              PRICE:\r\n            </h3>\r\n            <h3 className=\"heading-3 checkout-screen__item-details--price-value\">\r\n              €{\" \"}\r\n              {roundToTwo(\r\n                item.product.price -\r\n                  item.product.price * (item.product.offerPriceDiscount / 100)\r\n              )}{\" \"}\r\n              &#10006;&nbsp;\r\n              {item.product.countInStock > 0 && (\r\n                <div className=\"product-screen__quantity-selector checkout-screen__quantity-selector\">\r\n                  <form action=\"\">\r\n                    <label\r\n                      className=\"product-screen__quantity-selector--text\"\r\n                      htmlFor=\"quantity\"\r\n                    >\r\n                      quantity\r\n                    </label>\r\n                    <select\r\n                      className=\"product-screen__quantity-selector--selection\"\r\n                      value={item.quantity}\r\n                      name=\"quantity\"\r\n                      id=\"quantity\"\r\n                      onChange={(e) => {\r\n                        dispatch(\r\n                          addToCart(item.product._id, Number(e.target.value))\r\n                        );\r\n                        dispatch(getCartProducts());\r\n                      }}\r\n                    >\r\n                      {[...Array(item.product.countInStock).keys()].map(\r\n                        (el) => (\r\n                          <option\r\n                            className=\"product-screen__quantity-selector--option\"\r\n                            key={el + 1}\r\n                            value={el + 1}\r\n                          >\r\n                            {el + 1}\r\n                          </option>\r\n                        )\r\n                      )}\r\n                    </select>\r\n                  </form>\r\n                </div>\r\n              )}\r\n            </h3>\r\n            <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n              <StarRatings\r\n                className=\"product-screen__rating-stars \"\r\n                rating={item.product.rating}\r\n                starDimension=\"2rem\"\r\n                starSpacing=\".25rem\"\r\n                starRatedColor=\"rgb(255, 180, 3)\"\r\n              />\r\n              <span className=\"product__rating-text ml-sm\">\r\n                User Rating:&nbsp;&nbsp;&nbsp;\r\n                <strong>{roundToTwo(item.product.rating)}</strong> (\r\n                {item.product.numReviews} reviews)\r\n              </span>\r\n            </div>\r\n            <span\r\n              onClick={() => removeCartProduct(item._id)}\r\n              className=\"checkout-screen__remove\"\r\n            >\r\n              Remove\r\n            </span>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Checkout;\r\n","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\error-message\\ErrorMessage.js",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\redux\\product\\product.actions.js",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\user-menu-dropdown\\UserDropdown.js",["290"],"import React from \"react\";\r\nimport \"./UserDropdown.scss\";\r\nimport { FiLogOut } from \"react-icons/fi\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { logout } from \"../../redux/user/user.actions.js\";\r\nimport { toggleUserMenuShow } from \"../../redux/user/user.actions.js\";\r\nimport { useHistory } from \"react-router-dom\";\r\n//!==================================================\r\nconst UserDropdown = () => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  const logoutHandler = () => {\r\n    dispatch(logout());\r\n    // history.push(\"/\");\r\n  };\r\n  const menuToggler = () => {\r\n    dispatch(toggleUserMenuShow());\r\n  };\r\n  return (\r\n    <div className=\"user-dropdown\">\r\n      <ul>\r\n        <li className=\"user-dropdown__list-item\">\r\n          <Link onClick={menuToggler} to=\"/profile/info\">\r\n            Profile\r\n          </Link>\r\n        </li>\r\n\r\n        <Link\r\n          to=\"/profile/orders\"\r\n          onClick={menuToggler}\r\n          className=\"user-dropdown__list-item\"\r\n        >\r\n          My orders\r\n        </Link>\r\n        <div />\r\n        <li\r\n          onClick={() => {\r\n            logoutHandler();\r\n            menuToggler();\r\n          }}\r\n          style={{\r\n            borderTop: \"1px solid $color-grey-light-1-2\",\r\n            paddingTop: \".5rem\",\r\n          }}\r\n          className=\"user-dropdown__list-item\"\r\n        >\r\n          Log Out&nbsp; <FiLogOut />\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserDropdown;\r\n","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\cart-dropdown\\CartDropdown.js",["291","292"],"//! Core\r\nimport React, { useRef, useEffect } from \"react\";\r\nimport \"./CartDropdown.scss\";\r\nimport { Link, useHistory, useRouteMatch } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { roundToTwo } from \"../../utils.js\";\r\nimport axios from \"axios\";\r\nimport { TweenMax, Power3 } from \"gsap\";\r\n\r\n//! Components\r\n\r\n//! Icons\r\nimport { AiOutlineDelete } from \"react-icons/ai\";\r\n\r\n//! Redux Actions\r\nimport { toggleCartShow } from \"../../redux/cart/cart.actions.js\";\r\nimport { getCartProducts } from \"../../redux/cart/cart.actions.js\";\r\nimport { productConstants } from \"../../redux/product/product.constants\";\r\n\r\n//!========================================================================\r\n//!========================================================================\r\n//!========================================================================\r\nconst CartDropdown = () => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const match = useRouteMatch();\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const cartItems = useSelector((state) => state.cart);\r\n  const { loading, cartProducts } = cartItems;\r\n\r\n  //! CALCULATE TOTAL NUMBER OF PRODUCTS IN CART ===========================\r\n  const cartItemsNumber = cartProducts.reduce(\r\n    (accum, cartItem) => accum + cartItem.quantity,\r\n    0\r\n  );\r\n  const subtotal = cartProducts.reduce(\r\n    (accum, cartItem) =>\r\n      accum +\r\n      cartItem.quantity *\r\n        roundToTwo(\r\n          cartItem.product.price -\r\n            cartItem.product.price * (cartItem.product.offerPriceDiscount / 100)\r\n        ),\r\n    0\r\n  );\r\n\r\n  //! GO TO CHECKOUT PAGE LINK =============================================\r\n  const checkoutClickHandler = () => {\r\n    dispatch(toggleCartShow());\r\n  };\r\n  //! GO TO THE PRODUCT PAGE LINK ==========================================\r\n\r\n  //! FADE IN ANIMATION  ====================================================\r\n  //TODO ADD GSAP OR SPRING FOR THE UNMOUNT ANIMATION =======================\r\n  const cartRef = useRef(null);\r\n  useEffect(() => {\r\n    TweenMax.to(cartRef.current, 0.8, {\r\n      opacity: 1,\r\n      x: 0,\r\n      ease: Power3.easeOut,\r\n    });\r\n    dispatch(getCartProducts());\r\n  }, [dispatch, history]);\r\n\r\n  //! REMOVE PRODUCT FROM CART ==============================================\r\n\r\n  const removeCartProduct = (id) => {\r\n    const deleteProduct = async () => {\r\n      try {\r\n        const config = {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${userInfo.token}`,\r\n          },\r\n        };\r\n        await axios.delete(`/api/cart/${id}`, config);\r\n\r\n        dispatch(getCartProducts());\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    deleteProduct();\r\n  };\r\n\r\n  return (\r\n    <div ref={cartRef} className=\"cart\">\r\n      <div className=\"cart__top\">\r\n        <h3 className=\"cart__top--text\">\r\n          You have {cartItemsNumber} items in your cart\r\n        </h3>\r\n      </div>\r\n      {cartProducts.map((item) => (\r\n        <div key={item.product._id} className=\"cart__item\">\r\n          <div className=\"cart__item--image-container\">\r\n            <img\r\n              onClick={() => {\r\n                if (\r\n                  history.location.pathname.split(\"/\")[2] === item.product._id\r\n                ) {\r\n                  dispatch(toggleCartShow());\r\n                } else {\r\n                  dispatch({ type: productConstants.PRODUCT_DETAILS_RESET });\r\n                  history.push(`/product/${item.product._id}`);\r\n                  dispatch(toggleCartShow());\r\n                }\r\n              }}\r\n              src={item.product.image}\r\n              alt={item.product.name}\r\n              className=\"cart__item--image\"\r\n            />\r\n          </div>\r\n          <div className=\"cart__details\">\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"space-between\",\r\n                gridColumn: \"1/3\",\r\n              }}\r\n            >\r\n              <h3\r\n                onClick={() => {\r\n                  if (\r\n                    history.location.pathname.split(\"/\")[2] === item.product._id\r\n                  ) {\r\n                    dispatch(toggleCartShow());\r\n                  } else {\r\n                    dispatch({ type: productConstants.PRODUCT_DETAILS_RESET });\r\n                    history.push(`/product/${item.product._id}`);\r\n                    dispatch(toggleCartShow());\r\n                  }\r\n                }}\r\n                className=\"cart__details--title\"\r\n              >\r\n                {item.product.name}{\" \"}\r\n              </h3>\r\n              <span>\r\n                <AiOutlineDelete\r\n                  title=\"Delete Cart Item\"\r\n                  onClick={() => removeCartProduct(item._id)}\r\n                  className=\"cart__details--delete\"\r\n                />\r\n              </span>\r\n            </div>\r\n            <h3 className=\"cart__details--price\">\r\n              Price: &nbsp;\r\n              <span className=\"cart__details--price-value\">\r\n                {roundToTwo(\r\n                  item.product.price -\r\n                    item.product.price * (item.product.offerPriceDiscount / 100)\r\n                )}\r\n              </span>\r\n            </h3>\r\n            <h3 className=\"cart__details--quantity\">\r\n              Quantity:&nbsp;\r\n              <span className=\"cart__details--quantity-value price-number\">\r\n                {item.quantity}\r\n              </span>\r\n            </h3>\r\n            <h3 className=\"cart__details--total\">TOTAL:</h3>\r\n            <h3 className=\"cart__details--total-value price-number\">\r\n              €{\" \"}\r\n              {roundToTwo(\r\n                item.quantity *\r\n                  roundToTwo(\r\n                    item.product.price -\r\n                      item.product.price *\r\n                        (item.product.offerPriceDiscount / 100)\r\n                  )\r\n              )}\r\n            </h3>\r\n          </div>\r\n        </div>\r\n      ))}\r\n      <div className=\"cart__subtotal\">\r\n        <h2 className=\"cart__subtotal--text\">SUBTOTAL:</h2>\r\n        <h2 className=\"cart__subtotal--value price-number\">\r\n          € {roundToTwo(subtotal)}\r\n        </h2>\r\n      </div>\r\n      <div className=\"cart__checkout\">\r\n        <Link to=\"/profile/checkout\">\r\n          <button\r\n            onClick={checkoutClickHandler}\r\n            className=\"cart__checkout--btn\"\r\n          >\r\n            Go to checkout\r\n          </button>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CartDropdown;\r\n","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\utils.js",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\loader\\Loader.js",[],["293","294"],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\loader-product\\LoaderProduct.js",[],["295","296"],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\action-show\\ActionShow.js",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\order-screen\\OrderScreen.js",["297"],"//! Core\r\nimport React, { useState, useEffect } from \"react\";\r\nimport \"./OrderScreen.scss\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { roundToTwo } from \"../../utils\";\r\n\r\n//! Components\r\nimport LoaderGeneric from \"../../components/loader-generic/LoaderGeneric.js\";\r\nimport ErrorMessage from \"../../components/error-message/ErrorMessage.js\";\r\nimport { PayPalButton } from \"react-paypal-button-v2\";\r\n\r\n//! Icons\r\nimport { GrPaypal, GrStripe } from \"react-icons/gr\";\r\nimport { BsCreditCard } from \"react-icons/bs\";\r\n\r\n//! Redux Actions\r\nimport { getCartProducts } from \"../../redux/cart/cart.actions.js\";\r\nimport { getOrderDetails, payOrder } from \"../../redux/order/order.actions\";\r\nimport { orderConstants } from \"../../redux/order/order.constants.js\";\r\nimport { productConstants } from \"../../redux/product/product.constants\";\r\n\r\n//todo implement gsapp to stop the buy now on screen\r\n//!=======================================================\r\n\r\nconst OrderScreen = ({ match }) => {\r\n  const orderId = match.params.id;\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const [sdkReady, setSdkReady] = useState(false);\r\n\r\n  const orderDetails = useSelector((state) => state.orderDetails);\r\n  const { order, loading, error } = orderDetails;\r\n\r\n  const orderPay = useSelector((state) => state.orderPay);\r\n  const { loading: loadingPay, success: successPay } = orderPay;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  useEffect(() => {\r\n    dispatch(getCartProducts());\r\n    dispatch({ type: orderConstants.ORDER_CREATE_RESET });\r\n    const addPayPalScript = async () => {\r\n      const { data: clientId } = await axios.get(\"/api/config/paypal\");\r\n      const script = document.createElement(\"script\");\r\n      script.type = \"text/javascript\";\r\n      script.async = true;\r\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`;\r\n      script.onload = () => {\r\n        setSdkReady(true);\r\n      };\r\n      document.body.appendChild(script);\r\n    };\r\n\r\n    if (successPay || !order || order._id !== orderId) {\r\n      dispatch({ type: orderConstants.ORDER_PAY_RESET });\r\n      dispatch(getOrderDetails(orderId));\r\n    } else if (!order.isPaid) {\r\n      if (!window.paypal) {\r\n        addPayPalScript();\r\n      } else {\r\n        setSdkReady(true);\r\n      }\r\n    }\r\n  }, [order, orderId, dispatch, successPay]);\r\n\r\n  let orderCreatedDate = new Date(order.createdAt);\r\n  let orderPaidAtDate = new Date(order.paidAt);\r\n  let orderDeliveredAtDate = new Date(order.deliveredAt);\r\n\r\n  const successPaymentHandler = (paymentResult) => {\r\n    dispatch(payOrder(orderId, paymentResult));\r\n  };\r\n\r\n  return loading ? (\r\n    <LoaderGeneric />\r\n  ) : error ? (\r\n    <ErrorMessage>{error}</ErrorMessage>\r\n  ) : (\r\n    <>\r\n      <div className=\" top-links mb-sm\">\r\n        {\" \"}\r\n        <Link className=\"product-screen__link\" to=\"/profile/orders\">\r\n          &#10092;&#10092; See all orders\r\n        </Link>\r\n      </div>\r\n      <div className=\"gradient-wrapper\">\r\n        <div className=\"order-screen \">\r\n          <div>\r\n            <h1 className=\"heading-1   mb-sm\">Order details</h1>\r\n            <h2 className=\"mb-sm\" style={{ fontWeight: \"400\" }}>\r\n              <strong>Order number:</strong> {order._id}{\" \"}\r\n              <span className=\"ml-sm\" style={{ color: \"grey\" }}>\r\n                |\r\n              </span>{\" \"}\r\n              <strong className=\"ml-sm\">Created at:</strong>{\" \"}\r\n              {orderCreatedDate.toLocaleString()}\r\n            </h2>\r\n          </div>\r\n          <div className=\"line-break\"></div>\r\n\r\n          <div className=\"order-screen__grid\">\r\n            <div className=\"order-screen__address-info \">\r\n              <h3 className=\"heading-3 order-screen__section-title mb-sm \">\r\n                Shipping address\r\n              </h3>\r\n              <address className=\"order-screen__middle-text\">\r\n                <p>{order.shippingAddress.fullName}</p>\r\n                <p>{order.shippingAddress.line1}</p>\r\n                <p>{order.shippingAddress.line2}</p>\r\n                <p>{order.shippingAddress.city}</p>\r\n                <p>{order.shippingAddress.stateProvinceRegion}</p>\r\n                <p>{order.shippingAddress.country}</p>\r\n                <p>{order.shippingAddress.postalCode}</p>\r\n                <p>{order.shippingAddress.phoneNumber}</p>\r\n              </address>\r\n            </div>\r\n            <div className=\"order-screen__payment-info order-screen__steps-container\">\r\n              <h3 className=\"heading-3 order-screen__section-title mb-sm \">\r\n                Payment Method\r\n              </h3>\r\n              <p\r\n                style={{ alignSelf: \"center\", fontSize: \"1.4rem\" }}\r\n                className=\"order-screen__middle-text\"\r\n              >\r\n                {order.paymentMethod === \"PayPal\" ? (\r\n                  <GrPaypal className=\" mr-sm\" />\r\n                ) : order.paymentMethod === \"Credit Card\" ? (\r\n                  <BsCreditCard className=\" mr-sm\" />\r\n                ) : (\r\n                  <GrStripe className=\" mr-sm\" />\r\n                )}\r\n                {order.paymentMethod}\r\n              </p>\r\n              {order.isPaid ? (\r\n                <p className=\"order-screen__status-success-message mb-sm\">\r\n                  &#10003; {`Paid at ${orderPaidAtDate.toLocaleString()}`}\r\n                </p>\r\n              ) : (\r\n                <p className=\"order-screen__status-fail-message mb-sm\">\r\n                  &#10005; Not paid\r\n                </p>\r\n              )}\r\n            </div>\r\n            <div className=\"order-screen__shipment-info order-screen__steps-container\">\r\n              <h3 className=\"heading-3 order-screen__section-title mb-sm \">\r\n                Shipment Method\r\n              </h3>\r\n              <p\r\n                style={{ alignSelf: \"center\", fontSize: \"1.4rem\" }}\r\n                className=\"order-screen__middle-text\"\r\n              >\r\n                {order.shippingMethod} &nbsp;{\" \"}\r\n              </p>\r\n              {order.isDelivered ? (\r\n                <span>\r\n                  &#10003;{\" \"}\r\n                  {`Delivered at ${orderDeliveredAtDate.toLocaleString()}`}\r\n                </span>\r\n              ) : (\r\n                <p className=\"order-screen__status-fail-message\">\r\n                  &#10005; Not delivered\r\n                </p>\r\n              )}\r\n            </div>\r\n          </div>\r\n          <div className=\"line-break\"></div>\r\n          <h3 className=\"heading-3 order-screen__section-title mb-sm mt-sm\">\r\n            Products\r\n          </h3>\r\n          <div className=\"order-screen__products-info \">\r\n            <div>\r\n              {order.orderItems.map((item) => (\r\n                <div\r\n                  key={item.product._id}\r\n                  className=\"order-screen__item mb-sm\"\r\n                >\r\n                  <img\r\n                    onClick={() => {\r\n                      dispatch({\r\n                        type: productConstants.PRODUCT_DETAILS_RESET,\r\n                      });\r\n                      history.push(`/product/${item.product._id}`);\r\n                    }}\r\n                    src={item.product.image}\r\n                    alt={item.product.name}\r\n                    className=\"order-screen__image mr-sm\"\r\n                  />\r\n                  <div className=\"order-screen__item-details\">\r\n                    <h4\r\n                      onClick={() => {\r\n                        dispatch({\r\n                          type: productConstants.PRODUCT_DETAILS_RESET,\r\n                        });\r\n                        history.push(`/product/${item.product._id}`);\r\n                      }}\r\n                      className=\"heading-4 order-screen__item-details--title\"\r\n                    >\r\n                      {item.product.name} x {item.quantity}\r\n                    </h4>\r\n\r\n                    <h4 className=\"heading-4 order-screen__item-details--price price-number\">\r\n                      PRICE: €{\" \"}\r\n                      {roundToTwo(\r\n                        item.product.price -\r\n                          item.product.price *\r\n                            (item.product.offerPriceDiscount / 100)\r\n                      )}\r\n                    </h4>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n            <div className=\"order-screen__payment\">\r\n              <div className=\"order-screen__summary\">\r\n                <h3\r\n                  style={{ gridColumn: \"1/3\" }}\r\n                  className=\"heading-3 order-screen__section-title mb-xs text-center\"\r\n                >\r\n                  Order Price\r\n                </h3>\r\n                <span style={{ gridColumn: \"1/3\", fontSize: \"1.2rem\" }}>\r\n                  (All prices include VAT)\r\n                </span>\r\n                <h4 className=\"heading-4 order-screen__summary--text\">\r\n                  Products:\r\n                </h4>\r\n                <span className=\"order-screen__middle-text text-end\">\r\n                  {order.itemsPrice}€\r\n                </span>\r\n                <h4 className=\"heading-4 order-screen__summary--text\">\r\n                  Shipping:\r\n                </h4>\r\n                <span className=\"order-screen__middle-text  text-end\">\r\n                  {order.shippingPrice}€\r\n                </span>\r\n                <h3 className=\"heading-3 order-screen__summary--total price-number\">\r\n                  TOTAL:\r\n                </h3>\r\n                <span className=\"heading-3 order-screen__summary--total price-number  text-end\">\r\n                  {order.totalPrice}€\r\n                </span>\r\n              </div>\r\n              {!order.isPaid && (\r\n                <div>\r\n                  {loadingPay && <LoaderGeneric />}\r\n                  {!sdkReady ? (\r\n                    <LoaderGeneric />\r\n                  ) : (\r\n                    <>\r\n                      <h3 className=\"heading-3 order-screen__section-title mb-xs mt-xs text-center\">\r\n                        Pay now\r\n                      </h3>\r\n                      <PayPalButton\r\n                        amount={order.totalPrice}\r\n                        onSuccess={successPaymentHandler}\r\n                      />\r\n                    </>\r\n                  )}\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OrderScreen;\r\n","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\profile-favorite-screen\\FavoriteScreen.js",["298","299"],"//! Core\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"./FavoriteScreen.scss\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { roundToTwo } from \"../../utils.js\";\r\n\r\n//! Components\r\nimport LoaderGeneric from \"../../components/loader-generic/LoaderGeneric.js\";\r\nimport ActionShow from \"../../components/action-show/ActionShow.js\";\r\nimport ErrorMessage from \"../../components/error-message/ErrorMessage.js\";\r\n\r\n//! Redux Actions\r\nimport { listFavoriteProducts } from \"../../redux/user/user.actions.js\";\r\nimport { addToCart, getCartProducts } from \"../../redux/cart/cart.actions.js\";\r\nimport { productConstants } from \"../../redux/product/product.constants\";\r\n\r\n//! Icons\r\nimport { FaHeartBroken } from \"react-icons/fa\";\r\nimport { TiShoppingCart } from \"react-icons/ti\";\r\n//!==============================================================\r\nconst FavoriteScreen = () => {\r\n  //! Hooks declaration\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  //! State\r\n  const [toCart, setToCart] = useState(false);\r\n\r\n  //! Redux data selection hook\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const favoriteProductsList = useSelector(\r\n    (state) => state.userFavoriteProducts\r\n  );\r\n  const { userFavoriteProducts, loading } = favoriteProductsList;\r\n  const favoriteProductsLength = userFavoriteProducts.length;\r\n\r\n  //! Use effect ============================\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/login\");\r\n    }\r\n    dispatch(listFavoriteProducts());\r\n    return () => clearTimeout(timer);\r\n  }, [history, userInfo, dispatch]);\r\n  //!==========================================\r\n  let timer;\r\n  //!Handlers\r\n  const removeFromFavoriteHandler = (id) => {\r\n    const deleteProduct = async () => {\r\n      try {\r\n        const config = {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${userInfo.token}`,\r\n          },\r\n        };\r\n        await axios.delete(`/api/users/profile/favorites/${id}`, config);\r\n\r\n        dispatch(listFavoriteProducts());\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    deleteProduct();\r\n  };\r\n  const addToCartHandler = (id) => {\r\n    dispatch(addToCart(id, 1));\r\n    dispatch(getCartProducts());\r\n    setToCart(true);\r\n    timer = setTimeout(() => {\r\n      setToCart(false);\r\n    }, 3100);\r\n  };\r\n  const productLink = (id) => {\r\n    history.push(`/product/${id}`);\r\n    dispatch({ type: productConstants.PRODUCT_DETAILS_RESET });\r\n  };\r\n  return loading ? (\r\n    <LoaderGeneric />\r\n  ) : (\r\n    <div className=\"favorite-screen\">\r\n      {toCart ? <ActionShow /> : null}\r\n      <h1 className=\"heading-1  \">FAVORITE PRODUCTS</h1>\r\n\r\n      <h2 className=\"favorite-screen__item-count mb-md\">\r\n        You have {favoriteProductsLength} favorite products.\r\n      </h2>\r\n      {userFavoriteProducts.map((item) => (\r\n        <div key={item._id} className=\"favorite-screen__product-container\">\r\n          <div className=\"favorite-screen__item\">\r\n            <div\r\n              className=\"favorite-screen__image-wrapper\"\r\n              onClick={() => productLink(item._id)}\r\n            >\r\n              <img\r\n                src={item.image}\r\n                alt={item.name}\r\n                className=\"favorite-screen__image\"\r\n              />\r\n            </div>\r\n            <div className=\"favorite-screen__item-details\">\r\n              <h4\r\n                onClick={() => productLink(item._id)}\r\n                className=\"heading-4 favorite-screen__item-details--title\"\r\n              >\r\n                {item.name}\r\n              </h4>\r\n              {item.countInStock ? (\r\n                <h3 className=\"in-stock mt-xs\">In stock</h3>\r\n              ) : (\r\n                <h3 className=\"out-of-stock-favorites mt-xs\">Not in stock</h3>\r\n              )}\r\n              <span className=\"favorite-screen__item-details--default-text\">\r\n                Default quantity when addding to cart is 1\r\n              </span>\r\n              <h4 className=\"heading-4 favorite-screen__item-details--price\">\r\n                PRICE:{\" \"}\r\n                <span className=\" favorite-screen__item-details--price-value price-number\">\r\n                  €{\" \"}\r\n                  {roundToTwo(\r\n                    item.price - item.price * (item.offerPriceDiscount / 100)\r\n                  )}\r\n                </span>\r\n              </h4>\r\n              <span\r\n                onClick={() => removeFromFavoriteHandler(item._id)}\r\n                className=\"favorite-screen__remove\"\r\n              >\r\n                Remove Favorite &nbsp; <FaHeartBroken />\r\n              </span>\r\n              {item.countInStock === 0 ? (\r\n                <button className=\" favorite-screen__button-disabled\">\r\n                  {\" \"}\r\n                  <TiShoppingCart className=\"favorite-screen__button--icon\" />{\" \"}\r\n                  out of stock{\" \"}\r\n                </button>\r\n              ) : (\r\n                <button\r\n                  onClick={async () => addToCartHandler(item._id)}\r\n                  className=\"favorite-screen__button\"\r\n                >\r\n                  <TiShoppingCart className=\"favorite-screen__button--icon\" />{\" \"}\r\n                  Add to cart\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FavoriteScreen;\r\n","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\checkout-steps\\CheckoutSteps.js",["300","301"],"import React from \"react\";\r\nimport \"./CheckoutStepts.scss\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nimport { AiOutlineDoubleRight, AiOutlineCheck } from \"react-icons/ai\";\r\nimport { GiTechnoHeart } from \"react-icons/gi\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n//!=====================================================================\r\nconst CheckoutSteps = ({ active3 }) => {\r\n  const history = useHistory();\r\n  const orderAddressState = useSelector((state) => state.orderAddress);\r\n  const { orderAddress } = orderAddressState;\r\n\r\n  const orderPaymentMethod = useSelector((state) => state.orderPaymentMethod);\r\n  const selectedShipment = orderAddress.fullName ? \"selected\" : \"\";\r\n  const selectedPayment =\r\n    orderPaymentMethod.paymentMethod !== \"\" ? \"selected\" : \"\";\r\n  return (\r\n    <>\r\n      <div\r\n        style={{\r\n          marginTop: \"-8rem\",\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n        }}\r\n        className=\"nav__logo-container mb-sm\"\r\n      >\r\n        <GiTechnoHeart className=\"nav__logo\" />{\" \"}\r\n        <Link to=\"/\">\r\n          <h2 className=\"nav__title\">Cyber Heart</h2>\r\n        </Link>\r\n      </div>\r\n      <Link to=\"/\">\r\n        <h2 className=\"nav__title\"></h2>\r\n      </Link>\r\n      <div className=\"checkout-steps\">\r\n        <div className=\"checkout-steps__progress\">\r\n          <span\r\n            className={`checkout-steps__number checkout-steps__number--${selectedShipment}`}\r\n          >\r\n            {orderAddress.fullName ? <AiOutlineCheck /> : \"1\"}\r\n          </span>{\" \"}\r\n          <p\r\n            onClick={() => history.push(\"/shipping\")}\r\n            className=\"checkout-steps__container\"\r\n          >\r\n            <span\r\n              className={`checkout-steps--text checkout-steps--text--${selectedShipment} `}\r\n            >\r\n              Address\r\n            </span>\r\n          </p>\r\n          <AiOutlineDoubleRight\r\n            className={`checkout-steps--arrows checkout-steps--arrows--${selectedShipment}  checkout-steps--arrows--animate`}\r\n          />\r\n        </div>\r\n        <div className=\"checkout-steps__progress\">\r\n          <span\r\n            className={`checkout-steps__number  checkout-steps__number--${selectedPayment} `}\r\n          >\r\n            {orderPaymentMethod.paymentMethod !== \"\" ? <AiOutlineCheck /> : \"2\"}\r\n          </span>{\" \"}\r\n          <p\r\n            onClick={() => history.push(\"/payment\")}\r\n            className=\"checkout-steps__container\"\r\n          >\r\n            <span\r\n              className={`checkout-steps--text checkout-steps--text--${selectedPayment} `}\r\n            >\r\n              Payment & Shipping\r\n            </span>\r\n          </p>\r\n          <AiOutlineDoubleRight\r\n            className={`checkout-steps--arrows checkout-steps--arrows--${selectedPayment} checkout-steps--arrows--animate`}\r\n          />\r\n        </div>\r\n        <div className=\"checkout-steps__progress\">\r\n          <span\r\n            className={`checkout-steps__number checkout-steps__number--${active3}`}\r\n          >\r\n            3\r\n          </span>\r\n          <p\r\n            onClick={() => history.push(\"/complete-order\")}\r\n            className=\"checkout-steps__container\"\r\n          >\r\n            <span\r\n              className={`checkout-steps--text checkout-steps--text--${active3} `}\r\n            >\r\n              Complete Order\r\n            </span>\r\n          </p>\r\n          {/* Empty div for flex space */}\r\n          <div></div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CheckoutSteps;\r\n","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\add-address\\AddAddress.js",["302","303","304","305","306"],"import React, { useState } from \"react\";\r\nimport \"./AddAddress.scss\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport ErrorMessage from \"../error-message/ErrorMessage.js\";\r\nimport { getUserAddresses, addAddress } from \"../../redux/user/user.actions.js\";\r\n//!=============================================================================\r\nconst AddAddress = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [fullName, setFullName] = useState(\"\");\r\n  const [country, setCountry] = useState(\"\");\r\n  const [line1, setLine1] = useState(\"\");\r\n  const [line2, setLine2] = useState(\"\");\r\n  const [city, setCity] = useState(\"\");\r\n  const [stateProvinceRegion, setStateProvinceRegion] = useState(\"\");\r\n  const [postalCode, setPostalCode] = useState(\"\");\r\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\r\n\r\n  const [successColor, setSuccessColor] = useState(\"alert\");\r\n  const [error, setError] = useState(false);\r\n  const [message, setMessage] = useState(null);\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { user } = userDetails;\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    window.location.reload();\r\n    setMessage(\"Address added successfully.\");\r\n    setSuccessColor(\"success\");\r\n    dispatch(\r\n      addAddress({\r\n        id: user._id,\r\n        fullName,\r\n        country,\r\n        line1,\r\n        line2,\r\n        city,\r\n        stateProvinceRegion,\r\n        postalCode,\r\n        phoneNumber,\r\n      })\r\n    );\r\n    dispatch(getUserAddresses());\r\n    setFullName(\"\");\r\n    setCountry(\"\");\r\n    setLine1(\"\");\r\n    setLine2(\"\");\r\n    setCity(\"\");\r\n    setStateProvinceRegion(\"\");\r\n    setPostalCode(\"\");\r\n    setPhoneNumber(\"\");\r\n  };\r\n  return (\r\n    <>\r\n      <form onSubmit={handleSubmit} className=\"add-address__form-container\">\r\n        <label htmlFor=\"fullName\" className=\"add-address__label\">\r\n          <strong>Full name</strong>\r\n        </label>\r\n        <input\r\n          required\r\n          name=\"line1\"\r\n          onChange={(e) => setFullName(e.target.value)}\r\n          value={fullName}\r\n          type=\"text\"\r\n          className=\"add-address__input\"\r\n        />\r\n        <label htmlFor=\"line1\" className=\"add-address__label\">\r\n          <strong>Address line 1</strong>\r\n        </label>\r\n        <input\r\n          required\r\n          name=\"line1\"\r\n          onChange={(e) => setLine1(e.target.value)}\r\n          value={line1}\r\n          type=\"text\"\r\n          className=\"add-address__input\"\r\n        />\r\n\r\n        <label htmlFor=\"line2\" className=\"add-address__label\">\r\n          <strong>Address line 2</strong>\r\n        </label>\r\n        <input\r\n          required\r\n          name=\"line2\"\r\n          onChange={(e) => setLine2(e.target.value)}\r\n          value={line2}\r\n          type=\"text\"\r\n          className=\"add-address__input\"\r\n        />\r\n        <label htmlFor=\"city\" className=\"add-address__label\">\r\n          <strong>City</strong>\r\n        </label>\r\n        <input\r\n          required\r\n          name=\"city\"\r\n          onChange={(e) => setCity(e.target.value)}\r\n          value={city}\r\n          className=\"add-address__input\"\r\n        />\r\n        <label htmlFor=\"stateProvinceRegion\" className=\"add-address__label\">\r\n          <strong>State/Province/Region</strong>\r\n        </label>\r\n        <input\r\n          required\r\n          name=\"stateProvinceRegion\"\r\n          onChange={(e) => setStateProvinceRegion(e.target.value)}\r\n          value={stateProvinceRegion}\r\n          className=\"add-address__input\"\r\n        />\r\n        <label htmlFor=\"postalCode\" className=\"add-address__label\">\r\n          <strong>Postal Code</strong>\r\n        </label>\r\n        <input\r\n          required\r\n          name=\"postalCode\"\r\n          onChange={(e) => setPostalCode(e.target.value)}\r\n          value={postalCode}\r\n          className=\"add-address__input\"\r\n        />\r\n        <label htmlFor=\"country\" className=\"add-address__label\">\r\n          <strong>Country</strong>\r\n        </label>\r\n        <input\r\n          required\r\n          name=\"country\"\r\n          onChange={(e) => setCountry(e.target.value)}\r\n          value={country}\r\n          className=\"add-address__input\"\r\n        />\r\n        <label htmlFor=\"phoneNumber\" className=\"add-address__label\">\r\n          <strong>Phone Number</strong>\r\n        </label>\r\n        <input\r\n          required\r\n          name=\"phoneNumber\"\r\n          onChange={(e) => setPhoneNumber(e.target.value)}\r\n          value={phoneNumber}\r\n          className=\"add-address__input\"\r\n        />\r\n        <input\r\n          required\r\n          className=\"add-address__input-btn\"\r\n          type=\"submit\"\r\n          value=\"Add new Address\"\r\n        />\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddAddress;\r\n","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\product\\Product.js",["307","308","309","310"],"//! Core\r\nimport React, { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport \"./Product.scss\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { roundToTwo } from \"../../utils\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport axios from \"axios\";\r\n\r\n//! Components\r\nimport StarRatings from \"react-star-ratings\";\r\nimport { ErrorMessage } from \"../error-message/ErrorMessage.js\";\r\n\r\n//! Icons\r\nimport { FaHeart } from \"react-icons/fa\";\r\n\r\n//! Redux Actions\r\nimport { listFavoriteProducts } from \"../../redux/user/user.actions.js\";\r\nimport { productConstants } from \"../../redux/product/product.constants\";\r\n\r\n//!==================================================================\r\nconst Product = ({ product }) => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const [like, setLike] = useState(false);\r\n\r\n  const favoriteProductsList = useSelector(\r\n    (state) => state.userFavoriteProducts\r\n  );\r\n  const { userFavoriteProducts } = favoriteProductsList;\r\n\r\n  const isFavorite = userFavoriteProducts.find(\r\n    (favoriteProduct) => favoriteProduct._id == product._id\r\n  );\r\n  useEffect(() => {\r\n    if (isFavorite) {\r\n      setLike(true);\r\n    } else {\r\n      setLike(false);\r\n    }\r\n  }, [isFavorite]);\r\n\r\n  const handleAddUserToLikedArrayAndProductToFavorites = (id) => {\r\n    const addProduct = async () => {\r\n      try {\r\n        if (!userInfo) {\r\n          history.push(\"/login\");\r\n        } else {\r\n          const config = {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n          };\r\n          await axios.put(`/api/products/`, { _id: id }, config);\r\n          await axios.post(`/api/users/profile/favorites`, { _id: id }, config);\r\n          setLike(true);\r\n          dispatch(listFavoriteProducts());\r\n        }\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n    addProduct();\r\n  };\r\n\r\n  const removeFromFavoriteHandler = (id) => {\r\n    const deleteProduct = async () => {\r\n      try {\r\n        const config = {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${userInfo.token}`,\r\n          },\r\n        };\r\n        await axios.delete(`/api/users/profile/favorites/${id}`, config);\r\n        setLike(false);\r\n        dispatch(listFavoriteProducts());\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    deleteProduct();\r\n  };\r\n\r\n  const handleProductDetailsLink = () => {\r\n    history.push(`/product/${product._id}`);\r\n    dispatch({ type: productConstants.PRODUCT_DETAILS_RESET });\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={\r\n        product.countInStock === 0 ? \"product out-of-stock\" : \"product\"\r\n      }\r\n    >\r\n      <div onClick={handleProductDetailsLink} className=\"product__card\">\r\n        {product.onOffer ? (\r\n          <div className=\"product__discount-message\">\r\n            -{product.offerPriceDiscount}%\r\n          </div>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        <div className=\"product__image-container\">\r\n          <img className=\"product__image\" src={product.image} alt=\"\" />\r\n        </div>\r\n        <h3 className=\"heading-4 heading-4--center product__title\">\r\n          {product.name}\r\n        </h3>\r\n        <div className=\"product__bottom\">\r\n          <span className=\"product__price-text\">\r\n            {product.onOffer ? (\r\n              <strong>\r\n                <s style={{ fontSize: \"1.3rem\" }}> € {product.price}</s>&nbsp; €{\" \"}\r\n                {roundToTwo(\r\n                  product.price -\r\n                    product.price * (product.offerPriceDiscount / 100)\r\n                )}{\" \"}\r\n              </strong>\r\n            ) : (\r\n              <strong>\r\n                {\" \"}\r\n                €{\" \"}\r\n                {roundToTwo(\r\n                  product.price -\r\n                    product.price * (product.offerPriceDiscount / 100)\r\n                )}{\" \"}\r\n              </strong>\r\n            )}\r\n          </span>\r\n        </div>\r\n        <div className=\"product__center mt-xs\">\r\n          <span className=\"product__rating-text\"></span>\r\n          <div className=\"product__rating-stars\">\r\n            <span className=\"product__rating-text\">\r\n              <strong>{roundToTwo(product.rating)}</strong> (\r\n              {product.numReviews})\r\n            </span>\r\n            <StarRatings\r\n              rating={product.rating}\r\n              starDimension=\"1.2rem\"\r\n              starSpacing=\".25rem\"\r\n              starRatedColor=\"rgb(255, 180, 3)\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {like ? (\r\n        <span\r\n          onClick={() => {\r\n            removeFromFavoriteHandler(product._id);\r\n          }}\r\n          title=\"Remove from Favorites\"\r\n        >\r\n          <FaHeart className=\"product__heart product__heart--selected\" />\r\n        </span>\r\n      ) : (\r\n        <span\r\n          onClick={async () => {\r\n            handleAddUserToLikedArrayAndProductToFavorites(product._id);\r\n          }}\r\n          title=\"Add to Favorites\"\r\n        >\r\n          <FaHeart className=\"product__heart\" />\r\n        </span>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Product;\r\n","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\loader-generic\\LoaderGeneric.js",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\profile-orders\\ProfileOrders.js",["311"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./ProfileOrders.scss\";\r\nimport { getMyOrders } from \"../../redux/order/order.actions.js\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport LoadingGeneric from \"../../components/loader-generic/LoaderGeneric.js\";\r\nimport ErrorMessage from \"../../components/error-message/ErrorMessage.js\";\r\nimport OrderOfOrders from \"../../components/order-of-orders/OrderOfOrders\";\r\n//!======================================================\r\nconst AllOrdersScreen = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const orderMyOrders = useSelector((state) => state.orderMyOrders);\r\n  const { loading, error, orders } = orderMyOrders;\r\n  useEffect(() => {\r\n    dispatch(getMyOrders());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <>\r\n      <h1 className=\"heading-1  \">YOUR ORDERS</h1>\r\n      {loading ? (\r\n        <LoadingGeneric />\r\n      ) : error ? (\r\n        <ErrorMessage color=\"alert\">{error}</ErrorMessage>\r\n      ) : (\r\n        <div className=\"my-orders\">\r\n          <h2 className=\"favorite-screen__item-count mb-md\">\r\n            You have made{\" \"}\r\n            {orders.length === 1 ? \"1 order\" : `${orders.length} orders`} in the\r\n            past .\r\n          </h2>\r\n          {orders.map((order) => (\r\n            <OrderOfOrders key={order._id} order={order} />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AllOrdersScreen;\r\n","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\order-of-orders\\OrderOfOrders.js",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\add-review\\AddReview.js",["312"],"//! Core\r\nimport React, { useState } from \"react\";\r\nimport \"./AddReview.scss\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useHistory, useLocation, useRouteMatch } from \"react-router-dom\";\r\n\r\n//! Components\r\nimport ErrorMessage from \"../error-message/ErrorMessage.js\";\r\nimport Rating from \"@material-ui/lab/Rating\";\r\n\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\n//! Redux Actions\r\nimport {\r\n  createProductReview,\r\n  listProductDetails,\r\n} from \"../../redux/product/product.actions\";\r\nimport { productConstants } from \"../../redux/product/product.constants\";\r\n\r\n//! Icons\r\nimport { AiOutlinePlus } from \"react-icons/ai\";\r\nimport { BiMessageAdd } from \"react-icons/bi\";\r\nimport { BsFillBackspaceFill } from \"react-icons/bs\";\r\n\r\n//!==========================================================\r\nconst AddReview = ({ productId, showModal }) => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const match = useRouteMatch();\r\n\r\n  const productReviewCreateSelector = useSelector(\r\n    (state) => state.productReviewCreate\r\n  );\r\n  const { success, error } = productReviewCreateSelector;\r\n\r\n  const [addReviewShow, setAddReviewShow] = useState(showModal);\r\n  const [hover, setHover] = useState(-1);\r\n  const [starValue, setStarValue] = useState(0);\r\n  const [textFieldValue, setTextFieldValue] = useState(\"\");\r\n  const [title, setTitle] = useState(\"\");\r\n\r\n  const addReviewHandler = () => {\r\n    setAddReviewShow(!addReviewShow);\r\n  };\r\n  const labels = {\r\n    1: \"Useless\",\r\n\r\n    2: \"Poor\",\r\n\r\n    3: \"Ok\",\r\n\r\n    4: \"Good\",\r\n\r\n    5: \"Excellent\",\r\n  };\r\n  const submitReviewHandler = () => {\r\n    const review = {\r\n      title: title,\r\n      rating: starValue,\r\n      comment: textFieldValue,\r\n    };\r\n    dispatch(createProductReview(productId, review));\r\n    if (location.pathname === `/product/${productId}`) {\r\n      dispatch(listProductDetails(productId));\r\n    } else {\r\n      dispatch({ type: productConstants.PRODUCT_DETAILS_RESET });\r\n      history.push(`/product/${productId}`);\r\n    }\r\n\r\n    setAddReviewShow(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"add-review mt-sm\">\r\n      {error ? <ErrorMessage color=\"alert\">{error}</ErrorMessage> : \"\"}\r\n      {success ? <ErrorMessage color=\"success\">{success}</ErrorMessage> : \"\"}\r\n      {addReviewShow ? (\r\n        <div className=\"add-review__submit-flex\">\r\n          <button onClick={submitReviewHandler} className=\"add-review__button\">\r\n            <BiMessageAdd style={{ fontSize: \"1.8rem\" }} />\r\n            &nbsp; Submit Review\r\n          </button>\r\n          <BsFillBackspaceFill\r\n            onClick={() => setAddReviewShow(false)}\r\n            className=\"add-review__cancel-review ml-sm\"\r\n            title=\"Cancel writting review\"\r\n          />\r\n        </div>\r\n      ) : (\r\n        <button onClick={addReviewHandler} className=\"add-review__button\">\r\n          <AiOutlinePlus style={{ fontSize: \"1.8rem\" }} />\r\n          &nbsp; Add Review\r\n        </button>\r\n      )}\r\n      {addReviewShow ? (\r\n        <div className=\"add-review__whole-body\">\r\n          <form>\r\n            <div className=\"add-review__star-select mt-sm mb-sm\">\r\n              <h4 className=\"heading-4 \">Select Rating &nbsp;</h4>\r\n              <Rating\r\n                size=\"large\"\r\n                name=\"hover-feedback\"\r\n                value={starValue}\r\n                precision={1}\r\n                onChange={(event, newstarValue) => {\r\n                  setStarValue(newstarValue);\r\n                }}\r\n                onChangeActive={(event, newHover) => {\r\n                  setHover(newHover);\r\n                }}\r\n              />\r\n              {starValue !== null && (\r\n                <Box style={{ fontSize: \"1.4rem\" }} ml={2}>\r\n                  {labels[hover !== -1 ? hover : starValue]}\r\n                </Box>\r\n              )}\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"review-title\">\r\n                <h4 className=\"heading-4 mb-xs\"> Add a title</h4>\r\n                <input\r\n                  className=\"add-review__title mb-sm\"\r\n                  name=\"review-title\"\r\n                  type=\"text\"\r\n                  placeholder=\"What is the most important ?\"\r\n                  value={title}\r\n                  onChange={(e) => setTitle(e.target.value)}\r\n                />\r\n              </label>\r\n\r\n              <label htmlFor=\"review-title\">\r\n                <h4 className=\"heading-4 mb-xs\"> Add a written review</h4>\r\n                <textarea\r\n                  className=\"add-review__text-field\"\r\n                  name=\"rating-text\"\r\n                  id=\"\"\r\n                  rows=\"7\"\r\n                  value={textFieldValue}\r\n                  placeholder=\"What did you like and what you did not?\"\r\n                  onChange={(e) => setTextFieldValue(e.target.value)}\r\n                ></textarea>\r\n              </label>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddReview;\r\n","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\review\\Review.js",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\searchbox\\SearchBox.js",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\profile-reviews-screen\\ProfileReviews.js",["313","314","315"],"//! Core\r\nimport React, { useEffect } from \"react\";\r\nimport \"./ProfileReviews.scss\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n//! Components\r\nimport Review from \"../../components/review/Review.js\";\r\n\r\n//! Redux Actions\r\nimport { listProductReviews } from \"../../redux/user/user.actions\";\r\nimport { productConstants } from \"../../redux/product/product.constants\";\r\n\r\n//!======================================================\r\nconst ProfileReviews = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n  const reviews = useSelector((state) => state.userReviews);\r\n  const { loading, userReviews } = reviews;\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/login\");\r\n    } else {\r\n      dispatch(listProductReviews());\r\n    }\r\n  }, [dispatch, listProductReviews]);\r\n  return (\r\n    <>\r\n      <h1 className=\"heading-1 mb-sm\">YOUR REVIEWS</h1>\r\n      {userReviews.map((el) => (\r\n        <div key={el._id}>\r\n          <h4 className=\"profile-reviews__product-name\">{el.productName}</h4>\r\n          <div className=\"profile-reviews__flex\">\r\n            <div className=\"profile-reviews__image-title\">\r\n              <img\r\n                onClick={() => {\r\n                  dispatch({ type: productConstants.PRODUCT_DETAILS_RESET });\r\n                  history.push(`/product/${el.productId}`);\r\n                }}\r\n                className=\"profile-reviews__image\"\r\n                src={el.image}\r\n              />\r\n            </div>\r\n            <h4>{el.title}</h4>\r\n            {el.reviews.map((review) => (\r\n              <Review key={review._id} review={review} />\r\n            ))}\r\n          </div>\r\n          <div className=\"line-break\"></div>\r\n        </div>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProfileReviews;\r\n","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\shop\\Shop.js",["316","317","318"],"//! Core\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"./Shop.scss\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\n//! Components\r\nimport Product from \"../../components/product/Product\";\r\nimport LoaderGeneric from \"../../components/loader-generic/LoaderGeneric\";\r\nimport ErrorMessage from \"../../components/error-message/ErrorMessage.js\";\r\nimport ProductFilter from \"../../components/product-filter/ProductFilter.js\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\n\r\n//! Redux actions\r\nimport { listProducts } from \"../../redux/product/product.actions.js\";\r\nimport { listFavoriteProducts } from \"../../redux/user/user.actions.js\";\r\nimport { getCartProducts } from \"../../redux/cart/cart.actions.js\";\r\n\r\n//!=======================================================\r\nconst Shop = () => {\r\n  //! Hooks declaration\r\n  const location = useLocation();\r\n  const dispatch = useDispatch();\r\n\r\n  //! State\r\n  const [pageParams, setPageParams] = useState(1);\r\n\r\n  //! Redux data selection hook\r\n\r\n  const productList = useSelector((state) => state.productList);\r\n  const { loading, error, products, pages, page } = productList;\r\n\r\n  //! Use effect\r\n  useEffect(() => {\r\n    if (location.pathname === `/shop/all-products`) {\r\n      dispatch(listProducts({}, 1));\r\n    } else if (location.pathname === `/shop/electronics`) {\r\n      dispatch(listProducts({ category: \"Electronics\" }, 1));\r\n    } else if (location.pathname === `/shop/home-appliances`) {\r\n      dispatch(listProducts({ category: \"Home\" }, 1));\r\n    }\r\n    window.scrollTo(0, 0);\r\n    setPageParams(1);\r\n    dispatch(listFavoriteProducts());\r\n  }, [dispatch, location]);\r\n\r\n  //! MaterialUI Pagination Style\r\n  const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      \"& > *\": {\r\n        marginTop: theme.spacing(2),\r\n      },\r\n    },\r\n  }));\r\n  const classes = useStyles();\r\n\r\n  //! Handlers\r\n  const pageChangeHandler = (event, value) => {\r\n    setPageParams(value);\r\n    if (location.pathname === `/shop/all-products`) {\r\n      dispatch(listProducts({}, value));\r\n    } else if (location.pathname === `/shop/electronics`) {\r\n      dispatch(listProducts({ category: \"Electronics\" }, value));\r\n    } else if (location.pathname === `/shop/home-appliances`) {\r\n      dispatch(listProducts({ category: \"Home\" }, value));\r\n    }\r\n    window.scrollTo(0, 0);\r\n    dispatch(listFavoriteProducts());\r\n  };\r\n  //!=======================================================\r\n  return (\r\n    <div className=\"shop\">\r\n      <div className=\"shop__filter\">\r\n        {/* //todo ==========================================\r\n        <ProductFilter />\r\n        //todo ========================================== */}\r\n      </div>\r\n\r\n      {loading ? (\r\n        <LoaderGeneric />\r\n      ) : error ? (\r\n        <ErrorMessage color=\"alert\">{error}</ErrorMessage>\r\n      ) : (\r\n        <>\r\n          <div className=\"shop__products\">\r\n            {products.map((product) => (\r\n              <Product key={product._id} product={product} />\r\n            ))}\r\n          </div>\r\n          <div className={`${classes.root} mt-md pagination-container`}>\r\n            <Pagination\r\n              count={Number(pages)}\r\n              page={Number(pageParams)}\r\n              onChange={pageChangeHandler}\r\n              variant=\"outlined\"\r\n              shape=\"rounded\"\r\n            />\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Shop;\r\n","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\product-filter\\ProductFilter.js",["319","320"],"import React, { useState } from \"react\";\r\nimport \"./ProductFilter.scss\";\r\n//!=====================================================================\r\nconst ProductFilter = () => {\r\n  //! State\r\n  const [filterShow, setFilterShow] = useState(false);\r\n  return <div className=\"product-filter\">product filter</div>;\r\n};\r\n\r\nexport default ProductFilter;\r\n","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\home-page\\HomePage.js",["321","322","323","324","325","326","327"],"//! Core\r\nimport React, { useEffect } from \"react\";\r\nimport \"./HomePage.scss\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport { roundToTwo } from \"../../utils\";\r\n\r\n//! Components\r\nimport Slider from \"react-slick\";\r\nimport CarouselProductShow from \"../../components/carousel-products/CarouselProductShow\";\r\nimport OrderOfOrders from \"../../components/order-of-orders/OrderOfOrders\";\r\n\r\n//! Icons\r\n\r\n//! Redux Actions\r\nimport { productConstants } from \"../../redux/product/product.constants\";\r\nimport {\r\n  listProducts,\r\n  listCategories,\r\n} from \"../../redux/product/product.actions\";\r\n\r\nimport { getMyOrders } from \"../../redux/order/order.actions\";\r\n//!=====================================================================\r\nconst HomePage = () => {\r\n  //! Hooks declaration\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  //! State\r\n\r\n  //! Redux data selection hook\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const productList = useSelector((state) => state.productList);\r\n  const { loading, error, products, pages, page } = productList;\r\n\r\n  const productCategoriesList = useSelector((state) => state.productCategories);\r\n  const { loading: categoriesLoading, categories } = productCategoriesList;\r\n\r\n  const myLastOrder = useSelector((state) => state.orderMyOrders);\r\n  let { orders } = myLastOrder;\r\n\r\n  //! useEffect\r\n\r\n  useEffect(() => {\r\n    try {\r\n      if (userInfo) {\r\n        dispatch(getMyOrders());\r\n      }\r\n      dispatch(listCategories());\r\n\r\n      dispatch(listProducts({ onOffer: true }, 1));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }, [dispatch, productConstants]);\r\n\r\n  //! Handlers\r\n\r\n  //! Slider\r\n  const Wrapper = styled.div`\r\n    background-color: white;\r\n    border-radius: 1rem;\r\n  `;\r\n\r\n  const Page = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    border-radius: 1rem;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    border-radius: 1rem;\r\n    overflow: hidden;\r\n  `;\r\n  return (\r\n    <div className=\"homepage\">\r\n      <div className=\"homepage__top-carousel  mb-md\">\r\n        <Wrapper>\r\n          <Slider\r\n            speed={1000}\r\n            slidesToShow={1}\r\n            slidesToScroll={1}\r\n            infinite={true}\r\n            dots={true}\r\n            arrows={false}\r\n            autoplay={true}\r\n            autoplaySpeed={5000}\r\n            pauseOnHover={true}\r\n            adaptiveHeight={false}\r\n          >\r\n            <div className=\"homepage__slider-page\">\r\n              <Page>\r\n                <div className=\"homepage__lottery\">\r\n                  <h1 className=\"heading-1\">Win a new Samsung Galaxy S21</h1>\r\n                  <img\r\n                    src=\"https://www.androidpolice.com/wp-content/uploads/2021/01/11/d8a5e279e6afacb10e0dbe51f49707445a0ffcb66a0d85bcae52c32075c79e85-1.jpg\"\r\n                    alt=\"\"\r\n                  />\r\n                  <div className=\"homepage__lottery-form\">\r\n                    <div>\r\n                      <h3 className=\"heading-3\">Subscribe and WIN</h3>\r\n                      <p>Get thiss incredible Samsung Galaxy S21</p>\r\n                    </div>\r\n                    <input\r\n                      className=\"homepage__lottery-input\"\r\n                      type=\"email\"\r\n                      placeholder=\"Enter your email\"\r\n                    />\r\n                    <div>\r\n                      <input className=\"mr-sm\" type=\"checkbox\" />{\" \"}\r\n                      <span>\r\n                        I confirm that I have read, understand and agree to the\r\n                        above policy and procedure for enrollment in the Win a\r\n                        Samsung Galaxy S21 Program.\r\n                      </span>\r\n                    </div>\r\n                    <button className=\"homepage__lottery-btn\">Subscribe</button>\r\n                  </div>\r\n                </div>\r\n              </Page>\r\n            </div>\r\n            <div className=\"homepage__slider-page\">\r\n              <Page>\r\n                <CarouselProductShow\r\n                  buttonLink=\"See all deals\"\r\n                  title=\"Latest Deals\"\r\n                  subtitle=\"Up to 25% off in electronic products and a wooping 45% off in home appliances\"\r\n                  roundToTwo={roundToTwo}\r\n                  products={products}\r\n                />\r\n              </Page>\r\n            </div>\r\n          </Slider>\r\n        </Wrapper>\r\n      </div>\r\n      {userInfo ? (\r\n        <div className=\"homepage__user-quicklook\">\r\n          <h4 className=\"heading-4 homepage__welcome-message\">\r\n            Welcome, {userInfo.name}\r\n          </h4>\r\n          <div className=\"mb-md\">\r\n            {orders.length === 0 ? (\r\n              <h4 style={{ padding: \"1rem\" }} className=\"heading-4 mb-sm\">\r\n                You have no orders yet. Your last order will appear here. Happy\r\n                shopping\r\n              </h4>\r\n            ) : (\r\n              <h4 style={{ padding: \"1rem\" }} className=\"heading-4 mb-sm\">\r\n                Your Last Order:{\" \"}\r\n              </h4>\r\n            )}\r\n            {orders\r\n              .map((order) => (\r\n                <div key={order._id}>\r\n                  <OrderOfOrders order={order} />\r\n                </div>\r\n              ))\r\n              .slice(0, 1)}\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n\r\n      <div className=\"homepage__select-category\">\r\n        <div className=\"homepage__select-category--inner\">\r\n          <h3 className=\"heading-3 mb-md\">Search by Category</h3>\r\n          <div className=\"homepage__select-category--grid\">\r\n            {categories.map((subcategory) => (\r\n              <div className=\"mb-md\" key={subcategory._id}>\r\n                <div className=\"homepage__select-category--container\">\r\n                  <div className=\"homepage__select-category--subcategory\">\r\n                    <div\r\n                      onClick={() => {\r\n                        dispatch({ type: productConstants.PRODUCT_LIST_RESET });\r\n                        history.push(\r\n                          `/products/category/${subcategory._id\r\n                            .replace(/\\s+/g, \"-\")\r\n                            .toLowerCase()}`\r\n                        );\r\n                      }}\r\n                      className=\"homepage__select-category--image-container  mb-xs\"\r\n                    >\r\n                      <img\r\n                        className=\"homepage__select-category--image\"\r\n                        src={subcategory.image}\r\n                        alt=\"subcategory image\"\r\n                      />\r\n                    </div>\r\n                    <h3>{subcategory._id}</h3>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\carousel-products\\CarouselProductShow.js",["328","329"],"//! Core\r\nimport React, { useEffect } from \"react\";\r\nimport \"./CarouselProductShow.scss\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\n//! Redux Actions\r\nimport { productConstants } from \"../../redux/product/product.constants\";\r\n//!===================================================================================\r\nconst CarouselProductShow = ({\r\n  products,\r\n  roundToTwo,\r\n  title,\r\n  buttonLink,\r\n  subtitle,\r\n}) => {\r\n  //! Redux data selection hook\r\n\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <div className=\"carousel\">\r\n      <div className=\"carousel--title\">\r\n        <h1 className=\"heading-1\">{title}</h1>\r\n        <p className=\"carousel--subtitle\">{subtitle}</p>\r\n      </div>\r\n\r\n      <div className=\"carousel--offer-products\">\r\n        {products\r\n          .map((product) => (\r\n            <div\r\n              onClick={() => {\r\n                dispatch({ type: productConstants.PRODUCT_DETAILS_RESET });\r\n                history.push(`/product/${product._id}`);\r\n              }}\r\n              key={product._id}\r\n              className=\"carousel--product\"\r\n            >\r\n              <div\r\n                style={{\r\n                  height: \"33rem\",\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  position: \"relative\",\r\n                }}\r\n              >\r\n                {product.onOffer ? (\r\n                  <h4 className=\" carousel--discount\">\r\n                    -{product.offerPriceDiscount}%\r\n                  </h4>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n                <img className=\"carousel--image\" src={product.image} alt=\"\" />\r\n              </div>\r\n              <h4 className=\"mt-xs mb-sm text-center carousel--product-name\">\r\n                {product.name.slice(0, 85)}&nbsp;...\r\n              </h4>\r\n              {product.onOffer ? (\r\n                <h4 className=\"heading-4 text-center  \">\r\n                  <s style={{ fontSize: \"1.3rem\", width: \"100%\" }}>\r\n                    {\" \"}\r\n                    € {product.price}\r\n                  </s>\r\n                  <br />\r\n                  <span className=\"carousel--product-price\">\r\n                    €{\" \"}\r\n                    {roundToTwo(\r\n                      product.price -\r\n                        product.price * (product.offerPriceDiscount / 100)\r\n                    )}{\" \"}\r\n                  </span>\r\n                </h4>\r\n              ) : (\r\n                <h4 className=\"heading-4 text-center  \">\r\n                  <span className=\"carousel--product-price\">\r\n                    {\" \"}\r\n                    € {product.price}\r\n                  </span>{\" \"}\r\n                </h4>\r\n              )}\r\n            </div>\r\n          ))\r\n          .slice(0, 4)}\r\n      </div>\r\n      <div className=\"carousel--bottom\">\r\n        <button\r\n          onClick={() => {\r\n            dispatch({ type: productConstants.PRODUCT_LIST_RESET });\r\n            history.push(\"/latest-deals\");\r\n          }}\r\n          className=\"carousel--btn\"\r\n        >\r\n          {buttonLink}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CarouselProductShow;\r\n","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\category-screen\\ProductCategory.js",["330","331","332","333","334"],"//! Core\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useLocation, useRouteMatch } from \"react-router-dom\";\r\n\r\n//! Components\r\nimport Product from \"../../components/product/Product\";\r\nimport ErrorMessage from \"../../components/error-message/ErrorMessage.js\";\r\nimport LoaderGeneric from \"../../components/loader-generic/LoaderGeneric\";\r\nimport ProductFilter from \"../../components/product-filter/ProductFilter.js\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\n\r\n//! Redux actions\r\nimport { listProducts } from \"../../redux/product/product.actions.js\";\r\nimport { listFavoriteProducts } from \"../../redux/user/user.actions.js\";\r\nimport { getCartProducts } from \"../../redux/cart/cart.actions.js\";\r\n\r\n//!=======================================================\r\nconst ProductCategory = () => {\r\n  //! Hooks declaration\r\n  const location = useLocation();\r\n  const dispatch = useDispatch();\r\n  const match = useRouteMatch();\r\n\r\n  //! State\r\n  const [pageParams, setPageParams] = useState(1);\r\n\r\n  //! Redux data selection hook\r\n\r\n  const productList = useSelector((state) => state.productList);\r\n  const { loading, error, products, pages, page } = productList;\r\n\r\n  //! Use effect\r\n  useEffect(() => {\r\n    try {\r\n      dispatch(\r\n        listProducts(\r\n          {\r\n            $text: {\r\n              $search: match.params.category.replace(\"-\", \" \"),\r\n              $caseSensitive: false,\r\n            },\r\n          },\r\n          1\r\n        )\r\n      );\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }, [dispatch]);\r\n\r\n  //! MaterialUI Pagination Style\r\n  const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      \"& > *\": {\r\n        marginTop: theme.spacing(2),\r\n      },\r\n    },\r\n  }));\r\n  const classes = useStyles();\r\n\r\n  //! Handlers\r\n  const pageChangeHandler = (event, value) => {\r\n    setPageParams(value);\r\n    dispatch(\r\n      listProducts(\r\n        {\r\n          $text: {\r\n            $search: match.params.category.replace(\"-\", \" \"),\r\n            $caseSensitive: false,\r\n          },\r\n        },\r\n        value\r\n      )\r\n    );\r\n    window.scrollTo(0, 0);\r\n    dispatch(listFavoriteProducts());\r\n  };\r\n  //!=======================================================\r\n\r\n  return (\r\n    <div className=\"shop\">\r\n      <div className=\"shop__filter\">\r\n        {/* //todo ==========================================\r\n        <ProductFilter />\r\n        //todo ========================================== */}\r\n      </div>\r\n\r\n      {loading ? (\r\n        <LoaderGeneric />\r\n      ) : error ? (\r\n        <ErrorMessage color=\"alert\">{error}</ErrorMessage>\r\n      ) : (\r\n        <>\r\n          <h2 className=\"mb-md heading-2 text-center\">\r\n            {match.params.category.replace(\"-\", \" \").toUpperCase()}\r\n          </h2>\r\n          <div className=\"shop__products\">\r\n            {products.map((product) => (\r\n              <Product key={product._id} product={product} />\r\n            ))}\r\n          </div>\r\n          <div className={`${classes.root} mt-md pagination-container`}>\r\n            <Pagination\r\n              count={Number(pages)}\r\n              page={Number(pageParams)}\r\n              onChange={pageChangeHandler}\r\n              variant=\"outlined\"\r\n              shape=\"rounded\"\r\n            />\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductCategory;\r\n","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\search-results\\SearchResults.js",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\modals\\address-edit-modal\\AddressEdit.js",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\modals\\product-review-modal\\ProductReviewModal.js",["335"],"//! Core\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport \"./ProductReviewModal.scss\";\r\n//! Components\r\nimport AddReview from \"../../components/add-review/AddReview\";\r\n\r\n//! Icons\r\nimport { RiCloseFill } from \"react-icons/ri\";\r\n\r\n//!=================================================================\r\nconst AddressEdit = ({ product }) => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const [showModal, setShowModal] = useState(false);\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/login\");\r\n    }\r\n  }, [history, userInfo]);\r\n\r\n  return (\r\n    <>\r\n      <button\r\n        onClick={() => setShowModal(true)}\r\n        className=\"my-orders__btn-container--btn\"\r\n      >\r\n        Leave Review\r\n      </button>\r\n      {showModal ? (\r\n        <div className=\"edit-address\">\r\n          <div className=\"edit-address__form-container\">\r\n            <RiCloseFill\r\n              onClick={() => setShowModal(false)}\r\n              className=\"edit-address__close\"\r\n            />\r\n            <h2 className=\"heading-2 \">Add Review to</h2>\r\n            <span className=\"product-review-modal__product-name\">\r\n              {product.name}\r\n            </span>\r\n            <img\r\n              className=\"product-review-modal__image\"\r\n              src={product.image}\r\n              alt={product.name}\r\n            />\r\n\r\n            <AddReview showModal={true} productId={product._id} />\r\n          </div>\r\n        </div>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddressEdit;\r\n","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\order-item\\OrderItem.js",["336"],"import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { roundToTwo } from \"../../utils\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport axios from \"axios\";\r\n//! Components\r\nimport ProductReviewModal from \"../../modals/product-review-modal/ProductReviewModal\";\r\n\r\n//! Redux Actions\r\nimport { productConstants } from \"../../redux/product/product.constants\";\r\n\r\n//! =======================================================================================\r\nconst OrderItem = ({ item }) => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  //! State\r\n  const [productState, setProductState] = useState({ products: [] });\r\n\r\n  //! Redux data selection hook\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  //! Use Effect -> Axios call to get individual product info to later compare it with the user ID\r\n  useEffect(() => {\r\n    let isCancelled = false;\r\n    try {\r\n      const fetchProduct = async () => {\r\n        const { data } = await axios.get(\"/api/products\", {\r\n          params: { search: { _id: item.product._id }, pageNumber: 1 },\r\n        });\r\n        setProductState(data);\r\n      };\r\n      if (!isCancelled) {\r\n        fetchProduct();\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n    return () => {\r\n      isCancelled = true;\r\n    };\r\n  }, [item, dispatch, axios]);\r\n\r\n  return (\r\n    <div className=\"my-orders__items-grid\">\r\n      <div\r\n        onClick={() => {\r\n          history.push(`/product/${item.product._id}`);\r\n          dispatch({ type: productConstants.PRODUCT_DETAILS_RESET });\r\n        }}\r\n        className=\"my-orders__item \"\r\n      >\r\n        <div className=\"my-orders__image--container\">\r\n          <img\r\n            src={item.product.image}\r\n            alt={item.product.name}\r\n            className=\"my-orders__image mr-sm\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"my-orders__item-details\">\r\n          <h4 className=\"my-orders__item-details--title text-center mb-xs\">\r\n            {item.product.name}\r\n          </h4>\r\n\r\n          <div style={{ textAlign: \"end\" }}>\r\n            <h4 className=\"my-orders__item-details\">\r\n              Quantity: {item.quantity}\r\n            </h4>\r\n            <h4 className=\"my-orders__item-details--price price-number\">\r\n              €{\" \"}\r\n              {roundToTwo(\r\n                item.product.price -\r\n                  item.product.price * (item.product.offerPriceDiscount / 100)\r\n              )}\r\n            </h4>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"my-orders__btn-container\">\r\n        {productState.products.map((el) =>\r\n          el.reviews.find((review) => review.user === userInfo._id) ? (\r\n            <button key={el._id} className=\" my-orders__reviewd\">\r\n              Product reviewd\r\n            </button>\r\n          ) : (\r\n            <ProductReviewModal key={el._id} product={item.product} />\r\n          )\r\n        )}\r\n        <button className=\"my-orders__btn-container--btn\">\r\n          Technical Support\r\n        </button>\r\n        <button className=\"my-orders__btn-container--btn\">Return Item</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OrderItem;\r\n","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\deals-screen\\DealsScreen.js",[],{"ruleId":"337","severity":1,"message":"338","line":6,"column":8,"nodeType":"339","messageId":"340","endLine":6,"endColumn":12},{"ruleId":"341","severity":1,"message":"342","line":71,"column":26,"nodeType":"343","messageId":"344","endLine":71,"endColumn":58},{"ruleId":"345","severity":1,"message":"346","line":50,"column":6,"nodeType":"347","endLine":50,"endColumn":41,"suggestions":"348"},{"ruleId":"337","severity":1,"message":"349","line":18,"column":11,"nodeType":"339","messageId":"340","endLine":18,"endColumn":18},{"ruleId":"341","severity":1,"message":"342","line":164,"column":26,"nodeType":"343","messageId":"344","endLine":164,"endColumn":55},{"ruleId":"337","severity":1,"message":"350","line":4,"column":10,"nodeType":"339","messageId":"340","endLine":4,"endColumn":14},{"ruleId":"337","severity":1,"message":"349","line":35,"column":11,"nodeType":"339","messageId":"340","endLine":35,"endColumn":18},{"ruleId":"337","severity":1,"message":"350","line":9,"column":10,"nodeType":"339","messageId":"340","endLine":9,"endColumn":14},{"ruleId":"345","severity":1,"message":"351","line":35,"column":6,"nodeType":"347","endLine":35,"endColumn":29,"suggestions":"352"},{"ruleId":"353","severity":1,"message":"354","line":49,"column":56,"nodeType":"355","messageId":"356","endLine":49,"endColumn":58},{"ruleId":"345","severity":1,"message":"357","line":61,"column":6,"nodeType":"347","endLine":61,"endColumn":45,"suggestions":"358"},{"ruleId":"337","severity":1,"message":"359","line":2,"column":17,"nodeType":"339","messageId":"340","endLine":2,"endColumn":25},{"ruleId":"337","severity":1,"message":"360","line":40,"column":27,"nodeType":"339","messageId":"340","endLine":40,"endColumn":32},{"ruleId":"345","severity":1,"message":"361","line":74,"column":6,"nodeType":"347","endLine":74,"endColumn":56,"suggestions":"362"},{"ruleId":"337","severity":1,"message":"349","line":19,"column":33,"nodeType":"339","messageId":"340","endLine":19,"endColumn":40},{"ruleId":"345","severity":1,"message":"357","line":48,"column":6,"nodeType":"347","endLine":48,"endColumn":41,"suggestions":"363"},{"ruleId":"337","severity":1,"message":"364","line":24,"column":11,"nodeType":"339","messageId":"340","endLine":24,"endColumn":18},{"ruleId":"337","severity":1,"message":"365","line":2,"column":17,"nodeType":"339","messageId":"340","endLine":2,"endColumn":26},{"ruleId":"337","severity":1,"message":"349","line":21,"column":11,"nodeType":"339","messageId":"340","endLine":21,"endColumn":18},{"ruleId":"337","severity":1,"message":"366","line":12,"column":9,"nodeType":"339","messageId":"340","endLine":12,"endColumn":16},{"ruleId":"337","severity":1,"message":"367","line":26,"column":9,"nodeType":"339","messageId":"340","endLine":26,"endColumn":14},{"ruleId":"337","severity":1,"message":"349","line":31,"column":11,"nodeType":"339","messageId":"340","endLine":31,"endColumn":18},{"ruleId":"368","replacedBy":"369"},{"ruleId":"370","replacedBy":"371"},{"ruleId":"368","replacedBy":"372"},{"ruleId":"370","replacedBy":"373"},{"ruleId":"337","severity":1,"message":"374","line":42,"column":11,"nodeType":"339","messageId":"340","endLine":42,"endColumn":19},{"ruleId":"337","severity":1,"message":"375","line":12,"column":8,"nodeType":"339","messageId":"340","endLine":12,"endColumn":20},{"ruleId":"345","severity":1,"message":"357","line":48,"column":6,"nodeType":"347","endLine":48,"endColumn":35,"suggestions":"376"},{"ruleId":"337","severity":1,"message":"377","line":7,"column":23,"nodeType":"339","messageId":"340","endLine":7,"endColumn":34},{"ruleId":"378","severity":1,"message":"379","line":35,"column":9,"nodeType":"380","endLine":35,"endColumn":36},{"ruleId":"337","severity":1,"message":"375","line":4,"column":8,"nodeType":"339","messageId":"340","endLine":4,"endColumn":20},{"ruleId":"337","severity":1,"message":"381","line":19,"column":10,"nodeType":"339","messageId":"340","endLine":19,"endColumn":22},{"ruleId":"337","severity":1,"message":"360","line":20,"column":10,"nodeType":"339","messageId":"340","endLine":20,"endColumn":15},{"ruleId":"337","severity":1,"message":"382","line":20,"column":17,"nodeType":"339","messageId":"340","endLine":20,"endColumn":25},{"ruleId":"337","severity":1,"message":"383","line":21,"column":10,"nodeType":"339","messageId":"340","endLine":21,"endColumn":17},{"ruleId":"337","severity":1,"message":"384","line":2,"column":38,"nodeType":"339","messageId":"340","endLine":2,"endColumn":53},{"ruleId":"337","severity":1,"message":"350","line":4,"column":10,"nodeType":"339","messageId":"340","endLine":4,"endColumn":14},{"ruleId":"337","severity":1,"message":"375","line":11,"column":10,"nodeType":"339","messageId":"340","endLine":11,"endColumn":22},{"ruleId":"353","severity":1,"message":"354","line":36,"column":46,"nodeType":"355","messageId":"356","endLine":36,"endColumn":48},{"ruleId":"337","severity":1,"message":"359","line":1,"column":17,"nodeType":"339","messageId":"340","endLine":1,"endColumn":25},{"ruleId":"337","severity":1,"message":"367","line":30,"column":9,"nodeType":"339","messageId":"340","endLine":30,"endColumn":14},{"ruleId":"337","severity":1,"message":"349","line":22,"column":11,"nodeType":"339","messageId":"340","endLine":22,"endColumn":18},{"ruleId":"345","severity":1,"message":"385","line":30,"column":6,"nodeType":"347","endLine":30,"endColumn":36,"suggestions":"386"},{"ruleId":"387","severity":1,"message":"388","line":39,"column":15,"nodeType":"380","endLine":46,"endColumn":17},{"ruleId":"337","severity":1,"message":"389","line":11,"column":8,"nodeType":"339","messageId":"340","endLine":11,"endColumn":21},{"ruleId":"337","severity":1,"message":"390","line":19,"column":10,"nodeType":"339","messageId":"340","endLine":19,"endColumn":25},{"ruleId":"337","severity":1,"message":"391","line":33,"column":44,"nodeType":"339","messageId":"340","endLine":33,"endColumn":48},{"ruleId":"337","severity":1,"message":"392","line":6,"column":10,"nodeType":"339","messageId":"340","endLine":6,"endColumn":20},{"ruleId":"337","severity":1,"message":"393","line":6,"column":22,"nodeType":"339","messageId":"340","endLine":6,"endColumn":35},{"ruleId":"337","severity":1,"message":"349","line":39,"column":11,"nodeType":"339","messageId":"340","endLine":39,"endColumn":18},{"ruleId":"337","severity":1,"message":"360","line":39,"column":20,"nodeType":"339","messageId":"340","endLine":39,"endColumn":25},{"ruleId":"337","severity":1,"message":"394","line":39,"column":37,"nodeType":"339","messageId":"340","endLine":39,"endColumn":42},{"ruleId":"337","severity":1,"message":"391","line":39,"column":44,"nodeType":"339","messageId":"340","endLine":39,"endColumn":48},{"ruleId":"337","severity":1,"message":"395","line":42,"column":20,"nodeType":"339","messageId":"340","endLine":42,"endColumn":37},{"ruleId":"345","severity":1,"message":"396","line":60,"column":6,"nodeType":"347","endLine":60,"endColumn":34,"suggestions":"397"},{"ruleId":"398","severity":1,"message":"399","line":189,"column":23,"nodeType":"380","endLine":193,"endColumn":25},{"ruleId":"337","severity":1,"message":"365","line":2,"column":17,"nodeType":"339","messageId":"340","endLine":2,"endColumn":26},{"ruleId":"337","severity":1,"message":"400","line":5,"column":10,"nodeType":"339","messageId":"340","endLine":5,"endColumn":21},{"ruleId":"337","severity":1,"message":"389","line":10,"column":8,"nodeType":"339","messageId":"340","endLine":10,"endColumn":21},{"ruleId":"337","severity":1,"message":"390","line":18,"column":10,"nodeType":"339","messageId":"340","endLine":18,"endColumn":25},{"ruleId":"337","severity":1,"message":"401","line":23,"column":9,"nodeType":"339","messageId":"340","endLine":23,"endColumn":17},{"ruleId":"337","severity":1,"message":"391","line":33,"column":44,"nodeType":"339","messageId":"340","endLine":33,"endColumn":48},{"ruleId":"345","severity":1,"message":"402","line":52,"column":6,"nodeType":"347","endLine":52,"endColumn":16,"suggestions":"403"},{"ruleId":"337","severity":1,"message":"404","line":14,"column":9,"nodeType":"339","messageId":"340","endLine":14,"endColumn":17},{"ruleId":"345","severity":1,"message":"405","line":43,"column":6,"nodeType":"347","endLine":43,"endColumn":29,"suggestions":"406"},"no-unused-vars","'gsap' is defined but never used.","Identifier","unusedVar","no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'orderAddress.fullName'. Either include it or remove the dependency array.","ArrayExpression",["407"],"'loading' is assigned a value but never used.","'Link' is defined but never used.","React Hook useEffect has missing dependencies: 'orderPaymentMethod.paymentMethod' and 'orderPaymentMethod.shippingMethod.name'. Either include them or remove the dependency array.",["408"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'timer'. Either include it or remove the dependency array.",["409"],"'useState' is defined but never used.","'error' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'success'. Either include it or remove the dependency array.",["410"],["411"],"'success' is assigned a value but never used.","'useEffect' is defined but never used.","'history' is assigned a value but never used.","'match' is assigned a value but never used.","no-native-reassign",["412"],"no-negated-in-lhs",["413"],["412"],["413"],"'userInfo' is assigned a value but never used.","'ErrorMessage' is defined but never used.",["414"],"'useDispatch' is defined but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","'successColor' is assigned a value but never used.","'setError' is assigned a value but never used.","'message' is assigned a value but never used.","'useLayoutEffect' is defined but never used.","React Hook useEffect has missing dependencies: 'history' and 'userInfo'. Either include them or remove the dependency array. Outer scope values like 'listProductReviews' aren't valid dependencies because mutating them doesn't re-render the component.",["415"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'ProductFilter' is defined but never used.","'getCartProducts' is defined but never used.","'page' is assigned a value but never used.","'filterShow' is assigned a value but never used.","'setFilterShow' is assigned a value but never used.","'pages' is assigned a value but never used.","'categoriesLoading' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'userInfo'. Either include it or remove the dependency array. Outer scope values like 'productConstants' aren't valid dependencies because mutating them doesn't re-render the component.",["416"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'useSelector' is defined but never used.","'location' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'match.params.category'. Either include it or remove the dependency array.",["417"],"'dispatch' is assigned a value but never used.","React Hook useEffect has an unnecessary dependency: 'axios'. Either exclude it or remove the dependency array. Outer scope values like 'axios' aren't valid dependencies because mutating them doesn't re-render the component.",["418"],{"desc":"419","fix":"420"},{"desc":"421","fix":"422"},{"desc":"423","fix":"424"},{"desc":"425","fix":"426"},{"desc":"427","fix":"428"},"no-global-assign","no-unsafe-negation",{"desc":"429","fix":"430"},{"desc":"431","fix":"432"},{"desc":"433","fix":"434"},{"desc":"435","fix":"436"},{"desc":"437","fix":"438"},"Update the dependencies array to be: [history, userInfo, user, dispatch, orderAddress.fullName]",{"range":"439","text":"440"},"Update the dependencies array to be: [orderAddress, history, orderPaymentMethod.paymentMethod, orderPaymentMethod.shippingMethod.name]",{"range":"441","text":"442"},"Update the dependencies array to be: [isFavorite, dispatch, match.params.id, timer]",{"range":"443","text":"444"},"Update the dependencies array to be: [orderAddress, history, orderPaymentMethod, order, success]",{"range":"445","text":"446"},"Update the dependencies array to be: [history, userInfo, user, dispatch, timer]",{"range":"447","text":"448"},"Update the dependencies array to be: [history, userInfo, dispatch, timer]",{"range":"449","text":"450"},"Update the dependencies array to be: [dispatch, history, userInfo]",{"range":"451","text":"452"},"Update the dependencies array to be: [dispatch, userInfo]",{"range":"453","text":"454"},"Update the dependencies array to be: [dispatch, match.params.category]",{"range":"455","text":"456"},"Update the dependencies array to be: [item, dispatch]",{"range":"457","text":"458"},[1678,1713],"[history, userInfo, user, dispatch, orderAddress.fullName]",[1278,1301],"[orderAddress, history, orderPaymentMethod.paymentMethod, orderPaymentMethod.shippingMethod.name]",[2113,2152],"[isFavorite, dispatch, match.params.id, timer]",[2386,2436],"[orderAddress, history, orderPaymentMethod, order, success]",[1612,1647],"[history, userInfo, user, dispatch, timer]",[1706,1735],"[history, userInfo, dispatch, timer]",[939,969],"[dispatch, history, userInfo]",[1857,1885],"[dispatch, userInfo]",[1655,1665],"[dispatch, match.params.category]",[1418,1441],"[item, dispatch]"]