[{"/home/devox/projects/techHeart/frontend/src/index.js":"1","/home/devox/projects/techHeart/frontend/src/App.js":"2","/home/devox/projects/techHeart/frontend/src/reportWebVitals.js":"3","/home/devox/projects/techHeart/frontend/src/components/header/Header.js":"4","/home/devox/projects/techHeart/frontend/src/components/footer/Footer.js":"5","/home/devox/projects/techHeart/frontend/src/screens/product-screen/ProductScreen.js":"6","/home/devox/projects/techHeart/frontend/src/screens/home-screen/HomeScreen.js":"7","/home/devox/projects/techHeart/frontend/src/components/product/Product.js":"8","/home/devox/projects/techHeart/frontend/src/redux/store.js":"9","/home/devox/projects/techHeart/frontend/src/components/loader/Loader.js":"10","/home/devox/projects/techHeart/frontend/src/components/error-message/ErrorMessage.js":"11","/home/devox/projects/techHeart/frontend/src/components/loader-product/LoaderProduct.js":"12","/home/devox/projects/techHeart/frontend/src/components/scroll-to-top/ScrollToTop.jsx":"13","/home/devox/projects/techHeart/frontend/src/redux/cart/cart.actions.js":"14","/home/devox/projects/techHeart/frontend/src/redux/product/product.reducers.js":"15","/home/devox/projects/techHeart/frontend/src/redux/product/product.constants.js":"16","/home/devox/projects/techHeart/frontend/src/redux/product/product.actions.js":"17","/home/devox/projects/techHeart/frontend/src/redux/cart/cart.reducers.js":"18","/home/devox/projects/techHeart/frontend/src/redux/cart/cart.constants.js":"19","/home/devox/projects/techHeart/frontend/src/components/cart-dropdown/CartDropdown.js":"20","/home/devox/projects/techHeart/frontend/src/screens/checkout/Checkout.js":"21","/home/devox/projects/techHeart/frontend/src/utils.js":"22","/home/devox/projects/techHeart/frontend/src/redux/user/user.reducers.js":"23","/home/devox/projects/techHeart/frontend/src/redux/user/user.constants.js":"24","/home/devox/projects/techHeart/frontend/src/screens/login/Login.js":"25","/home/devox/projects/techHeart/frontend/src/redux/user/user.actions.js":"26","/home/devox/projects/techHeart/frontend/src/screens/signup/Signup.js":"27","/home/devox/projects/techHeart/frontend/src/components/user-menu-dropdown/UserDropdown.js":"28","/home/devox/projects/techHeart/frontend/src/screens/profile/ProfileScreen.js":"29","/home/devox/projects/techHeart/frontend/src/screens/shipping-screen/ShippingScreen.js":"30","/home/devox/projects/techHeart/frontend/src/components/profile-sidebar/ProfileSidebar.js":"31","/home/devox/projects/techHeart/frontend/src/components/profile-info/YourInfo.js":"32","/home/devox/projects/techHeart/frontend/src/components/profile-addresses/ProfileAddresses.js":"33","/home/devox/projects/techHeart/frontend/src/screens/address-edit/AddressEdit.js":"34"},{"size":768,"mtime":1609806107518,"results":"35","hashOfConfig":"36"},{"size":1568,"mtime":1610898740739,"results":"37","hashOfConfig":"36"},{"size":362,"mtime":1609289486641,"results":"38","hashOfConfig":"36"},{"size":3043,"mtime":1611087316337,"results":"39","hashOfConfig":"36"},{"size":1089,"mtime":1609353833877,"results":"40","hashOfConfig":"36"},{"size":6214,"mtime":1610713492558,"results":"41","hashOfConfig":"36"},{"size":1437,"mtime":1610598099987,"results":"42","hashOfConfig":"36"},{"size":1838,"mtime":1610316526957,"results":"43","hashOfConfig":"36"},{"size":1833,"mtime":1611011706777,"results":"44","hashOfConfig":"36"},{"size":611,"mtime":1609792335618,"results":"45","hashOfConfig":"36"},{"size":429,"mtime":1610600172017,"results":"46","hashOfConfig":"36"},{"size":420,"mtime":1609802173658,"results":"47","hashOfConfig":"36"},{"size":347,"mtime":1608667914500,"results":"48","hashOfConfig":"36"},{"size":859,"mtime":1610453869286,"results":"49","hashOfConfig":"36"},{"size":998,"mtime":1610300554987,"results":"50","hashOfConfig":"36"},{"size":339,"mtime":1610295786727,"results":"51","hashOfConfig":"36"},{"size":1537,"mtime":1610383000163,"results":"52","hashOfConfig":"36"},{"size":1052,"mtime":1610149970892,"results":"53","hashOfConfig":"36"},{"size":153,"mtime":1609882700147,"results":"54","hashOfConfig":"36"},{"size":2864,"mtime":1610899053509,"results":"55","hashOfConfig":"36"},{"size":4322,"mtime":1610901165679,"results":"56","hashOfConfig":"36"},{"size":95,"mtime":1610120577055,"results":"57","hashOfConfig":"36"},{"size":3727,"mtime":1611011737127,"results":"58","hashOfConfig":"36"},{"size":1139,"mtime":1611004786340,"results":"59","hashOfConfig":"36"},{"size":2708,"mtime":1610598127117,"results":"60","hashOfConfig":"36"},{"size":6692,"mtime":1611075967740,"results":"61","hashOfConfig":"36"},{"size":5806,"mtime":1610598213117,"results":"62","hashOfConfig":"36"},{"size":1353,"mtime":1611087360367,"results":"63","hashOfConfig":"36"},{"size":1129,"mtime":1610928478789,"results":"64","hashOfConfig":"36"},{"size":7263,"mtime":1610677864521,"results":"65","hashOfConfig":"36"},{"size":3261,"mtime":1610899109999,"results":"66","hashOfConfig":"36"},{"size":8709,"mtime":1611087256877,"results":"67","hashOfConfig":"36"},{"size":8266,"mtime":1611090737117,"results":"68","hashOfConfig":"36"},{"size":4894,"mtime":1611087621517,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"19vth6p",{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"72"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"72"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"72"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"72"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"72"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"72"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"/home/devox/projects/techHeart/frontend/src/index.js",[],["146","147"],"/home/devox/projects/techHeart/frontend/src/App.js",[],"/home/devox/projects/techHeart/frontend/src/reportWebVitals.js",[],"/home/devox/projects/techHeart/frontend/src/components/header/Header.js",[],"/home/devox/projects/techHeart/frontend/src/components/footer/Footer.js",[],"/home/devox/projects/techHeart/frontend/src/screens/product-screen/ProductScreen.js",["148"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport StarRatings from \"react-star-ratings\";\r\nimport { BsHeartFill } from \"react-icons/bs\";\r\nimport \"./ProductScreen.scss\";\r\nimport { TiShoppingCart } from \"react-icons/ti\";\r\nimport { AiOutlineCheckCircle, AiOutlineCloseCircle } from \"react-icons/ai\";\r\nimport axios from \"axios\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport LoaderProduct from \"../../components/loader-product/LoaderProduct.js\";\r\nimport { addToCart } from \"../../redux/cart/cart.actions.js\";\r\n//!==================================================================\r\n\r\nconst ProductScreen = ({ match, history }) => {\r\n  const [like, setLike] = useState(false);\r\n  const [product, setProduct] = useState({});\r\n  const [loading, setLoading] = useState(true);\r\n  const [qty, setQty] = useState(1);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  //! Getting the state with redux hooks ============================\r\n  const cartShow = useSelector((state) => state.cart.showCart);\r\n  //?================================================================\r\n\r\n  //! Get the product by id from the API=============================\r\n  useEffect(() => {\r\n    const fetchProduct = async () => {\r\n      const { data } = await axios.get(`/api/products/${match.params.id}`);\r\n      setProduct(data);\r\n      setLoading(false);\r\n    };\r\n    fetchProduct();\r\n  }, [match]);\r\n  //?==================================================================\r\n  //!Handlers =========================================================\r\n  const addToCartHandler = () => {\r\n    dispatch(addToCart(match.params.id, Number(qty)));\r\n  };\r\n\r\n  //?==================================================================\r\n  return (\r\n    <>\r\n      <div className=\" top-links mb-sm\">\r\n        <Link className=\"product-screen__link\" to=\"/\">\r\n          Home\r\n        </Link>\r\n        <Link className=\"product-screen__link\" to=\"/shop\">\r\n          Shop\r\n        </Link>\r\n      </div>\r\n      {loading ? (\r\n        <LoaderProduct />\r\n      ) : (\r\n        <div className=\"product-screen__body\">\r\n          <h1 className=\"product-screen__name\">{product.name}</h1>\r\n          <div className=\"product-screen__image-wrapper\">\r\n            <img\r\n              className=\"product-screen__image\"\r\n              src={product.image}\r\n              alt=\"product\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"product-screen__price\">\r\n            <h4 className=\" product-screen__price--title\">PRICE</h4>\r\n            <span className=\" product-screen__price--value\">\r\n              $ {product.price}\r\n            </span>\r\n            {product.countInStock > 0 ? (\r\n              <p className=\"product-screen__stock\">\r\n                <AiOutlineCheckCircle />\r\n                &nbsp;&nbsp;Product is in stock\r\n              </p>\r\n            ) : (\r\n              <p className=\"product-screen__stock product-screen__stock--out\">\r\n                <AiOutlineCloseCircle />\r\n                &nbsp;&nbsp; Product out of stock\r\n              </p>\r\n            )}\r\n\r\n            {product.countInStock > 0 && (\r\n              <div className=\"product-screen__quantity-selector\">\r\n                <form action=\"\">\r\n                  <label\r\n                    className=\"product-screen__quantity-selector--text\"\r\n                    htmlFor=\"quantity\"\r\n                  >\r\n                    Select quantity\r\n                  </label>\r\n                  <select\r\n                    className=\"product-screen__quantity-selector--selection\"\r\n                    value={qty}\r\n                    name=\"quantity\"\r\n                    id=\"quantity\"\r\n                    onChange={(e) => setQty(e.target.value)}\r\n                  >\r\n                    {[...Array(product.countInStock).keys()].map((el) => (\r\n                      <option\r\n                        className=\"product-screen__quantity-selector--option\"\r\n                        key={el + 1}\r\n                        value={el + 1}\r\n                      >\r\n                        {el + 1}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </form>\r\n              </div>\r\n            )}\r\n            {product.countInStock === 0 ? (\r\n              <button className=\"product-screen__button-disabled\">\r\n                {\" \"}\r\n                <TiShoppingCart className=\"product-screen__button--icon\" /> out\r\n                of stock{\" \"}\r\n              </button>\r\n            ) : (\r\n              <button\r\n                onClick={addToCartHandler}\r\n                className=\"product-screen__button\"\r\n              >\r\n                <TiShoppingCart className=\"product-screen__button--icon\" /> Add\r\n                to cart\r\n              </button>\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"product-screen__rating\">\r\n            <span className=\"product__rating-text\">\r\n              User Rating:&nbsp;&nbsp;&nbsp;\r\n              <strong>{product.rating}</strong> ({product.numReviews} reviews)\r\n            </span>\r\n            <StarRatings\r\n              className=\"product-screen__rating-stars\"\r\n              rating={product.rating}\r\n              starDimension=\"2rem\"\r\n              starSpacing=\".25rem\"\r\n              starRatedColor=\"rgb(255, 180, 3)\"\r\n            />\r\n          </div>\r\n          <div className=\"product-screen__add-favorite\">\r\n            <span className=\"product-screen__add-favorite--text\">\r\n              ADD TO WISH LIST\r\n            </span>\r\n            <BsHeartFill\r\n              onClick={() => setLike(!like)}\r\n              className={\r\n                like\r\n                  ? \"product-screen__heart product-screen__heart--selected\"\r\n                  : \"product-screen__heart\"\r\n              }\r\n            />\r\n          </div>\r\n          <div className=\"product-screen__details\">\r\n            <h3 className=\"heading-3 \">\r\n              {\" \"}\r\n              <strong>PRODUCT DESCRIPTION</strong>{\" \"}\r\n            </h3>\r\n            <p className=\"product-screen__details--text\">\r\n              {product.description}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductScreen;\r\n","/home/devox/projects/techHeart/frontend/src/screens/home-screen/HomeScreen.js",[],"/home/devox/projects/techHeart/frontend/src/components/product/Product.js",[],["149","150"],"/home/devox/projects/techHeart/frontend/src/redux/store.js",[],"/home/devox/projects/techHeart/frontend/src/components/loader/Loader.js",[],"/home/devox/projects/techHeart/frontend/src/components/error-message/ErrorMessage.js",[],"/home/devox/projects/techHeart/frontend/src/components/loader-product/LoaderProduct.js",[],"/home/devox/projects/techHeart/frontend/src/components/scroll-to-top/ScrollToTop.jsx",[],"/home/devox/projects/techHeart/frontend/src/redux/cart/cart.actions.js",[],"/home/devox/projects/techHeart/frontend/src/redux/product/product.reducers.js",[],"/home/devox/projects/techHeart/frontend/src/redux/product/product.constants.js",[],"/home/devox/projects/techHeart/frontend/src/redux/product/product.actions.js",[],"/home/devox/projects/techHeart/frontend/src/redux/cart/cart.reducers.js",[],"/home/devox/projects/techHeart/frontend/src/redux/cart/cart.constants.js",[],"/home/devox/projects/techHeart/frontend/src/components/cart-dropdown/CartDropdown.js",[],"/home/devox/projects/techHeart/frontend/src/screens/checkout/Checkout.js",["151","152"],"import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { addToCart, removeItem } from \"../../redux/cart/cart.actions.js\";\r\nimport \"./Checkout.scss\";\r\nimport { roundToTwo } from \"../../utils.js\";\r\n\r\n//!=======================================================\r\nconst Checkout = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n  const cartItems = useSelector((state) => state.cart.cartItems);\r\n  const cartItemsNumber = cartItems.reduce(\r\n    (accum, cartItem) => accum + cartItem.qty,\r\n    0\r\n  );\r\n  const subtotal = cartItems.reduce(\r\n    (accum, cartItem) => accum + cartItem.qty * cartItem.price,\r\n    0\r\n  );\r\n  const removeFromCartHandler = (id) => {\r\n    dispatch(removeItem(id));\r\n  };\r\n  const checkoutHandler = () => {\r\n    history.push(\"/login?redirect=shipping\");\r\n  };\r\n  return (\r\n    <div className=\"checkout-screen\">\r\n      <h1 className=\"heading-1  home-screen__title \">CHECK OUT</h1>\r\n\r\n      <h2 className=\"checkout-screen__item-count\">\r\n        You have {cartItemsNumber} items in your cart.\r\n      </h2>\r\n      {cartItems.map((item) => (\r\n        <div key={item.product} className=\"checkout-screen__item\">\r\n          <img\r\n            src={item.image}\r\n            alt={item.name}\r\n            className=\"checkout-screen__image\"\r\n          />\r\n          <div className=\"checkout-screen__item-details\">\r\n            <h3 className=\"heading-3 checkout-screen__item-details--title\">\r\n              {item.name} x {item.qty}\r\n            </h3>\r\n            {item.countInStock ? (\r\n              <h3 className=\"in-stock\">In stock</h3>\r\n            ) : (\r\n              <h3 className=\"out-of-stock\">Not in stock</h3>\r\n            )}\r\n            <h3 className=\"heading-3 checkout-screen__item-details--price\">\r\n              PRICE:\r\n            </h3>\r\n            <h3 className=\"heading-3 checkout-screen__item-details--price-value\">\r\n              € {item.price} &#10006;&nbsp;\r\n              {item.countInStock > 0 && (\r\n                <div className=\"product-screen__quantity-selector checkout-screen__quantity-selector\">\r\n                  <form action=\"\">\r\n                    <label\r\n                      className=\"product-screen__quantity-selector--text\"\r\n                      htmlFor=\"quantity\"\r\n                    >\r\n                      quantity\r\n                    </label>\r\n                    <select\r\n                      className=\"product-screen__quantity-selector--selection\"\r\n                      value={item.qty}\r\n                      name=\"quantity\"\r\n                      id=\"quantity\"\r\n                      onChange={(e) =>\r\n                        dispatch(\r\n                          addToCart(item.product, Number(e.target.value))\r\n                        )\r\n                      }\r\n                    >\r\n                      {[...Array(item.countInStock).keys()].map((el) => (\r\n                        <option\r\n                          className=\"product-screen__quantity-selector--option\"\r\n                          key={el + 1}\r\n                          value={el + 1}\r\n                        >\r\n                          {el + 1}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                  </form>\r\n                </div>\r\n              )}\r\n            </h3>\r\n            <span\r\n              onClick={() => removeFromCartHandler(item.product)}\r\n              className=\"checkout-screen__remove\"\r\n            >\r\n              Remove\r\n            </span>\r\n          </div>\r\n        </div>\r\n      ))}\r\n      <div className=\"checkout-screen__subtotal\">\r\n        <div>\r\n          <h3 className=\"checkout-screen__subtotal--title\">\r\n            Subtotal ({cartItemsNumber} productos):\r\n          </h3>\r\n          <h3 className=\"checkout-screen__subtotal--value\">\r\n            € {roundToTwo(subtotal)}\r\n          </h3>\r\n        </div>\r\n        {cartItems.length === 0 ? (\r\n          <button className=\" btn-disabled\">Cart is empty</button>\r\n        ) : (\r\n          <button\r\n            onClick={checkoutHandler}\r\n            className=\"checkout-screen__subtotal--button\"\r\n          >\r\n            Proceed to checkout\r\n          </button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Checkout;\r\n","/home/devox/projects/techHeart/frontend/src/utils.js",[],"/home/devox/projects/techHeart/frontend/src/redux/user/user.reducers.js",[],"/home/devox/projects/techHeart/frontend/src/redux/user/user.constants.js",[],"/home/devox/projects/techHeart/frontend/src/screens/login/Login.js",["153"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport ErrorMessage from \"../../components/error-message/ErrorMessage.js\";\r\nimport { login } from \"../../redux/user/user.actions.js\";\r\nimport \"./Login.scss\";\r\n//!==========================================================\r\nconst Login = ({ location, history }) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { error, userInfo } = userLogin;\r\n\r\n  const redirect = location.search ? location.search.split(\"+\")[1] : \"/profile\";\r\n\r\n  //! Check if we are logged in so you get a redirect if you try to access the login route while logged in\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect);\r\n    }\r\n  }, [history, userInfo, redirect]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    //! Dispatch Login ====================\r\n    dispatch(login(email, password));\r\n  };\r\n  return (\r\n    <div className=\"login-screen\">\r\n      <div className=\"home-screen__top\">\r\n        <h1 className=\"heading-1  home-screen__title\">SIGNIN</h1>\r\n      </div>\r\n      {error && <ErrorMessage color=\"alert\">{error}</ErrorMessage>}\r\n\r\n      <div className=\"login-screen__form-container\">\r\n        <form className=\"login-screen__form\" onSubmit={submitHandler}>\r\n          <label className=\"login-screen__form--input-label\" htmlFor=\"email\">\r\n            Email Address\r\n          </label>\r\n          <input\r\n            placeholder=\"Enter email\"\r\n            className=\"login-screen__form--input\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            name=\"email\"\r\n            type=\"email\"\r\n          />\r\n          <label className=\"login-screen__form--input-label\" htmlFor=\"password\">\r\n            Password\r\n          </label>\r\n          <input\r\n            placeholder=\"Enter password\"\r\n            className=\"login-screen__form--input\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            name=\"password\"\r\n            type=\"password\"\r\n          />\r\n          <input\r\n            className=\"login-screen__form--submit-btn\"\r\n            type=\"submit\"\r\n            value=\"Sign In\"\r\n          />\r\n        </form>\r\n        <Link\r\n          className=\"login-screen__create-account-link\"\r\n          to={redirect ? \"/register?redirect=${redirect}\" : \"/register\"}\r\n        >\r\n          Don't have an account? Create one here.\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","/home/devox/projects/techHeart/frontend/src/redux/user/user.actions.js",[],"/home/devox/projects/techHeart/frontend/src/screens/signup/Signup.js",["154","155"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport ErrorMessage from \"../../components/error-message/ErrorMessage.js\";\r\nimport { register } from \"../../redux/user/user.actions.js\";\r\nimport \"./Signup.scss\";\r\n//!==========================================================\r\nconst Signup = ({ location, history }) => {\r\n  const redirect = location.search ? location.search.split(\"+\")[1] : \"/\";\r\n  const dispatch = useDispatch();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setconfirmPassword] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [message, setMessage] = useState(null);\r\n  const userRegister = useSelector((state) => state.userRegister);\r\n  const { loading, error, userInfo } = userRegister;\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect);\r\n    }\r\n  }, [history, userInfo, redirect]);\r\n  const passwordLength = password.length < 6 ? false : true;\r\n  const passwordLowercase = /[a-z]/.test(password) < 1 ? false : true;\r\n  const passwordUppercase = /[A-Z]/.test(password) < 1 ? false : true;\r\n  const passwordNumber = /[0-9]/.test(password) < 1 ? false : true;\r\n  const passwordEqualConfirmPassword =\r\n    password !== confirmPassword ? false : true;\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    //!Password check =====================\r\n\r\n    if (\r\n      passwordLength &&\r\n      passwordLowercase &&\r\n      passwordUppercase &&\r\n      passwordNumber &&\r\n      passwordEqualConfirmPassword\r\n    ) {\r\n      //! Dispatch Login ====================\r\n      dispatch(register(name, email, password));\r\n    } else {\r\n      setMessage(\"You must comply with all the password requisites.\");\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"login-screen\">\r\n      <div className=\"home-screen__top\">\r\n        <h1 className=\"heading-1  home-screen__title\">SIGNUP</h1>\r\n      </div>\r\n      {error && <ErrorMessage color=\"alert\">{error}</ErrorMessage>}\r\n\r\n      <div className=\"login-screen__form-container\">\r\n        <form className=\"login-screen__form\" onSubmit={submitHandler}>\r\n          <label className=\"login-screen__form--input-label\" htmlFor=\"name\">\r\n            Name\r\n          </label>\r\n          <input\r\n            placeholder=\"Enter name\"\r\n            className=\"login-screen__form--input\"\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n            name=\"name\"\r\n            type=\"text\"\r\n          />\r\n          <label className=\"login-screen__form--input-label\" htmlFor=\"email\">\r\n            Email\r\n          </label>\r\n          <input\r\n            placeholder=\"Enter email\"\r\n            className=\"login-screen__form--input\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            name=\"email\"\r\n            type=\"email\"\r\n          />\r\n          <label className=\"login-screen__form--input-label\" htmlFor=\"password\">\r\n            Password\r\n          </label>\r\n          <input\r\n            placeholder=\"Enter password\"\r\n            className=\"login-screen__form--input\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            name=\"password\"\r\n            type=\"password\"\r\n          />\r\n          <label\r\n            className=\"login-screen__form--input-label\"\r\n            htmlFor=\"confirmPassword\"\r\n          >\r\n            Confirm Password\r\n          </label>\r\n          <input\r\n            placeholder=\"Confirm password\"\r\n            className=\"login-screen__form--input\"\r\n            value={confirmPassword}\r\n            onChange={(e) => setconfirmPassword(e.target.value)}\r\n            name=\"confirmPassword\"\r\n            type=\"password\"\r\n          />\r\n          {message && <p className=\"signup__password-error\">{message}</p>}\r\n          <div className=\"signup__password-box\">\r\n            <h3>Password must:</h3>\r\n            <p\r\n              className={\r\n                passwordEqualConfirmPassword\r\n                  ? \"signup__password-box--fail\"\r\n                  : \"signup__password-box--checked\"\r\n              }\r\n            >\r\n              match Confirm Password\r\n            </p>\r\n            <p\r\n              className={\r\n                passwordUppercase\r\n                  ? \"signup__password-box--fail\"\r\n                  : \"signup__password-box--checked\"\r\n              }\r\n            >\r\n              contain an uppercase letter\r\n            </p>\r\n            <p\r\n              className={\r\n                passwordLowercase\r\n                  ? \"signup__password-box--fail\"\r\n                  : \"signup__password-box--checked\"\r\n              }\r\n            >\r\n              contain an lowercase letter\r\n            </p>\r\n            <p\r\n              className={\r\n                passwordNumber\r\n                  ? \"signup__password-box--fail\"\r\n                  : \"signup__password-box--checked\"\r\n              }\r\n            >\r\n              contain a number\r\n            </p>\r\n            <p\r\n              className={\r\n                passwordLength\r\n                  ? \"signup__password-box--fail\"\r\n                  : \"signup__password-box--checked\"\r\n              }\r\n            >\r\n              be at least 6 characters long\r\n            </p>\r\n          </div>\r\n          <input\r\n            className=\"login-screen__form--submit-btn\"\r\n            type=\"submit\"\r\n            value=\"Register\"\r\n          />\r\n        </form>\r\n\r\n        <Link\r\n          className=\"login-screen__create-account-link\"\r\n          to={redirect ? \"/login?redirect=${redirect}\" : \"/login\"}\r\n        >\r\n          Have an account? Log in here.\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","/home/devox/projects/techHeart/frontend/src/components/user-menu-dropdown/UserDropdown.js",[],"/home/devox/projects/techHeart/frontend/src/screens/profile/ProfileScreen.js",["156"],"import React from \"react\";\r\nimport \"./ProfileScreen.scss\";\r\nimport { Route } from \"react-router-dom\";\r\nimport ProfileSidebar from \"../../components/profile-sidebar/ProfileSidebar.js\";\r\nimport YourInfo from \"../../components/profile-info/YourInfo.js\";\r\nimport ProfileAddresses from \"../../components/profile-addresses/ProfileAddresses.js\";\r\nimport Checkout from \"../checkout/Checkout.js\";\r\n\r\n//todo ADD GSAP SCROLL TO MAKE LEFT MENU STICKY\r\nimport gsap from \"gsap\";\r\nimport AddressEdit from \"../address-edit/AddressEdit\";\r\n\r\n//!=================================================================\r\nconst ProfileScreen = () => {\r\n  return (\r\n    <div className=\"profile-screen\">\r\n      <ProfileSidebar />\r\n      <div className=\"profile-screen__right\">\r\n        <Route exact path=\"/profile/info\" component={YourInfo} />\r\n        <Route exact path=\"/profile/addresses\" component={ProfileAddresses} />\r\n        <Route exact path=\"/profile/checkout/:id?\" component={Checkout} />{\" \"}\r\n        <Route exact path=\"/profile/addresses/:id\" component={AddressEdit} />{\" \"}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileScreen;\r\n","/home/devox/projects/techHeart/frontend/src/screens/shipping-screen/ShippingScreen.js",["157","158","159","160","161","162","163","164","165","166","167","168"],"import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport \"./ShippingScreen.scss\";\r\nimport {\r\n  getUserDetails,\r\n  updateUserProfile,\r\n} from \"../../redux/user/user.actions.js\";\r\n//!=======================================================\r\nconst ShippingScreen = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [country, setCountry] = useState(\"\");\r\n  const [line1, setLine1] = useState(\"\");\r\n  const [line2, setLine2] = useState(\"\");\r\n  const [city, setCity] = useState(\"\");\r\n  const [stateProvinceRegion, setStateProvinceRegion] = useState(\"\");\r\n  const [postalCode, setPostalCode] = useState(\"\");\r\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { user } = userDetails;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const [edit, setEdit] = useState(false);\r\n  const cartItems = useSelector((state) => state.cart.cartItems);\r\n\r\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile);\r\n  const { success } = userUpdateProfile;\r\n\r\n  const cartItemsNumber = cartItems.reduce(\r\n    (accum, cartItem) => accum + cartItem.qty,\r\n    0\r\n  );\r\n\r\n  useEffect(() => {\r\n    setName(user.name);\r\n    setEmail(user.email);\r\n    setCountry(user.country);\r\n    setLine1(user.line1);\r\n    setLine2(user.line2);\r\n    setCity(user.city);\r\n    setStateProvinceRegion(user.stateProvinceRegion);\r\n    setPostalCode(user.postalCode);\r\n    setPhoneNumber(user.phoneNumber);\r\n  }, [user]);\r\n\r\n  const handleEdit = () => setEdit(!edit);\r\n  const handleUserInfoUpdate = () => {\r\n    setMessage(\"Your profile has been successfully updated.\");\r\n    setSuccessColor(\"success\");\r\n    dispatch(\r\n      updateUserProfile({\r\n        id: user._id,\r\n        name,\r\n        email,\r\n        country,\r\n        line1,\r\n        line2,\r\n        city,\r\n        stateProvinceRegion,\r\n        postalCode,\r\n        phoneNumber,\r\n      })\r\n    );\r\n  };\r\n\r\n  const [successColor, setSuccessColor] = useState(\"alert\");\r\n  const [error, setError] = useState(false);\r\n  const [message, setMessage] = useState(null);\r\n\r\n  return (\r\n    <div className=\"shipping-screen\">\r\n      <h1 className=\"heading-1\">Shipping Options</h1>\r\n      <div className=\"profile-screen__my-details\">\r\n        <div>\r\n          <h3 className=\"heading-3\">Personal details</h3>\r\n          <p className=\"profile-screen__address-label\">\r\n            <strong>Full name</strong>\r\n          </p>\r\n          {edit ? (\r\n            <input\r\n              onChange={(e) => setName(e.target.value)}\r\n              value={name}\r\n              className=\"profile-screen__password-section__input\"\r\n            />\r\n          ) : (\r\n            <p className=\"profile-screen__address-text\">{name}</p>\r\n          )}\r\n          <p className=\"profile-screen__address-label\">\r\n            <strong>Email</strong>\r\n          </p>\r\n          {edit ? (\r\n            <input\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              value={email}\r\n              className=\"profile-screen__password-section__input\"\r\n            />\r\n          ) : (\r\n            <p className=\"profile-screen__address-text\">{email}</p>\r\n          )}\r\n          <p className=\"profile-screen__address-label\">\r\n            <strong>Phone number</strong>\r\n          </p>\r\n          {edit ? (\r\n            <input\r\n              onChange={(e) => setPhoneNumber(e.target.value)}\r\n              value={phoneNumber}\r\n              className=\"profile-screen__password-section__input\"\r\n            />\r\n          ) : (\r\n            <p className=\"profile-screen__address-text\">{phoneNumber}</p>\r\n          )}\r\n        </div>\r\n        <div className=\"profile-screen__address\">\r\n          <h3 className=\"heading-3\">Shipping address</h3>\r\n          <p className=\"profile-screen__address-label\">\r\n            <strong>Address</strong>\r\n          </p>\r\n          {edit ? (\r\n            <input\r\n              onChange={(e) => setLine1(e.target.value)}\r\n              value={line1}\r\n              type=\"text\"\r\n              className=\"profile-screen__password-section__input\"\r\n            />\r\n          ) : (\r\n            <p className=\"profile-screen__address-text\">{line1}</p>\r\n          )}\r\n\r\n          {edit ? (\r\n            <input\r\n              onChange={(e) => setLine2(e.target.value)}\r\n              value={line2}\r\n              type=\"text\"\r\n              className=\"profile-screen__password-section__input\"\r\n            />\r\n          ) : (\r\n            <p className=\"profile-screen__address-text\">{line2}</p>\r\n          )}\r\n\r\n          <p className=\"profile-screen__address-label\">\r\n            <strong>City</strong>\r\n          </p>\r\n          {edit ? (\r\n            <input\r\n              onChange={(e) => setCity(e.target.value)}\r\n              value={city}\r\n              className=\"profile-screen__password-section__input\"\r\n            />\r\n          ) : (\r\n            <p className=\"profile-screen__address-text\">{city}</p>\r\n          )}\r\n\r\n          <p className=\"profile-screen__address-label\">\r\n            <strong>State/Province/Region</strong>\r\n          </p>\r\n          {edit ? (\r\n            <input\r\n              onChange={(e) => setStateProvinceRegion(e.target.value)}\r\n              value={stateProvinceRegion}\r\n              className=\"profile-screen__password-section__input\"\r\n            />\r\n          ) : (\r\n            <p className=\"profile-screen__address-text\">\r\n              {stateProvinceRegion}\r\n            </p>\r\n          )}\r\n\r\n          <p className=\"profile-screen__address-label\">\r\n            <strong>Postal Code</strong>\r\n          </p>\r\n          {edit ? (\r\n            <input\r\n              onChange={(e) => setPostalCode(e.target.value)}\r\n              value={postalCode}\r\n              className=\"profile-screen__password-section__input\"\r\n            />\r\n          ) : (\r\n            <p className=\"profile-screen__address-text\">{postalCode}</p>\r\n          )}\r\n          <p className=\"profile-screen__address-label\">\r\n            <strong>Country</strong>\r\n          </p>\r\n          {edit ? (\r\n            <input\r\n              onChange={(e) => setCountry(e.target.value)}\r\n              value={country}\r\n              className=\"profile-screen__password-section__input\"\r\n            />\r\n          ) : (\r\n            <p className=\"profile-screen__address-text\">{country}</p>\r\n          )}\r\n        </div>\r\n\r\n        {edit ? (\r\n          <button\r\n            className=\"profile-screen__info-edit-btn\"\r\n            onClick={() => {\r\n              handleEdit();\r\n              handleUserInfoUpdate();\r\n            }}\r\n          >\r\n            {\" \"}\r\n            Save changes\r\n          </button>\r\n        ) : (\r\n          <button\r\n            className=\"profile-screen__info-edit-btn\"\r\n            onClick={() => handleEdit()}\r\n          >\r\n            {\" \"}\r\n            Edit info\r\n          </button>\r\n        )}\r\n      </div>\r\n      <hr className=\"line-break\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ShippingScreen;\r\n","/home/devox/projects/techHeart/frontend/src/components/profile-sidebar/ProfileSidebar.js",[],"/home/devox/projects/techHeart/frontend/src/components/profile-info/YourInfo.js",[],"/home/devox/projects/techHeart/frontend/src/components/profile-addresses/ProfileAddresses.js",["169","170","171","172","173","174"],"/home/devox/projects/techHeart/frontend/src/screens/address-edit/AddressEdit.js",[],{"ruleId":"175","replacedBy":"176"},{"ruleId":"177","replacedBy":"178"},{"ruleId":"179","severity":1,"message":"180","line":23,"column":9,"nodeType":"181","messageId":"182","endLine":23,"endColumn":17},{"ruleId":"175","replacedBy":"183"},{"ruleId":"177","replacedBy":"184"},{"ruleId":"179","severity":1,"message":"185","line":1,"column":17,"nodeType":"181","messageId":"182","endLine":1,"endColumn":26},{"ruleId":"179","severity":1,"message":"186","line":3,"column":10,"nodeType":"181","messageId":"182","endLine":3,"endColumn":14},{"ruleId":"187","severity":1,"message":"188","line":69,"column":26,"nodeType":"189","messageId":"190","endLine":69,"endColumn":58},{"ruleId":"179","severity":1,"message":"191","line":17,"column":11,"nodeType":"181","messageId":"182","endLine":17,"endColumn":18},{"ruleId":"187","severity":1,"message":"188","line":162,"column":26,"nodeType":"189","messageId":"190","endLine":162,"endColumn":55},{"ruleId":"179","severity":1,"message":"192","line":10,"column":8,"nodeType":"181","messageId":"182","endLine":10,"endColumn":12},{"ruleId":"179","severity":1,"message":"193","line":5,"column":3,"nodeType":"181","messageId":"182","endLine":5,"endColumn":17},{"ruleId":"179","severity":1,"message":"194","line":12,"column":10,"nodeType":"181","messageId":"182","endLine":12,"endColumn":18},{"ruleId":"179","severity":1,"message":"195","line":12,"column":20,"nodeType":"181","messageId":"182","endLine":12,"endColumn":31},{"ruleId":"179","severity":1,"message":"196","line":13,"column":10,"nodeType":"181","messageId":"182","endLine":13,"endColumn":25},{"ruleId":"179","severity":1,"message":"197","line":13,"column":27,"nodeType":"181","messageId":"182","endLine":13,"endColumn":45},{"ruleId":"179","severity":1,"message":"198","line":27,"column":11,"nodeType":"181","messageId":"182","endLine":27,"endColumn":19},{"ruleId":"179","severity":1,"message":"199","line":33,"column":11,"nodeType":"181","messageId":"182","endLine":33,"endColumn":18},{"ruleId":"179","severity":1,"message":"200","line":35,"column":9,"nodeType":"181","messageId":"182","endLine":35,"endColumn":24},{"ruleId":"179","severity":1,"message":"201","line":72,"column":10,"nodeType":"181","messageId":"182","endLine":72,"endColumn":22},{"ruleId":"179","severity":1,"message":"202","line":73,"column":10,"nodeType":"181","messageId":"182","endLine":73,"endColumn":15},{"ruleId":"179","severity":1,"message":"203","line":73,"column":17,"nodeType":"181","messageId":"182","endLine":73,"endColumn":25},{"ruleId":"179","severity":1,"message":"204","line":74,"column":10,"nodeType":"181","messageId":"182","endLine":74,"endColumn":17},{"ruleId":"179","severity":1,"message":"193","line":5,"column":3,"nodeType":"181","messageId":"182","endLine":5,"endColumn":17},{"ruleId":"179","severity":1,"message":"201","line":33,"column":10,"nodeType":"181","messageId":"182","endLine":33,"endColumn":22},{"ruleId":"179","severity":1,"message":"202","line":34,"column":10,"nodeType":"181","messageId":"182","endLine":34,"endColumn":15},{"ruleId":"179","severity":1,"message":"203","line":34,"column":17,"nodeType":"181","messageId":"182","endLine":34,"endColumn":25},{"ruleId":"179","severity":1,"message":"199","line":36,"column":11,"nodeType":"181","messageId":"182","endLine":36,"endColumn":18},{"ruleId":"179","severity":1,"message":"204","line":37,"column":10,"nodeType":"181","messageId":"182","endLine":37,"endColumn":17},"no-native-reassign",["205"],"no-negated-in-lhs",["206"],"no-unused-vars","'cartShow' is assigned a value but never used.","Identifier","unusedVar",["205"],["206"],"'useEffect' is defined but never used.","'Link' is defined but never used.","no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","'loading' is assigned a value but never used.","'gsap' is defined but never used.","'getUserDetails' is defined but never used.","'password' is assigned a value but never used.","'setPassword' is assigned a value but never used.","'confirmPassword' is assigned a value but never used.","'setConfirmPassword' is assigned a value but never used.","'userInfo' is assigned a value but never used.","'success' is assigned a value but never used.","'cartItemsNumber' is assigned a value but never used.","'successColor' is assigned a value but never used.","'error' is assigned a value but never used.","'setError' is assigned a value but never used.","'message' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]