[{"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\index.js":"1","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\redux\\store.js":"2","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\scroll-to-top\\ScrollToTop.jsx":"3","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\App.js":"4","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\reportWebVitals.js":"5","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\redux\\cart\\cart.reducers.js":"6","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\redux\\product\\product.reducers.js":"7","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\redux\\user\\user.reducers.js":"8","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\redux\\order\\order.reducers.js":"9","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\redux\\cart\\cart.actions.js":"10","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\profile-screen\\ProfileScreen.js":"11","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\login-screen\\Login.js":"12","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\shipping-screen\\ShippingScreen.js":"13","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\signup-screen\\Signup.js":"14","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\redux\\cart\\cart.constants.js":"15","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\redux\\product\\product.constants.js":"16","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\redux\\user\\user.constants.js":"17","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\redux\\order\\order.constants.js":"18","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\footer\\Footer.js":"19","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\header\\Header.js":"20","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\payment-screen\\PaymentScreen.js":"21","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\home-screen\\HomeScreen.js":"22","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\product-screen\\ProductScreen.js":"23","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\complete-order-screen\\CompleteOrder.js":"24","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\redux\\user\\user.actions.js":"25","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\redux\\order\\order.actions.js":"26","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\profile-sidebar\\ProfileSidebar.js":"27","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\profile-info-screen\\YourInfo.js":"28","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\profile-addresses-screen\\ProfileAddresses.js":"29","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\checkout-screen\\Checkout.js":"30","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\address-edit-modal\\AddressEdit.js":"31","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\error-message\\ErrorMessage.js":"32","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\redux\\product\\product.actions.js":"33","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\user-menu-dropdown\\UserDropdown.js":"34","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\cart-dropdown\\CartDropdown.js":"35","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\utils.js":"36","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\loader\\Loader.js":"37","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\loader-product\\LoaderProduct.js":"38","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\action-show\\ActionShow.js":"39","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\order-screen\\OrderScreen.js":"40","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\profile-favorite-screen\\FavoriteScreen.js":"41","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\checkout-steps\\CheckoutSteps.js":"42","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\add-address\\AddAddress.js":"43","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\product\\Product.js":"44","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\loader-generic\\LoaderGeneric.js":"45","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\profile-orders\\ProfileOrders.js":"46","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\order-of-orders\\OrderOfOrders.js":"47"},{"size":768,"mtime":1612129189000,"results":"48","hashOfConfig":"49"},{"size":3710,"mtime":1612492922090,"results":"50","hashOfConfig":"49"},{"size":347,"mtime":1612129189000,"results":"51","hashOfConfig":"49"},{"size":2048,"mtime":1612351597799,"results":"52","hashOfConfig":"49"},{"size":362,"mtime":1612129189000,"results":"53","hashOfConfig":"49"},{"size":886,"mtime":1612129189000,"results":"54","hashOfConfig":"49"},{"size":1011,"mtime":1612129189000,"results":"55","hashOfConfig":"49"},{"size":5021,"mtime":1612129189000,"results":"56","hashOfConfig":"49"},{"size":2830,"mtime":1612631987699,"results":"57","hashOfConfig":"49"},{"size":1827,"mtime":1612129189000,"results":"58","hashOfConfig":"49"},{"size":1550,"mtime":1612488157233,"results":"59","hashOfConfig":"49"},{"size":2740,"mtime":1612129189000,"results":"60","hashOfConfig":"49"},{"size":4751,"mtime":1612351644651,"results":"61","hashOfConfig":"49"},{"size":5870,"mtime":1612617918561,"results":"62","hashOfConfig":"49"},{"size":626,"mtime":1612129189000,"results":"63","hashOfConfig":"49"},{"size":339,"mtime":1612129189000,"results":"64","hashOfConfig":"49"},{"size":1320,"mtime":1612129189000,"results":"65","hashOfConfig":"49"},{"size":764,"mtime":1612486470119,"results":"66","hashOfConfig":"49"},{"size":1222,"mtime":1612129189000,"results":"67","hashOfConfig":"49"},{"size":3903,"mtime":1612389717621,"results":"68","hashOfConfig":"49"},{"size":5787,"mtime":1612455326590,"results":"69","hashOfConfig":"49"},{"size":1692,"mtime":1612129189000,"results":"70","hashOfConfig":"49"},{"size":9253,"mtime":1612662897759,"results":"71","hashOfConfig":"49"},{"size":11196,"mtime":1612632397647,"results":"72","hashOfConfig":"49"},{"size":7734,"mtime":1612129189000,"results":"73","hashOfConfig":"49"},{"size":4127,"mtime":1612630597633,"results":"74","hashOfConfig":"49"},{"size":4967,"mtime":1612632868227,"results":"75","hashOfConfig":"49"},{"size":8902,"mtime":1612649040257,"results":"76","hashOfConfig":"49"},{"size":4083,"mtime":1612540001086,"results":"77","hashOfConfig":"49"},{"size":5956,"mtime":1612266848918,"results":"78","hashOfConfig":"49"},{"size":6096,"mtime":1612130953271,"results":"79","hashOfConfig":"49"},{"size":429,"mtime":1612129189000,"results":"80","hashOfConfig":"49"},{"size":1537,"mtime":1612129189000,"results":"81","hashOfConfig":"49"},{"size":1532,"mtime":1612617763350,"results":"82","hashOfConfig":"49"},{"size":4851,"mtime":1612267775383,"results":"83","hashOfConfig":"49"},{"size":193,"mtime":1612266180948,"results":"84","hashOfConfig":"49"},{"size":611,"mtime":1612129189000,"results":"85","hashOfConfig":"49"},{"size":420,"mtime":1612129189000,"results":"86","hashOfConfig":"49"},{"size":580,"mtime":1612129189000,"results":"87","hashOfConfig":"49"},{"size":9818,"mtime":1612632240012,"results":"88","hashOfConfig":"49"},{"size":4932,"mtime":1612634086094,"results":"89","hashOfConfig":"49"},{"size":3450,"mtime":1612296013060,"results":"90","hashOfConfig":"49"},{"size":4732,"mtime":1612129189000,"results":"91","hashOfConfig":"49"},{"size":4095,"mtime":1612662936012,"results":"92","hashOfConfig":"49"},{"size":421,"mtime":1612388087072,"results":"93","hashOfConfig":"49"},{"size":1422,"mtime":1612737550858,"results":"94","hashOfConfig":"49"},{"size":3924,"mtime":1612648209054,"results":"95","hashOfConfig":"49"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},"jkitux",{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"98"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"98"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"98"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"98"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"98"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"98"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"98"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"150","messages":"151","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"98"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"98"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"98"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"98"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"98"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"98"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"98"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"98"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"98"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"98"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\index.js",[],["208","209"],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\redux\\store.js",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\scroll-to-top\\ScrollToTop.jsx",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\App.js",["210","211"],"import React, { useEffect } from \"react\";\nimport Header from \"./components/header/Header\";\nimport Footer from \"./components/footer/Footer\";\nimport HomeScreen from \"./screens/home-screen/HomeScreen\";\nimport { Route } from \"react-router-dom\";\nimport ProductScreen from \"./screens/product-screen/ProductScreen\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { toggleCartShow } from \"./redux/cart/cart.actions.js\";\nimport Login from \"./screens/login-screen/Login.js\";\nimport Signup from \"./screens/signup-screen/Signup.js\";\nimport ProfileScreen from \"./screens/profile-screen/ProfileScreen.js\";\nimport ShippingScreen from \"./screens/shipping-screen/ShippingScreen.js\";\nimport PaymentScreen from \"./screens/payment-screen/PaymentScreen\";\nimport CompleteOrder from \"./screens/complete-order-screen/CompleteOrder\";\n\n//!==================================================================\nfunction App() {\n  const dispatch = useDispatch();\n  const showCart = useSelector((state) => state.cartToggle.showCart);\n  const overlayClickHandler = () => {\n    dispatch(toggleCartShow());\n  };\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  return (\n    <>\n      <Header />\n      <main className=\"app-main\">\n        <div>\n          <Route path=\"/shipping\" component={ShippingScreen} />{\" \"}\n          <Route path=\"/payment\" component={PaymentScreen} />{\" \"}\n          <Route path=\"/complete-order\" component={CompleteOrder} />{\" \"}\n        </div>\n        {showCart ? (\n          <div onClick={overlayClickHandler} className=\"overlay\">\n            {\" \"}\n          </div>\n        ) : null}{\" \"}\n        <Route path=\"/shop\" render={() => <HomeScreen />} />{\" \"}\n        <Route path=\"/product/:id\" component={ProductScreen} />{\" \"}\n        <Route path=\"/login\" component={Login} />{\" \"}\n        <Route path=\"/register\" component={Signup} />{\" \"}\n        <Route path=\"/profile\" component={ProfileScreen} />{\" \"}\n      </main>{\" \"}\n      <Footer className=\"footer\" />\n    </>\n  );\n}\n\nexport default App;\n","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\redux\\cart\\cart.reducers.js",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\redux\\product\\product.reducers.js",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\redux\\user\\user.reducers.js",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\redux\\order\\order.reducers.js",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\redux\\cart\\cart.actions.js",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\profile-screen\\ProfileScreen.js",["212"],"import React from \"react\";\r\nimport \"./ProfileScreen.scss\";\r\nimport { Route } from \"react-router-dom\";\r\nimport ProfileSidebar from \"../../components/profile-sidebar/ProfileSidebar.js\";\r\nimport YourInfo from \"../profile-info-screen/YourInfo.js\";\r\nimport ProfileAddresses from \"../profile-addresses-screen/ProfileAddresses.js\";\r\nimport Checkout from \"../checkout-screen/Checkout.js\";\r\nimport ProfileOrders from \"../profile-orders/ProfileOrders\";\r\n//todo ADD GSAP SCROLL TO MAKE LEFT MENU STICKY\r\nimport gsap from \"gsap\";\r\nimport AddressEdit from \"../address-edit-modal/AddressEdit\";\r\nimport FavoriteScreen from \"../profile-favorite-screen/FavoriteScreen\";\r\nimport OrderScreen from \"../order-screen/OrderScreen\";\r\n\r\n//!=================================================================\r\nconst ProfileScreen = () => {\r\n  return (\r\n    <div className=\"profile-screen\">\r\n      <ProfileSidebar />\r\n      <div className=\"profile-screen__right\">\r\n        <Route exact path=\"/profile/info\" component={YourInfo} />\r\n        <Route exact path=\"/profile/addresses\" component={ProfileAddresses} />\r\n        <Route exact path=\"/profile/checkout/:id?\" component={Checkout} />{\" \"}\r\n        <Route exact path=\"/profile/addresses/:id\" component={AddressEdit} />{\" \"}\r\n        <Route exact path=\"/profile/favorites\" component={FavoriteScreen} />{\" \"}\r\n        <Route exact path=\"/profile/orders/:id\" component={OrderScreen} />\r\n        <Route exact path=\"/profile/orders\" component={ProfileOrders} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileScreen;\r\n","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\login-screen\\Login.js",["213"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link,useHistory } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport ErrorMessage from \"../../components/error-message/ErrorMessage.js\";\r\nimport { login } from \"../../redux/user/user.actions.js\";\r\nimport \"./Login.scss\";\r\n\r\n//!==========================================================\r\nconst Login = ({ location }) => {\r\n  const history=useHistory();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { error, userInfo } = userLogin;\r\n\r\n  const redirect = location.search ? location.search.split(\"+\")[1] : \"/shop\";\r\n\r\n  //! Check if we are logged in so you get a redirect if you try to access the login route while logged in\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect);\r\n    }\r\n  }, [history, userInfo, redirect]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    //! Dispatch Login ====================\r\n    dispatch(login(email, password));\r\n  };\r\n  return (\r\n    <div className=\"login-screen\">\r\n      <div className=\"home-screen__top\">\r\n        <h1 className=\"heading-1  home-screen__title\">SIGNIN</h1>\r\n      </div>\r\n      {error && <ErrorMessage color=\"alert\">{error}</ErrorMessage>}\r\n\r\n      <div className=\"login-screen__form-container\">\r\n        <form className=\"login-screen__form\" onSubmit={submitHandler}>\r\n          <label className=\"login-screen__form--input-label\" htmlFor=\"email\">\r\n            Email Address\r\n          </label>\r\n          <input\r\n            placeholder=\"Enter email\"\r\n            className=\"login-screen__form--input\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            name=\"email\"\r\n            type=\"email\"\r\n          />\r\n          <label className=\"login-screen__form--input-label\" htmlFor=\"password\">\r\n            Password\r\n          </label>\r\n          <input\r\n            placeholder=\"Enter password\"\r\n            className=\"login-screen__form--input\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            name=\"password\"\r\n            type=\"password\"\r\n          />\r\n          <input\r\n            className=\"login-screen__form--submit-btn\"\r\n            type=\"submit\"\r\n            value=\"Sign In\"\r\n          />\r\n        </form>\r\n        <Link\r\n          className=\"login-screen__create-account-link\"\r\n          to={redirect ? \"/register?redirect=${redirect}\" : \"/register\"}\r\n        >\r\n          Don't have an account? Create one here.\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\shipping-screen\\ShippingScreen.js",["214","215"],"import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport \"./ShippingScreen.scss\";\r\nimport { getUserAddresses } from \"../../redux/user/user.actions.js\";\r\nimport AddAddress from \"../../components/add-address/AddAddress\";\r\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport CheckoutSteps from \"../../components/checkout-steps/CheckoutSteps\";\r\nimport { addOrderAddress } from \"../../redux/order/order.actions.js\";\r\nimport { AiOutlineDoubleRight } from \"react-icons/ai\";\r\nimport AddressEdit from \"../address-edit-modal/AddressEdit.js\";\r\nimport { IoMdArrowDropdown } from \"react-icons/io\";\r\nimport { IoMdArrowDropup } from \"react-icons/io\";\r\n\r\n//!=======================================================\r\nconst ShippingScreen = () => {\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const dispatch = useDispatch();\r\n\r\n  const [addAddressShow, setAddAddressShow] = useState(false);\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { user } = userDetails;\r\n\r\n  const userAddresses = useSelector((state) => state.userAddresses);\r\n  const { addresses } = userAddresses;\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/login\");\r\n    } else {\r\n      dispatch(getUserAddresses());\r\n    }\r\n  }, [history, userInfo, user, dispatch]);\r\n\r\n  const deleteAddressHandler = (id) => {\r\n    const deleteAddress = async () => {\r\n      try {\r\n        const config = {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${userInfo.token}`,\r\n          },\r\n        };\r\n        await axios.delete(`/api/users/profile/addresses/${id}`, config);\r\n\r\n        dispatch(getUserAddresses());\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    deleteAddress();\r\n  };\r\n\r\n  const handleSubmit = (address) => {\r\n    dispatch(addOrderAddress(address));\r\n    history.push(\"/payment\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"shipping-screen shipping-section\">\r\n      <CheckoutSteps />\r\n      <div>\r\n        <h1 className=\"heading-1  mt-sm mb-sm\">Chose a delivery address</h1>\r\n        <div className=\"shipping-screen__address-container\">\r\n          {addresses\r\n            ? addresses.map((address) => (\r\n                <div key={address._id} className=\"shipping-screen__address\">\r\n                  <address\r\n                    style={{\r\n                      display: \"flex\",\r\n                      flexDirection: \"column\",\r\n                      alignItems: \"center\",\r\n                      marginBottom: \"2rem\",\r\n                    }}\r\n                  >\r\n                    <p className=\"profile-addresses__text\">\r\n                      <strong>{address.fullName}</strong>\r\n                    </p>\r\n                    <p className=\"profile-addresses__text\">{address.line1}</p>\r\n                    <p className=\"profile-addresses__text\">{address.line2}</p>\r\n                    <p className=\"profile-addresses__text\">\r\n                      {address.city} , {address.stateProvinceRegion} ,{\" \"}\r\n                      {address.postalCode}\r\n                    </p>\r\n\r\n                    <p className=\"profile-addresses__text\">{address.country}</p>\r\n                  </address>\r\n                  <button\r\n                    onClick={() => handleSubmit(address)}\r\n                    className=\"shipping-screen__ship-btn\"\r\n                  >\r\n                    Deliver to this address{\" \"}\r\n                    <AiOutlineDoubleRight className=\"payment-screen__arrows\" />{\" \"}\r\n                  </button>\r\n                  <div className=\"shipping-screen__delete-edit-container mt-xs mb-xs\">\r\n                    <AddressEdit address={address} />\r\n                    <span\r\n                      onClick={() => {\r\n                        deleteAddressHandler(address._id);\r\n                      }}\r\n                      className=\"shipping-screen--action shipping-screen--action--delete\"\r\n                    >\r\n                      Delete\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              ))\r\n            : \"\"}\r\n        </div>\r\n\r\n        <div className=\"line-break\" />\r\n        <h2\r\n          onClick={() => setAddAddressShow(!addAddressShow)}\r\n          className=\"heading-2 shipping-screen__add-address mb-sm\"\r\n        >\r\n          Add new address&nbsp;\r\n          {addAddressShow ? <IoMdArrowDropup /> : <IoMdArrowDropdown />}\r\n        </h2>\r\n        {addAddressShow ? <AddAddress /> : \"\"}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ShippingScreen;\r\n","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\signup-screen\\Signup.js",["216","217"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport ErrorMessage from \"../../components/error-message/ErrorMessage.js\";\r\nimport { register } from \"../../redux/user/user.actions.js\";\r\nimport \"./Signup.scss\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\n//!==========================================================\r\nconst Signup = ({ location }) => {\r\n  const redirect = location.search ? location.search.split(\"+\")[1] : \"/\";\r\n  const dispatch = useDispatch();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setconfirmPassword] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [message, setMessage] = useState(null);\r\n  const userRegister = useSelector((state) => state.userRegister);\r\n  const { loading, error, userInfo } = userRegister;\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect);\r\n    }\r\n  }, [userInfo, redirect, history]);\r\n  const passwordLength = password.length < 6 ? false : true;\r\n  const passwordLowercase = /[a-z]/.test(password) < 1 ? false : true;\r\n  const passwordUppercase = /[A-Z]/.test(password) < 1 ? false : true;\r\n  const passwordNumber = /[0-9]/.test(password) < 1 ? false : true;\r\n  const passwordEqualConfirmPassword =\r\n    password !== confirmPassword ? false : true;\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    history.push(\"/shop\");\r\n    //!Password check =====================\r\n\r\n    if (\r\n      passwordLength &&\r\n      passwordLowercase &&\r\n      passwordUppercase &&\r\n      passwordNumber &&\r\n      passwordEqualConfirmPassword\r\n    ) {\r\n      //! Dispatch Login ====================\r\n      dispatch(register(name, email, password));\r\n    } else {\r\n      setMessage(\"You must comply with all the password requisites.\");\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"login-screen\">\r\n      <div className=\"home-screen__top\">\r\n        <h1 className=\"heading-1  home-screen__title\">SIGNUP</h1>\r\n      </div>\r\n      {error && <ErrorMessage color=\"alert\">{error}</ErrorMessage>}\r\n\r\n      <div className=\"login-screen__form-container\">\r\n        <form className=\"login-screen__form\" onSubmit={submitHandler}>\r\n          <label className=\"login-screen__form--input-label\" htmlFor=\"name\">\r\n            Name\r\n          </label>\r\n          <input\r\n            placeholder=\"Enter name\"\r\n            className=\"login-screen__form--input\"\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n            name=\"name\"\r\n            type=\"text\"\r\n          />\r\n          <label className=\"login-screen__form--input-label\" htmlFor=\"email\">\r\n            Email\r\n          </label>\r\n          <input\r\n            placeholder=\"Enter email\"\r\n            className=\"login-screen__form--input\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            name=\"email\"\r\n            type=\"email\"\r\n          />\r\n          <label className=\"login-screen__form--input-label\" htmlFor=\"password\">\r\n            Password\r\n          </label>\r\n          <input\r\n            placeholder=\"Enter password\"\r\n            className=\"login-screen__form--input\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            name=\"password\"\r\n            type=\"password\"\r\n          />\r\n          <label\r\n            className=\"login-screen__form--input-label\"\r\n            htmlFor=\"confirmPassword\"\r\n          >\r\n            Confirm Password\r\n          </label>\r\n          <input\r\n            placeholder=\"Confirm password\"\r\n            className=\"login-screen__form--input\"\r\n            value={confirmPassword}\r\n            onChange={(e) => setconfirmPassword(e.target.value)}\r\n            name=\"confirmPassword\"\r\n            type=\"password\"\r\n          />\r\n          {message && <p className=\"signup__password-error\">{message}</p>}\r\n          <div className=\"signup__password-box\">\r\n            <h3>Password must:</h3>\r\n            <p\r\n              className={\r\n                passwordEqualConfirmPassword\r\n                  ? \"signup__password-box--fail\"\r\n                  : \"signup__password-box--checked\"\r\n              }\r\n            >\r\n              match Confirm Password\r\n            </p>\r\n            <p\r\n              className={\r\n                passwordUppercase\r\n                  ? \"signup__password-box--fail\"\r\n                  : \"signup__password-box--checked\"\r\n              }\r\n            >\r\n              contain an uppercase letter\r\n            </p>\r\n            <p\r\n              className={\r\n                passwordLowercase\r\n                  ? \"signup__password-box--fail\"\r\n                  : \"signup__password-box--checked\"\r\n              }\r\n            >\r\n              contain an lowercase letter\r\n            </p>\r\n            <p\r\n              className={\r\n                passwordNumber\r\n                  ? \"signup__password-box--fail\"\r\n                  : \"signup__password-box--checked\"\r\n              }\r\n            >\r\n              contain a number\r\n            </p>\r\n            <p\r\n              className={\r\n                passwordLength\r\n                  ? \"signup__password-box--fail\"\r\n                  : \"signup__password-box--checked\"\r\n              }\r\n            >\r\n              be at least 6 characters long\r\n            </p>\r\n          </div>\r\n          <input\r\n            className=\"login-screen__form--submit-btn\"\r\n            type=\"submit\"\r\n            value=\"Register\"\r\n          />\r\n        </form>\r\n\r\n        <Link\r\n          className=\"login-screen__create-account-link\"\r\n          to={redirect ? \"/login?redirect=${redirect}\" : \"/login\"}\r\n        >\r\n          Have an account? Log in here.\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\redux\\cart\\cart.constants.js",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\redux\\product\\product.constants.js",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\redux\\user\\user.constants.js",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\redux\\order\\order.constants.js",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\footer\\Footer.js",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\header\\Header.js",["218"],"import React from \"react\";\r\nimport \"./Header.scss\";\r\nimport { GiTechnoHeart } from \"react-icons/gi\";\r\nimport { TiShoppingCart, TiUserOutline } from \"react-icons/ti\";\r\nimport { FaHeart } from \"react-icons/fa\";\r\nimport { IoMdArrowDropdown } from \"react-icons/io\";\r\n\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport CartDropdown from \"../cart-dropdown/CartDropdown.js\";\r\nimport { toggleCartShow } from \"../../redux/cart/cart.actions.js\";\r\nimport UserDropdown from \"../user-menu-dropdown/UserDropdown.js\";\r\nimport { toggleUserMenuShow } from \"../../redux/user/user.actions.js\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\n//!==============================================================\r\n\r\nconst Header = () => {\r\n  const location = useLocation();\r\n  const { pathname } = location;\r\n\r\n  const dispatch = useDispatch();\r\n  const cartToggle = useSelector((state) => state.cartToggle.showCart);\r\n  const cartItems = useSelector((state) => state.cart);\r\n  const { loading, cartProducts } = cartItems;\r\n  const cartItemsNumber = cartProducts.reduce(\r\n    (accum, cartItem) => accum + cartItem.quantity,\r\n    0\r\n  );\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const dropdownShow = useSelector((state) => state.showUserMenu);\r\n  const { showUserMenu } = dropdownShow;\r\n\r\n  return (\r\n    <>\r\n      {\" \"}\r\n      {pathname === \"/shipping\" ||\r\n      pathname === \"/payment\" ||\r\n      pathname === \"/complete-order\" ? (\r\n        \"\"\r\n      ) : (\r\n        <header className=\"header\">\r\n          <nav className=\"nav\">\r\n            <div className=\"nav__logo-container\">\r\n              <GiTechnoHeart className=\"nav__logo\" />{\" \"}\r\n              <Link to=\"/\">\r\n                <h2 className=\"nav__title\">Cyber Heart</h2>\r\n              </Link>\r\n            </div>\r\n            <div className=\"nav__links-container\">\r\n              <NavLink\r\n                activeClassName=\"nav__link--active\"\r\n                className=\"nav__link\"\r\n                to=\"/shop\"\r\n              >\r\n                SHOP\r\n              </NavLink>\r\n            </div>\r\n            <div className=\"nav__icons-container\">\r\n              <NavLink\r\n                activeClassName=\"nav__icon nav__icon--heart--active\"\r\n                className=\"nav__icon nav__icon--heart\"\r\n                to=\"/profile/favorites\"\r\n              >\r\n                {\" \"}\r\n                <FaHeart />\r\n              </NavLink>\r\n              <div\r\n                onClick={() => dispatch(toggleCartShow())}\r\n                className=\"nav__icon nav__icon--cart\"\r\n              >\r\n                {\" \"}\r\n                <TiShoppingCart />\r\n                <span className=\"nav__cart-items-number\">\r\n                  {cartItemsNumber}\r\n                </span>\r\n              </div>\r\n              {cartToggle ? <CartDropdown /> : null}\r\n              {userInfo ? (\r\n                <>\r\n                  {\" \"}\r\n                  <span\r\n                    className=\"nav__welcome-message\"\r\n                    onClick={() => dispatch(toggleUserMenuShow())}\r\n                  >\r\n                    Your menu &nbsp;\r\n                    <IoMdArrowDropdown\r\n                      style={{ fontSize: \"2rem\" }}\r\n                      className={\r\n                        showUserMenu\r\n                          ? \"dropdown-arrow-class\"\r\n                          : \"dropdown-revert\"\r\n                      }\r\n                    />\r\n                  </span>\r\n                  {showUserMenu ? <UserDropdown /> : null}\r\n                </>\r\n              ) : (\r\n                <Link className=\"nav__icon\" to=\"/login\">\r\n                  {\" \"}\r\n                  <TiUserOutline />\r\n                </Link>\r\n              )}\r\n            </div>\r\n          </nav>\r\n        </header>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\payment-screen\\PaymentScreen.js",["219","220"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./PaymentScreen.scss\";\r\nimport CheckoutSteps from \"../../components/checkout-steps/CheckoutSteps\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { saveOrderPaymentMethod } from \"../../redux/order/order.actions.js\";\r\nimport { GrPaypal, GrStripe } from \"react-icons/gr\";\r\nimport { AiOutlineDoubleRight } from \"react-icons/ai\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nimport { BsCreditCard } from \"react-icons/bs\";\r\nimport { ReactComponent as DHL } from \"../../assets/dhl-express.svg\";\r\nimport { ReactComponent as Correos } from \"../../assets/correos.svg\";\r\n//!=======================================================\r\n\r\nconst PaymentScreen = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const orderAddressState = useSelector((state) => state.orderAddress);\r\n  const { orderAddress } = orderAddressState;\r\n\r\n  const orderPaymentMethod = useSelector((state) => state.orderPaymentMethod);\r\n\r\n  useEffect(() => {\r\n    if (!orderAddress.fullName) {\r\n      history.push(\"/shipping\");\r\n    }\r\n  }, [orderAddress, history]);\r\n\r\n  const [paymentMethod, setPaymentMethod] = useState(\"PayPal\");\r\n  const [shippingMethod, setShippingMethod] = useState({\r\n    name: \"DHL Standard Delivery\",\r\n    price: 5.99,\r\n  });\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(saveOrderPaymentMethod(paymentMethod, shippingMethod));\r\n    history.push(\"/complete-order\");\r\n  };\r\n\r\n  const paymentMethodHandler = (e) => setPaymentMethod(e.target.value);\r\n  const shippmentMethodHandler = (e) =>\r\n    setShippingMethod({ price: Number(e.target.value), name: e.target.id });\r\n  return (\r\n    <div className=\"payment-screen shipping-section\">\r\n      <CheckoutSteps />\r\n      <div>\r\n        <h1 className=\"heading-1  mt-sm mb-sm\">Chose a payment method</h1>\r\n        <form onSubmit={handleSubmit}>\r\n          <label className=\"payment-screen__label mb-md\" htmlFor=\"PayPal\">\r\n            <input\r\n              id=\"PayPal\"\r\n              className=\"payment-screen__input mr-md\"\r\n              name=\"paymentmethod\"\r\n              type=\"radio\"\r\n              value=\"PayPal\"\r\n              onChange={paymentMethodHandler}\r\n              defaultChecked\r\n            />\r\n            <GrPaypal className=\"payment-screen__payment-icon mr-sm\" />\r\n            PayPal\r\n          </label>\r\n          <label\r\n            className=\"payment-screen__label payment-screen__label--disabled mb-md\"\r\n            htmlFor=\"CreditCard\"\r\n          >\r\n            <input\r\n              id=\"CreditCard\"\r\n              className=\"payment-screen__input  mr-md\"\r\n              name=\"paymentmethod\"\r\n              type=\"radio\"\r\n              value=\"Credit Card\"\r\n              onChange={paymentMethodHandler}\r\n              disabled\r\n            />\r\n            <BsCreditCard className=\"payment-screen__payment-icon payment-screen__payment-icon--disabled mr-sm\" />{\" \"}\r\n            Credit Card\r\n          </label>\r\n          <label\r\n            className=\"payment-screen__label  payment-screen__label--disabled mb-md\"\r\n            htmlFor=\"Stripe\"\r\n          >\r\n            <input\r\n              id=\"Stripe\"\r\n              className=\"payment-screen__input payment-screen__input--disabled mr-md\"\r\n              name=\"paymentmethod\"\r\n              type=\"radio\"\r\n              value=\"Stripe\"\r\n              onChange={paymentMethodHandler}\r\n              disabled\r\n            />\r\n            <GrStripe className=\"payment-screen__payment-icon mr-sm\" /> Stripe\r\n          </label>\r\n\r\n          <div className=\"line-break\" />\r\n          <h1 className=\"heading-1  mt-sm mb-sm\">Chose a shipping method</h1>\r\n\r\n          <label className=\"payment-screen__label \" htmlFor=\"DHLStandard\">\r\n            <input\r\n              id=\"DHL Standard Shipping\"\r\n              className=\"payment-screen__input mr-md\"\r\n              name=\"shippingOption\"\r\n              type=\"radio\"\r\n              value={5.99}\r\n              onChange={shippmentMethodHandler}\r\n              defaultChecked\r\n            />\r\n            <DHL\r\n              style={{ width: \"7rem\", height: \"7rem\" }}\r\n              className=\"payment-screen__payment-icon mr-sm\"\r\n            />\r\n            DHL Standard Shipping <strong>&nbsp;&nbsp;( + 5.99 €)</strong>\r\n          </label>\r\n          <label className=\"payment-screen__label \" htmlFor=\"DHL1Day\">\r\n            <input\r\n              id=\"DHL 1 Day Delivery\"\r\n              className=\"payment-screen__input mr-md\"\r\n              name=\"shippingOption\"\r\n              type=\"radio\"\r\n              value={8.99}\r\n              onChange={shippmentMethodHandler}\r\n            />\r\n            <DHL\r\n              style={{ width: \"7rem\", height: \"7rem\" }}\r\n              className=\"payment-screen__payment-icon mr-sm\"\r\n            />\r\n            DHL 1 Day Delivery <strong>&nbsp;&nbsp;( + 8.99 €)</strong>\r\n          </label>\r\n          <label className=\"payment-screen__label mb-md\" htmlFor=\"Correos\">\r\n            <input\r\n              id=\"Correos 3-5 Day Delivery\"\r\n              className=\"payment-screen__input mr-md\"\r\n              name=\"shippingOption\"\r\n              type=\"radio\"\r\n              value={3.99}\r\n              onChange={shippmentMethodHandler}\r\n            />\r\n            <Correos\r\n              style={{ width: \"7rem\", height: \"7rem\" }}\r\n              className=\"payment-screen__payment-icon mr-sm\"\r\n            />\r\n            Correos 3-5 Day Delivery <strong>&nbsp;&nbsp;( + 3.99 €)</strong>\r\n          </label>\r\n          <button className=\"payment-screen__ship-btn\">\r\n            Continue <AiOutlineDoubleRight className=\"payment-screen__arrows\" />{\" \"}\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PaymentScreen;\r\n","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\home-screen\\HomeScreen.js",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\product-screen\\ProductScreen.js",["221","222"],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\complete-order-screen\\CompleteOrder.js",["223","224"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./CompleteOrder.scss\";\r\nimport CheckoutSteps from \"../../components/checkout-steps/CheckoutSteps\";\r\nimport axios from \"axios\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { GrPaypal, GrCreditCard, GrStripe } from \"react-icons/gr\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { addToCart, getCartProducts } from \"../../redux/cart/cart.actions.js\";\r\nimport { roundToTwo } from \"../../utils.js\";\r\n\r\nimport { createOrder } from \"../../redux/order/order.actions\";\r\n\r\n//todo implement gsapp to stop the buy now on screen\r\n//!=======================================================\r\n\r\nconst CompleteOrder = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const orderCreate = useSelector((state) => state.orderCreate);\r\n  const { order, success, error } = orderCreate;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const cart = useSelector((state) => state.cart);\r\n  const { cartProducts } = cart;\r\n  const orderAddressState = useSelector((state) => state.orderAddress);\r\n  const { orderAddress } = orderAddressState;\r\n\r\n  const orderPaymentMethod = useSelector((state) => state.orderPaymentMethod);\r\n  const paymentMethod = orderPaymentMethod.paymentMethod;\r\n  const { shippingMethod } = orderPaymentMethod;\r\n  //! REMOVE ALL CART ITEMS WHEN YOU PLACE THE ORDER==\r\n\r\n  const clearCartHandler = async () => {\r\n    try {\r\n      if (!userInfo) {\r\n        history.push(\"/login\");\r\n      } else {\r\n        const config = {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${userInfo.token}`,\r\n          },\r\n        };\r\n        await axios.delete(`/api/cart`, config);\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n  //!==================================================\r\n  useEffect(() => {\r\n    if (!orderAddress.fullName) {\r\n      history.push(\"/shipping\");\r\n    } else if (!orderPaymentMethod.paymentMethod) {\r\n      history.push(\"/payment\");\r\n    }\r\n  }, [orderAddress, history, orderPaymentMethod]);\r\n  const removeCartProduct = (id) => {\r\n    const deleteProduct = async () => {\r\n      try {\r\n        const config = {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${userInfo.token}`,\r\n          },\r\n        };\r\n        await axios.delete(`/api/cart/${id}`, config);\r\n\r\n        dispatch(getCartProducts());\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    deleteProduct();\r\n  };\r\n\r\n  const subtotal = cartProducts.reduce(\r\n    (accum, cartItem) => accum + cartItem.quantity * cartItem.product.price,\r\n    0\r\n  );\r\n  const totalPrice = roundToTwo(subtotal + shippingMethod.price);\r\n\r\n  //* Place order action ======================================\r\n  const placeOrderHandler = () => {\r\n    dispatch(\r\n      createOrder({\r\n        orderItems: cartProducts,\r\n        shippingAddress: orderAddress,\r\n        paymentMethod: paymentMethod,\r\n        itemsPrice: roundToTwo(subtotal),\r\n        shippingPrice: roundToTwo(shippingMethod.price),\r\n        shippingMethod: shippingMethod.name,\r\n        totalPrice: roundToTwo(totalPrice),\r\n      })\r\n    );\r\n    clearCartHandler();\r\n    dispatch(getCartProducts());\r\n    if (success) {\r\n      history.push(`/profile/orders/${order._id}`);\r\n    }\r\n  };\r\n  //*============================================================\r\n  return (\r\n    <div className=\"complete-order shipping-section\">\r\n      <CheckoutSteps />\r\n      <div>\r\n        <h1 className=\"heading-1  mt-sm mb-sm\">Order summary</h1>\r\n      </div>\r\n      <div className=\"complete-order__grid\">\r\n        <div className=\"complete-order__address-info complete-order__steps-container\">\r\n          <h3 className=\"heading-3 complete-order__steps-title mb-sm mt-sm\">\r\n            1. Shipping address\r\n          </h3>\r\n          <address className=\"complete-order__middle-text\">\r\n            <p>{orderAddress.fullName}</p>\r\n            <p>{orderAddress.line1}</p>\r\n            <p>{orderAddress.line2}</p>\r\n            <p>{orderAddress.city}</p>\r\n            <p>{orderAddress.stateProvinceRegion}</p>\r\n            <p>{orderAddress.country}</p>\r\n            <p>{orderAddress.postalCode}</p>\r\n            <p>{orderAddress.phoneNumber}</p>\r\n          </address>\r\n          <span\r\n            onClick={() => history.push(\"/shipping\")}\r\n            className=\"complete-order__change-link\"\r\n          >\r\n            Change address\r\n          </span>\r\n        </div>\r\n        <div className=\"complete-order__payment-info complete-order__steps-container\">\r\n          <h3 className=\"heading-3 complete-order__steps-title mb-sm mt-sm\">\r\n            2. Payment Method\r\n          </h3>\r\n          <p\r\n            style={{ alignSelf: \"center\", fontSize: \"1.4rem\" }}\r\n            className=\"complete-order__middle-text\"\r\n          >\r\n            {paymentMethod === \"PayPal\" ? (\r\n              <GrPaypal className=\" mr-sm\" />\r\n            ) : paymentMethod === \"Credit Card\" ? (\r\n              <GrCreditCard className=\" mr-sm\" />\r\n            ) : (\r\n              <GrStripe className=\" mr-sm\" />\r\n            )}\r\n            {paymentMethod}\r\n          </p>\r\n          <span\r\n            onClick={() => history.push(\"/payment\")}\r\n            className=\"complete-order__change-link\"\r\n          >\r\n            Change payment\r\n          </span>\r\n        </div>\r\n        <div className=\"complete-order__shipment-info complete-order__steps-container\">\r\n          <h3 className=\"heading-3 complete-order__steps-title mb-sm mt-sm\">\r\n            3. Shipment Method\r\n          </h3>\r\n          <p\r\n            style={{ alignSelf: \"center\" }}\r\n            className=\"complete-order__middle-text\"\r\n          >\r\n            {shippingMethod.name} &nbsp;{\" \"}\r\n            <span style={{ color: \" #fd3e3e\" }}>\r\n              + {shippingMethod.price} €\r\n            </span>\r\n          </p>\r\n\r\n          <span\r\n            onClick={() => history.push(\"/payment\")}\r\n            className=\"complete-order__change-link\"\r\n          >\r\n            Change shipment\r\n          </span>\r\n        </div>\r\n        <div className=\"complete-order__products-info \">\r\n          <h3\r\n            style={{ padding: \"1rem\" }}\r\n            className=\"heading-3 complete-order__steps-title mb-sm mt-sm\"\r\n          >\r\n            4. Review Products\r\n          </h3>\r\n\r\n          {cartProducts.length === 0 ? (\r\n            <h3 className=\"heading-3 complete-order__steps-title\">\r\n              Cart is empty\r\n            </h3>\r\n          ) : (\r\n            cartProducts.map((item) => (\r\n              <div key={item.product._id} className=\"complete-order__item\">\r\n                <img\r\n                  onClick={() => history.push(`/product/${item.product._id}`)}\r\n                  src={item.product.image}\r\n                  alt={item.product.name}\r\n                  className=\"complete-order__image\"\r\n                />\r\n                <div className=\"complete-order__item-details\">\r\n                  <h4\r\n                    onClick={() => history.push(`/product/${item.product._id}`)}\r\n                    className=\"heading-4 complete-order__item-details--title\"\r\n                  >\r\n                    {item.product.name} x {item.quantity}\r\n                  </h4>\r\n                  {item.product.countInStock ? (\r\n                    <h3 className=\"in-stock\">In stock</h3>\r\n                  ) : (\r\n                    <h3 className=\"out-of-stock-favorites\">Not in stock</h3>\r\n                  )}\r\n                  <h4 className=\"heading-4 complete-order__item-details--price\">\r\n                    PRICE:\r\n                  </h4>\r\n                  <h4 className=\"heading-4 complete-order__item-details--price-value\">\r\n                    € {item.product.price} &#10006;&nbsp;\r\n                    {item.product.countInStock > 0 && (\r\n                      <div className=\"complete-order__quantity-selector complete-order__quantity-selector\">\r\n                        <form action=\"\">\r\n                          <label\r\n                            className=\"complete-order__quantity-selector--text\"\r\n                            htmlFor=\"quantity\"\r\n                          >\r\n                            quantity\r\n                          </label>\r\n                          <select\r\n                            className=\"complete-order__quantity-selector--selection\"\r\n                            value={item.quantity}\r\n                            name=\"quantity\"\r\n                            id=\"quantity\"\r\n                            onChange={(e) => {\r\n                              dispatch(\r\n                                addToCart(\r\n                                  item.product._id,\r\n                                  Number(e.target.value)\r\n                                )\r\n                              );\r\n                              dispatch(getCartProducts());\r\n                            }}\r\n                          >\r\n                            {[...Array(item.product.countInStock).keys()].map(\r\n                              (el) => (\r\n                                <option\r\n                                  className=\"complete-order__quantity-selector--option\"\r\n                                  key={el + 1}\r\n                                  value={el + 1}\r\n                                >\r\n                                  {el + 1}\r\n                                </option>\r\n                              )\r\n                            )}\r\n                          </select>\r\n                        </form>\r\n                      </div>\r\n                    )}\r\n                  </h4>\r\n                  <span\r\n                    onClick={() => removeCartProduct(item._id)}\r\n                    className=\"complete-order__remove\"\r\n                  >\r\n                    Remove\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            ))\r\n          )}\r\n        </div>\r\n        <div className=\"complete-order__summary\">\r\n          <button\r\n            onClick={placeOrderHandler}\r\n            className=\"complete-order__buy-btn\"\r\n          >\r\n            PLACE ORDER\r\n          </button>\r\n\r\n          <h3 className=\"heading-3 complete-order__summary--title\">\r\n            Order Price\r\n          </h3>\r\n          <span style={{ gridColumn: \"1/3\", fontSize: \"1.2rem\" }}>\r\n            (All prices include VAT)\r\n          </span>\r\n          <h4 className=\"heading-4 complete-order__summary--text\">Products:</h4>\r\n          <span className=\"complete-order__summary--value\">\r\n            {roundToTwo(subtotal)}€\r\n          </span>\r\n          <h4 className=\"heading-4 complete-order__summary--text\">Shipping:</h4>\r\n          <span className=\"complete-order__summary--value\">\r\n            {shippingMethod.price}€\r\n          </span>\r\n          <h2 className=\"heading-2 complete-order__summary--total\">TOTAL:</h2>\r\n          <h2 className=\"heading-2 complete-order__summary--total-value\">\r\n            {totalPrice}€\r\n          </h2>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CompleteOrder;\r\n","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\redux\\user\\user.actions.js",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\redux\\order\\order.actions.js",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\profile-sidebar\\ProfileSidebar.js",["225"],"import React, { useEffect } from \"react\";\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport \"./ProfileSidebar.scss\";\r\nimport { listFavoriteProducts } from \"../../redux/user/user.actions.js\";\r\nimport { FaHeart } from \"react-icons/fa\";\r\nimport { BiDevices } from \"react-icons/bi\";\r\n//!=======================================================================\r\n\r\nfunction ProfileSidebar() {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const favoriteProductsList = useSelector(\r\n    (state) => state.userFavoriteProducts\r\n  );\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const { userFavoriteProducts, loading } = favoriteProductsList;\r\n  const favoriteProductsLength = userFavoriteProducts.length;\r\n\r\n  const cartItems = useSelector((state) => state.cart);\r\n  const { cartProducts } = cartItems;\r\n  const cartItemsNumber = cartProducts.reduce(\r\n    (accum, cartItem) => accum + cartItem.quantity,\r\n    0\r\n  );\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/login\");\r\n    }\r\n    dispatch(listFavoriteProducts());\r\n  }, [history, userInfo, dispatch]);\r\n  return (\r\n    <div className=\"profile-sidebar\">\r\n      <h1 className=\"profile-screen__title\">Your Account</h1>\r\n      <NavLink\r\n        className=\"profile-sidebar__options\"\r\n        activeClassName=\"profile-sidebar__active-link\"\r\n        to=\"/profile/info\"\r\n      >\r\n        {\" \"}\r\n        <p>Info</p>{\" \"}\r\n      </NavLink>\r\n\r\n      <NavLink\r\n        className=\"profile-sidebar__options\"\r\n        activeClassName=\"profile-sidebar__active-link\"\r\n        to=\"/profile/addresses\"\r\n      >\r\n        {\" \"}\r\n        <p>Addresses</p>{\" \"}\r\n      </NavLink>\r\n\r\n      <NavLink\r\n        className=\"profile-sidebar__options\"\r\n        activeClassName=\"profile-sidebar__active-link\"\r\n        to=\"/profile/favorites\"\r\n      >\r\n        {\" \"}\r\n        <p\r\n          style={{\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          Favorites &nbsp;\r\n          <i\r\n            style={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            ({favoriteProductsLength}&nbsp;{\" \"}\r\n            <FaHeart style={{ color: \" #fd3e3e\" }} />)\r\n          </i>{\" \"}\r\n        </p>\r\n      </NavLink>\r\n\r\n      <NavLink\r\n        activeClassName=\"profile-sidebar__active-link\"\r\n        className=\"profile-sidebar__options\"\r\n        to=\"/profile/reviews\"\r\n      >\r\n        {\" \"}\r\n        <p>Reviews</p>{\" \"}\r\n      </NavLink>\r\n\r\n      <NavLink\r\n        className=\"profile-sidebar__options\"\r\n        activeClassName=\"profile-sidebar__active-link\"\r\n        to=\"/profile/messages\"\r\n      >\r\n        {\" \"}\r\n        <p>Messages</p>{\" \"}\r\n      </NavLink>\r\n\r\n      <h1 className=\"profile-screen__title\">Orders</h1>\r\n      <NavLink\r\n        className=\"profile-sidebar__options\"\r\n        activeClassName=\"profile-sidebar__active-link\"\r\n        to=\"/profile/orders\"\r\n      >\r\n        {\" \"}\r\n        <p>Orders & Bills</p>{\" \"}\r\n      </NavLink>\r\n\r\n      <NavLink\r\n        className=\"profile-sidebar__options\"\r\n        activeClassName=\"profile-sidebar__active-link\"\r\n        to=\"/profile/checkout\"\r\n      >\r\n        {\" \"}\r\n        <p\r\n          style={{\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          Checkout &nbsp;\r\n          <i\r\n            style={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            ({cartItemsNumber}&nbsp;\r\n            <BiDevices />)\r\n          </i>\r\n        </p>{\" \"}\r\n      </NavLink>\r\n\r\n      <NavLink\r\n        className=\"profile-sidebar__options\"\r\n        activeClassName=\"profile-sidebar__active-link\"\r\n        to=\"/profile/returns\"\r\n      >\r\n        {\" \"}\r\n        <p>Item returns</p>{\" \"}\r\n      </NavLink>\r\n\r\n      <NavLink\r\n        activeClassName=\"profile-sidebar__active-link\"\r\n        className=\"profile-sidebar__options\"\r\n        to=\"/profile/warranty\"\r\n      >\r\n        {\" \"}\r\n        <p>Warranty</p>{\" \"}\r\n      </NavLink>\r\n\r\n      <h1 className=\"profile-screen__title\">Payment</h1>\r\n      <NavLink\r\n        activeClassName=\"profile-sidebar__active-link\"\r\n        className=\"profile-sidebar__options\"\r\n        to=\"/profile/cards\"\r\n      >\r\n        {\" \"}\r\n        <p>Your cards</p>{\" \"}\r\n      </NavLink>\r\n\r\n      <NavLink\r\n        className=\"profile-sidebar__options\"\r\n        activeClassName=\"profile-sidebar__active-link\"\r\n        to=\"/profile/payment-methods\"\r\n      >\r\n        {\" \"}\r\n        <p>Other payment methods</p>{\" \"}\r\n      </NavLink>\r\n\r\n      <NavLink\r\n        className=\"profile-sidebar__options\"\r\n        activeClassName=\"profile-sidebar__active-link\"\r\n        to=\"/profile/discounts\"\r\n      >\r\n        {\" \"}\r\n        <p>Discount coupons</p>{\" \"}\r\n      </NavLink>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProfileSidebar;\r\n","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\profile-info-screen\\YourInfo.js",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\profile-addresses-screen\\ProfileAddresses.js",["226"],"import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getUserAddresses } from \"../../redux/user/user.actions.js\";\r\nimport \"./ProfileAddresses.scss\";\r\nimport AddressEdit from \"../address-edit-modal/AddressEdit.js\";\r\nimport AddAddress from \"../../components/add-address/AddAddress.js\";\r\nimport axios from \"axios\";\r\n//!=============================================\r\n\r\nconst ProfileAddresses = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const [addAddressToggle, setAddAddressToggle] = useState(false);\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { user } = userDetails;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile);\r\n  const { success } = userUpdateProfile;\r\n\r\n  const userAddresses = useSelector((state) => state.userAddresses);\r\n\r\n  const { addresses } = userAddresses;\r\n\r\n  const handleAddAddress = () => {\r\n    setAddAddressToggle(!addAddressToggle);\r\n  };\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/login\");\r\n    }\r\n    dispatch(getUserAddresses());\r\n  }, [history, userInfo, user, dispatch]);\r\n\r\n  const deleteAddressHandler = (id) => {\r\n    const deleteAddress = async () => {\r\n      try {\r\n        const config = {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${userInfo.token}`,\r\n          },\r\n        };\r\n        await axios.delete(`/api/users/profile/addresses/${id}`, config);\r\n\r\n        dispatch(getUserAddresses());\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    deleteAddress();\r\n  };\r\n\r\n  return (\r\n    <div className=\"profile-addresses\">\r\n      <h1 className=\"heading-1 \">YOUR ADDRESSES</h1>\r\n      <div className=\"profile-addresses__grid\">\r\n        {addresses\r\n          ? addresses.map((address, idx) => (\r\n              <div key={address._id} className=\"gradient-wrapper\">\r\n                <div className=\"profile-addresses__address\">\r\n                  <h3 className=\"profile-addresses__address__title\">\r\n                    Address {idx + 1}\r\n                  </h3>\r\n\r\n                  <address>\r\n                    <p className=\"profile-addresses__text\">\r\n                      <strong>{address.fullName}</strong>\r\n                    </p>\r\n                    <p className=\"profile-addresses__text\">{address.line1}</p>\r\n                    <p className=\"profile-addresses__text\">{address.line2}</p>\r\n                    <p className=\"profile-addresses__text\">\r\n                      {address.city} , {address.stateProvinceRegion} ,{\" \"}\r\n                      {address.postalCode}\r\n                    </p>\r\n\r\n                    <p className=\"profile-addresses__text\">{address.country}</p>\r\n                    <p className=\"profile-addresses__text\">\r\n                      {address.phoneNumber}\r\n                    </p>\r\n                  </address>\r\n                  <div className=\"profile-addresses__address__bottom-links\">\r\n                    <AddressEdit address={address} />\r\n                    <span\r\n                      onClick={() => {\r\n                        deleteAddressHandler(address._id);\r\n                      }}\r\n                      className=\"profile-addresses__address__bottom-links--action \"\r\n                    >\r\n                      Delete\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))\r\n          : \"\"}\r\n        <address\r\n          onClick={handleAddAddress}\r\n          className=\"profile-addresses__address profile-addresses__add-address\"\r\n        >\r\n          <span style={{ fontSize: \"8rem\" }}>&#9783;</span>\r\n          Add new address\r\n        </address>\r\n      </div>\r\n      <div className=\"line-break\" />\r\n\r\n      {addAddressToggle ? <AddAddress /> : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileAddresses;\r\n","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\checkout-screen\\Checkout.js",["227","228"],"import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport StarRatings from \"react-star-ratings\";\r\n\r\nimport \"./Checkout.scss\";\r\nimport { roundToTwo } from \"../../utils.js\";\r\nimport axios from \"axios\";\r\nimport { getCartProducts, addToCart } from \"../../redux/cart/cart.actions.js\";\r\n\r\n//!=======================================================\r\nconst Checkout = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const cartItems = useSelector((state) => state.cart);\r\n  const { loading, cartProducts } = cartItems;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const cartItemsNumber = cartProducts.reduce(\r\n    (accum, cartItem) => accum + cartItem.quantity,\r\n    0\r\n  );\r\n  //todo if the item is in cart but it runs out of stock it still calculates it to the total... do a check to eliminate the cart item out of stock first\r\n  const subtotal = cartProducts.reduce(\r\n    (accum, cartItem) => accum + cartItem.quantity * cartItem.product.price,\r\n    0\r\n  );\r\n\r\n  const removeCartProduct = (id) => {\r\n    const deleteProduct = async () => {\r\n      try {\r\n        const config = {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${userInfo.token}`,\r\n          },\r\n        };\r\n        await axios.delete(`/api/cart/${id}`, config);\r\n\r\n        dispatch(getCartProducts());\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    deleteProduct();\r\n  };\r\n\r\n  const checkoutHandler = () => {\r\n    history.push(\"/shipping\");\r\n  };\r\n  return (\r\n    <div className=\"checkout-screen\">\r\n      <h1 className=\"heading-1  \">CHECK OUT</h1>\r\n      <div className=\"checkout-screen__subtotal\">\r\n        <div>\r\n          <h3 className=\"checkout-screen__subtotal--title\">\r\n            Subtotal ({cartItemsNumber} products):\r\n          </h3>\r\n          <h3 className=\"checkout-screen__subtotal--value\">\r\n            € {roundToTwo(subtotal)}\r\n          </h3>\r\n        </div>\r\n        {cartItems.length === 0 ? (\r\n          <button className=\" btn-disabled\">Cart is empty</button>\r\n        ) : (\r\n          <button\r\n            onClick={() => {\r\n              checkoutHandler();\r\n            }}\r\n            className=\"checkout-screen__subtotal--button\"\r\n          >\r\n            Proceed to checkout\r\n          </button>\r\n        )}\r\n      </div>\r\n      <h2 className=\"checkout-screen__item-count\">\r\n        You have {cartItemsNumber} items in your cart.\r\n      </h2>\r\n      {cartProducts.map((item) => (\r\n        <div key={item.product._id} className=\"checkout-screen__item\">\r\n          <img\r\n            src={item.product.image}\r\n            alt={item.product.name}\r\n            className=\"checkout-screen__image\"\r\n          />\r\n          <div className=\"checkout-screen__item-details\">\r\n            <h3 className=\"heading-3 checkout-screen__item-details--title\">\r\n              {item.product.name} x {item.quantity}\r\n            </h3>\r\n            {item.product.countInStock ? (\r\n              <h3 className=\"in-stock\">In stock</h3>\r\n            ) : (\r\n              <h3 className=\"out-of-stock-favorites\">Not in stock</h3>\r\n            )}\r\n            <h3 className=\"heading-3 checkout-screen__item-details--price\">\r\n              PRICE:\r\n            </h3>\r\n            <h3 className=\"heading-3 checkout-screen__item-details--price-value\">\r\n              € {item.product.price} &#10006;&nbsp;\r\n              {item.product.countInStock > 0 && (\r\n                <div className=\"product-screen__quantity-selector checkout-screen__quantity-selector\">\r\n                  <form action=\"\">\r\n                    <label\r\n                      className=\"product-screen__quantity-selector--text\"\r\n                      htmlFor=\"quantity\"\r\n                    >\r\n                      quantity\r\n                    </label>\r\n                    <select\r\n                      className=\"product-screen__quantity-selector--selection\"\r\n                      value={item.quantity}\r\n                      name=\"quantity\"\r\n                      id=\"quantity\"\r\n                      onChange={(e) => {\r\n                        dispatch(\r\n                          addToCart(item.product._id, Number(e.target.value))\r\n                        );\r\n                        dispatch(getCartProducts());\r\n                      }}\r\n                    >\r\n                      {[...Array(item.product.countInStock).keys()].map(\r\n                        (el) => (\r\n                          <option\r\n                            className=\"product-screen__quantity-selector--option\"\r\n                            key={el + 1}\r\n                            value={el + 1}\r\n                          >\r\n                            {el + 1}\r\n                          </option>\r\n                        )\r\n                      )}\r\n                    </select>\r\n                  </form>\r\n                </div>\r\n              )}\r\n            </h3>\r\n            <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n              <StarRatings\r\n                className=\"product-screen__rating-stars \"\r\n                rating={item.product.rating}\r\n                starDimension=\"2rem\"\r\n                starSpacing=\".25rem\"\r\n                starRatedColor=\"rgb(255, 180, 3)\"\r\n              />\r\n              <span className=\"product__rating-text ml-sm\">\r\n                User Rating:&nbsp;&nbsp;&nbsp;\r\n                <strong>{item.product.rating}</strong> (\r\n                {item.product.numReviews} reviews)\r\n              </span>\r\n            </div>\r\n            <span\r\n              onClick={() => removeCartProduct(item._id)}\r\n              className=\"checkout-screen__remove\"\r\n            >\r\n              Remove\r\n            </span>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Checkout;\r\n","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\address-edit-modal\\AddressEdit.js",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\error-message\\ErrorMessage.js",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\redux\\product\\product.actions.js",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\user-menu-dropdown\\UserDropdown.js",["229"],"import React from \"react\";\r\nimport \"./UserDropdown.scss\";\r\nimport { FiLogOut } from \"react-icons/fi\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { logout } from \"../../redux/user/user.actions.js\";\r\nimport { toggleUserMenuShow } from \"../../redux/user/user.actions.js\";\r\nimport { useHistory } from \"react-router-dom\";\r\n//!==================================================\r\nconst UserDropdown = () => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  const logoutHandler = () => {\r\n    dispatch(logout());\r\n    // history.push(\"/\");\r\n  };\r\n  const menuToggler = () => {\r\n    dispatch(toggleUserMenuShow());\r\n  };\r\n  return (\r\n    <div className=\"user-dropdown\">\r\n      <ul>\r\n        <li className=\"user-dropdown__list-item\">\r\n          <Link onClick={menuToggler} to=\"/profile/info\">\r\n            Profile\r\n          </Link>\r\n        </li>\r\n\r\n        <Link\r\n          to=\"/profile/orders\"\r\n          onClick={menuToggler}\r\n          className=\"user-dropdown__list-item\"\r\n        >\r\n          My orders\r\n        </Link>\r\n        <div />\r\n        <li\r\n          onClick={() => {\r\n            logoutHandler();\r\n            menuToggler();\r\n          }}\r\n          style={{\r\n            borderTop: \"1px solid $color-grey-light-1-2\",\r\n            paddingTop: \".5rem\",\r\n          }}\r\n          className=\"user-dropdown__list-item\"\r\n        >\r\n          Log Out&nbsp; <FiLogOut />\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserDropdown;\r\n","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\cart-dropdown\\CartDropdown.js",["230"],"import React, { useRef, useEffect } from \"react\";\r\nimport \"./CartDropdown.scss\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { TweenMax, Power3 } from \"gsap\";\r\nimport { toggleCartShow } from \"../../redux/cart/cart.actions.js\";\r\nimport { roundToTwo } from \"../../utils.js\";\r\nimport { getCartProducts } from \"../../redux/cart/cart.actions.js\";\r\nimport axios from \"axios\";\r\nimport { AiOutlineDelete } from \"react-icons/ai\";\r\n//!========================================================================\r\n//!========================================================================\r\n//!========================================================================\r\nconst CartDropdown = () => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const cartItems = useSelector((state) => state.cart);\r\n  const { loading, cartProducts } = cartItems;\r\n\r\n  //! CALCULATE TOTAL NUMBER OF PRODUCTS IN CART ===========================\r\n  const cartItemsNumber = cartProducts.reduce(\r\n    (accum, cartItem) => accum + cartItem.quantity,\r\n    0\r\n  );\r\n  const subtotal = cartProducts.reduce(\r\n    (accum, cartItem) => accum + cartItem.quantity * cartItem.product.price,\r\n    0\r\n  );\r\n\r\n  //! GO TO CHECKOUT PAGE LINK =============================================\r\n  const checkoutClickHandler = () => {\r\n    dispatch(toggleCartShow());\r\n  };\r\n  //! GO TO THE PRODUCT PAGE LINK ==========================================\r\n  const goToProductPage = (id) => {\r\n    history.push(`/product/${id}`);\r\n    dispatch(toggleCartShow());\r\n  };\r\n\r\n  //! FADE IN ANIMATION  ====================================================\r\n  //TODO ADD GSAP OR SPRING FOR THE UNMOUNT ANIMATION =======================\r\n  const cartRef = useRef(null);\r\n  useEffect(() => {\r\n    TweenMax.to(cartRef.current, 0.8, {\r\n      opacity: 1,\r\n      x: 0,\r\n      ease: Power3.easeOut,\r\n    });\r\n    dispatch(getCartProducts());\r\n  }, [dispatch]);\r\n\r\n  //! REMOVE PRODUCT FROM CART ==============================================\r\n\r\n  const removeCartProduct = (id) => {\r\n    const deleteProduct = async () => {\r\n      try {\r\n        const config = {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${userInfo.token}`,\r\n          },\r\n        };\r\n        await axios.delete(`/api/cart/${id}`, config);\r\n\r\n        dispatch(getCartProducts());\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    deleteProduct();\r\n  };\r\n\r\n  return (\r\n    <div ref={cartRef} className=\"cart\">\r\n      <div className=\"cart__top\">\r\n        <h3 className=\"cart__top--text\">\r\n          You have {cartItemsNumber} items in your cart\r\n        </h3>\r\n      </div>\r\n      {cartProducts.map((item) => (\r\n        <div key={item.product._id} className=\"cart__item\">\r\n          <div className=\"cart__item--image-container\">\r\n            <img\r\n              onClick={() => goToProductPage(item.product._id)}\r\n              src={item.product.image}\r\n              alt={item.product.name}\r\n              className=\"cart__item--image\"\r\n            />\r\n          </div>\r\n          <div className=\"cart__details\">\r\n            <h3 className=\"cart__details--title\">\r\n              {item.product.name}{\" \"}\r\n              <AiOutlineDelete\r\n                onClick={() => removeCartProduct(item._id)}\r\n                className=\"cart__details--delete\"\r\n              />\r\n            </h3>\r\n            <h3 className=\"cart__details--price\">\r\n              Price: &nbsp;\r\n              <span className=\"cart__details--price-value\">\r\n                {item.product.price}\r\n              </span>\r\n            </h3>\r\n            <h3 className=\"cart__details--quantity\">\r\n              Quantity:&nbsp;\r\n              <span className=\"cart__details--quantity-value price-number\">\r\n                {item.quantity}\r\n              </span>\r\n            </h3>\r\n            <h3 className=\"cart__details--total\">TOTAL:</h3>\r\n            <h3 className=\"cart__details--total-value price-number\">\r\n              € {roundToTwo(item.quantity * item.product.price)}\r\n            </h3>\r\n          </div>\r\n        </div>\r\n      ))}\r\n      <div className=\"cart__subtotal\">\r\n        <h2 className=\"cart__subtotal--text\">SUBTOTAL:</h2>\r\n        <h2 className=\"cart__subtotal--value price-number\">\r\n          € {roundToTwo(subtotal)}\r\n        </h2>\r\n      </div>\r\n      <div className=\"cart__checkout\">\r\n        <Link to=\"/profile/checkout\">\r\n          <button\r\n            onClick={checkoutClickHandler}\r\n            className=\"cart__checkout--btn\"\r\n          >\r\n            Go to checkout\r\n          </button>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CartDropdown;\r\n","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\utils.js",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\loader\\Loader.js",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\loader-product\\LoaderProduct.js",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\action-show\\ActionShow.js",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\order-screen\\OrderScreen.js",["231"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./OrderScreen.scss\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { GrPaypal, GrStripe } from \"react-icons/gr\";\r\nimport { BsCreditCard } from \"react-icons/bs\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport LoaderGeneric from \"../../components/loader-generic/LoaderGeneric.js\";\r\nimport ErrorMessage from \"../../components/error-message/ErrorMessage.js\";\r\nimport { getOrderDetails, payOrder } from \"../../redux/order/order.actions\";\r\nimport axios from \"axios\";\r\nimport { PayPalButton } from \"react-paypal-button-v2\";\r\nimport { orderConstants } from \"../../redux/order/order.constants.js\";\r\nimport { getCartProducts } from \"../../redux/cart/cart.actions.js\";\r\n\r\n//todo implement gsapp to stop the buy now on screen\r\n//!=======================================================\r\n\r\nconst OrderScreen = ({ match }) => {\r\n  const orderId = match.params.id;\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const [sdkReady, setSdkReady] = useState(false);\r\n\r\n  const orderDetails = useSelector((state) => state.orderDetails);\r\n  const { order, loading, error } = orderDetails;\r\n\r\n  const orderPay = useSelector((state) => state.orderPay);\r\n  const { loading: loadingPay, success: successPay } = orderPay;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  useEffect(() => {\r\n    dispatch(getCartProducts());\r\n    const addPayPalScript = async () => {\r\n      const { data: clientId } = await axios.get(\"/api/config/paypal\");\r\n      const script = document.createElement(\"script\");\r\n      script.type = \"text/javascript\";\r\n      script.async = true;\r\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`;\r\n      script.onload = () => {\r\n        setSdkReady(true);\r\n      };\r\n      document.body.appendChild(script);\r\n    };\r\n\r\n    if (successPay || !order || order._id !== orderId) {\r\n      dispatch({ type: orderConstants.ORDER_PAY_RESET });\r\n      dispatch(getOrderDetails(orderId));\r\n    } else if (!order.isPaid) {\r\n      if (!window.paypal) {\r\n        addPayPalScript();\r\n      } else {\r\n        setSdkReady(true);\r\n      }\r\n    }\r\n  }, [order, orderId, dispatch, successPay]);\r\n\r\n  let orderCreatedDate = new Date(order.createdAt);\r\n  let orderPaidAtDate = new Date(order.paidAt);\r\n  let orderDeliveredAtDate = new Date(order.deliveredAt);\r\n\r\n  const successPaymentHandler = (paymentResult) => {\r\n    console.log(paymentResult);\r\n    dispatch(payOrder(orderId, paymentResult));\r\n  };\r\n\r\n  return loading ? (\r\n    <LoaderGeneric />\r\n  ) : error ? (\r\n    <ErrorMessage>{error}</ErrorMessage>\r\n  ) : (\r\n    <>\r\n      <div className=\" top-links mb-sm\">\r\n        {\" \"}\r\n        <Link className=\"product-screen__link\" to=\"/profile/orders\">\r\n          &#10092;&#10092; See all orders\r\n        </Link>\r\n      </div>\r\n      <div className=\"gradient-wrapper\">\r\n        <div className=\"order-screen \">\r\n          <div>\r\n            <h1 className=\"heading-1   mb-sm\">Order details</h1>\r\n            <h2 className=\"mb-sm\" style={{ fontWeight: \"400\" }}>\r\n              <strong>Order number:</strong> {order._id}{\" \"}\r\n              <span className=\"ml-sm\" style={{ color: \"grey\" }}>\r\n                |\r\n              </span>{\" \"}\r\n              <strong className=\"ml-sm\">Created at:</strong>{\" \"}\r\n              {orderCreatedDate.toLocaleString()}\r\n            </h2>\r\n          </div>\r\n          <div className=\"line-break\"></div>\r\n\r\n          <div className=\"order-screen__grid\">\r\n            <div className=\"order-screen__address-info \">\r\n              <h3 className=\"heading-3 order-screen__section-title mb-sm \">\r\n                Shipping address\r\n              </h3>\r\n              <address className=\"order-screen__middle-text\">\r\n                <p>{order.shippingAddress.fullName}</p>\r\n                <p>{order.shippingAddress.line1}</p>\r\n                <p>{order.shippingAddress.line2}</p>\r\n                <p>{order.shippingAddress.city}</p>\r\n                <p>{order.shippingAddress.stateProvinceRegion}</p>\r\n                <p>{order.shippingAddress.country}</p>\r\n                <p>{order.shippingAddress.postalCode}</p>\r\n                <p>{order.shippingAddress.phoneNumber}</p>\r\n              </address>\r\n            </div>\r\n            <div className=\"order-screen__payment-info order-screen__steps-container\">\r\n              <h3 className=\"heading-3 order-screen__section-title mb-sm \">\r\n                Payment Method\r\n              </h3>\r\n              <p\r\n                style={{ alignSelf: \"center\", fontSize: \"1.4rem\" }}\r\n                className=\"order-screen__middle-text\"\r\n              >\r\n                {order.paymentMethod === \"PayPal\" ? (\r\n                  <GrPaypal className=\" mr-sm\" />\r\n                ) : order.paymentMethod === \"Credit Card\" ? (\r\n                  <BsCreditCard className=\" mr-sm\" />\r\n                ) : (\r\n                  <GrStripe className=\" mr-sm\" />\r\n                )}\r\n                {order.paymentMethod}\r\n              </p>\r\n              {order.isPaid ? (\r\n                <p className=\"order-screen__status-success-message mb-sm\">\r\n                  &#10003; {`Paid at ${orderPaidAtDate.toLocaleString()}`}\r\n                </p>\r\n              ) : (\r\n                <p className=\"order-screen__status-fail-message mb-sm\">\r\n                  &#10005; Not paid\r\n                </p>\r\n              )}\r\n            </div>\r\n            <div className=\"order-screen__shipment-info order-screen__steps-container\">\r\n              <h3 className=\"heading-3 order-screen__section-title mb-sm \">\r\n                Shipment Method\r\n              </h3>\r\n              <p\r\n                style={{ alignSelf: \"center\", fontSize: \"1.4rem\" }}\r\n                className=\"order-screen__middle-text\"\r\n              >\r\n                {order.shippingMethod} &nbsp;{\" \"}\r\n              </p>\r\n              {order.isDelivered ? (\r\n                <span>\r\n                  &#10003;{\" \"}\r\n                  {`Delivered at ${orderDeliveredAtDate.toLocaleString()}`}\r\n                </span>\r\n              ) : (\r\n                <p className=\"order-screen__status-fail-message\">\r\n                  &#10005; Not delivered\r\n                </p>\r\n              )}\r\n            </div>\r\n          </div>\r\n          <div className=\"line-break\"></div>\r\n          <h3 className=\"heading-3 order-screen__section-title mb-sm mt-sm\">\r\n            Products\r\n          </h3>\r\n          <div className=\"order-screen__products-info \">\r\n            <div>\r\n              {order.orderItems.map((item) => (\r\n                <div\r\n                  key={item.product._id}\r\n                  className=\"order-screen__item mb-sm\"\r\n                >\r\n                  <img\r\n                    onClick={() => history.push(`/product/${item.product._id}`)}\r\n                    src={item.product.image}\r\n                    alt={item.product.name}\r\n                    className=\"order-screen__image mr-sm\"\r\n                  />\r\n                  <div className=\"order-screen__item-details\">\r\n                    <h4\r\n                      onClick={() =>\r\n                        history.push(`/product/${item.product._id}`)\r\n                      }\r\n                      className=\"heading-4 order-screen__item-details--title\"\r\n                    >\r\n                      {item.product.name} x {item.quantity}\r\n                    </h4>\r\n\r\n                    <h4 className=\"heading-4 order-screen__item-details--price price-number\">\r\n                      PRICE: € {item.product.price}\r\n                    </h4>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n            <div className=\"order-screen__payment\">\r\n              <div className=\"order-screen__summary\">\r\n                <h3\r\n                  style={{ gridColumn: \"1/3\" }}\r\n                  className=\"heading-3 order-screen__section-title mb-xs text-center\"\r\n                >\r\n                  Order Price\r\n                </h3>\r\n                <span style={{ gridColumn: \"1/3\", fontSize: \"1.2rem\" }}>\r\n                  (All prices include VAT)\r\n                </span>\r\n                <h4 className=\"heading-4 order-screen__summary--text\">\r\n                  Products:\r\n                </h4>\r\n                <span className=\"order-screen__middle-text text-end\">\r\n                  {order.itemsPrice}€\r\n                </span>\r\n                <h4 className=\"heading-4 order-screen__summary--text\">\r\n                  Shipping:\r\n                </h4>\r\n                <span className=\"order-screen__middle-text  text-end\">\r\n                  {order.shippingPrice}€\r\n                </span>\r\n                <h3 className=\"heading-3 order-screen__summary--total price-number\">\r\n                  TOTAL:\r\n                </h3>\r\n                <span className=\"heading-3 order-screen__summary--total price-number  text-end\">\r\n                  {order.totalPrice}€\r\n                </span>\r\n              </div>\r\n              {!order.isPaid && (\r\n                <div>\r\n                  {loadingPay && <LoaderGeneric />}\r\n                  {!sdkReady ? (\r\n                    <LoaderGeneric />\r\n                  ) : (\r\n                    <>\r\n                      <h3 className=\"heading-3 order-screen__section-title mb-xs mt-xs text-center\">\r\n                        Pay now\r\n                      </h3>\r\n                      <PayPalButton\r\n                        amount={order.totalPrice}\r\n                        onSuccess={successPaymentHandler}\r\n                      />\r\n                    </>\r\n                  )}\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OrderScreen;\r\n","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\profile-favorite-screen\\FavoriteScreen.js",["232"],"import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { listFavoriteProducts } from \"../../redux/user/user.actions.js\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { FaHeartBroken } from \"react-icons/fa\";\r\nimport axios from \"axios\";\r\nimport \"./FavoriteScreen.scss\";\r\nimport { addToCart, getCartProducts } from \"../../redux/cart/cart.actions.js\";\r\nimport { TiShoppingCart } from \"react-icons/ti\";\r\nimport ActionShow from \"../../components/action-show/ActionShow.js\";\r\nimport LoaderGeneric from \"../../components/loader-generic/LoaderGeneric.js\";\r\nimport ErrorMessage from \"../../components/error-message/ErrorMessage.js\";\r\n//!==============================================================\r\nconst FavoriteScreen = () => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const [toCart, setToCart] = useState(false);\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const removeFromFavoriteHandler = (id) => {\r\n    const deleteProduct = async () => {\r\n      try {\r\n        const config = {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${userInfo.token}`,\r\n          },\r\n        };\r\n        await axios.delete(`/api/users/profile/favorites/${id}`, config);\r\n\r\n        dispatch(listFavoriteProducts());\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    deleteProduct();\r\n  };\r\n  const favoriteProductsList = useSelector(\r\n    (state) => state.userFavoriteProducts\r\n  );\r\n  const { userFavoriteProducts, loading } = favoriteProductsList;\r\n  const favoriteProductsLength = userFavoriteProducts.length;\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/login\");\r\n    }\r\n    dispatch(listFavoriteProducts());\r\n  }, [history, userInfo, dispatch]);\r\n\r\n  const addToCartHandler = (id) => {\r\n    dispatch(addToCart(id, 1));\r\n    dispatch(getCartProducts());\r\n    setToCart(true);\r\n    setTimeout(() => {\r\n      setToCart(false);\r\n    }, 3100);\r\n  };\r\n  const productLink = (id) => {\r\n    history.push(`/product/${id}`);\r\n  };\r\n  return loading ? (\r\n    <LoaderGeneric />\r\n  ) : (\r\n    <div className=\"favorite-screen\">\r\n      {toCart ? <ActionShow /> : null}\r\n      <h1 className=\"heading-1  \">FAVORITE PRODUCTS</h1>\r\n\r\n      <h2 className=\"favorite-screen__item-count mb-md\">\r\n        You have {favoriteProductsLength} favorite products.\r\n      </h2>\r\n      {userFavoriteProducts.map((item) => (\r\n        <div key={item._id} className=\"favorite-screen__product-container\">\r\n          <div className=\"favorite-screen__item\">\r\n            <div\r\n              className=\"favorite-screen__image-wrapper\"\r\n              onClick={() => productLink(item._id)}\r\n            >\r\n              <img\r\n                src={item.image}\r\n                alt={item.name}\r\n                className=\"favorite-screen__image\"\r\n              />\r\n            </div>\r\n            <div className=\"favorite-screen__item-details\">\r\n              <h4\r\n                onClick={() => productLink(item._id)}\r\n                className=\"heading-4 favorite-screen__item-details--title\"\r\n              >\r\n                {item.name}\r\n              </h4>\r\n              {item.countInStock ? (\r\n                <h3 className=\"in-stock mt-xs\">In stock</h3>\r\n              ) : (\r\n                <h3 className=\"out-of-stock-favorites mt-xs\">Not in stock</h3>\r\n              )}\r\n              <span className=\"favorite-screen__item-details--default-text\">\r\n                Default quantity when addding to cart is 1\r\n              </span>\r\n              <h4 className=\"heading-4 favorite-screen__item-details--price\">\r\n                PRICE:{\" \"}\r\n                <span className=\"heading-3 favorite-screen__item-details--price-value price-number\">\r\n                  € {item.price}\r\n                </span>\r\n              </h4>\r\n              <span\r\n                onClick={() => removeFromFavoriteHandler(item._id)}\r\n                className=\"favorite-screen__remove\"\r\n              >\r\n                Remove Favorite &nbsp; <FaHeartBroken />\r\n              </span>\r\n              {item.countInStock === 0 ? (\r\n                <button className=\" favorite-screen__button-disabled\">\r\n                  {\" \"}\r\n                  <TiShoppingCart className=\"favorite-screen__button--icon\" />{\" \"}\r\n                  out of stock{\" \"}\r\n                </button>\r\n              ) : (\r\n                <button\r\n                  onClick={async () => addToCartHandler()}\r\n                  className=\"favorite-screen__button\"\r\n                >\r\n                  <TiShoppingCart className=\"favorite-screen__button--icon\" />{\" \"}\r\n                  Add to cart\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FavoriteScreen;\r\n","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\checkout-steps\\CheckoutSteps.js",["233","234"],"import React from \"react\";\r\nimport \"./CheckoutStepts.scss\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nimport { AiOutlineDoubleRight } from \"react-icons/ai\";\r\nimport { GiTechnoHeart } from \"react-icons/gi\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n//!=====================================================================\r\nconst CheckoutSteps = ({ active3 }) => {\r\n  const history = useHistory();\r\n  const orderAddressState = useSelector((state) => state.orderAddress);\r\n  const { orderAddress } = orderAddressState;\r\n\r\n  const orderPaymentMethod = useSelector((state) => state.orderPaymentMethod);\r\n  const selectedShipment = orderAddress.fullName ? \"selected\" : \"\";\r\n  const selectedPayment =\r\n    orderPaymentMethod.paymentMethod !== \"\" ? \"selected\" : \"\";\r\n  return (\r\n    <>\r\n      <div\r\n        style={{\r\n          marginTop: \"-8rem\",\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n        }}\r\n        className=\"nav__logo-container mb-sm\"\r\n      >\r\n        <GiTechnoHeart className=\"nav__logo\" />{\" \"}\r\n        <Link to=\"/\">\r\n          <h2 className=\"nav__title\">Cyber Heart</h2>\r\n        </Link>\r\n      </div>\r\n      <Link to=\"/\">\r\n        <h2 className=\"nav__title\"></h2>\r\n      </Link>\r\n      <div className=\"checkout-steps\">\r\n        <div className=\"checkout-steps__progress\">\r\n          <span\r\n            className={`checkout-steps__number checkout-steps__number--${selectedShipment}`}\r\n          >\r\n            1\r\n          </span>{\" \"}\r\n          <p\r\n            onClick={() => history.push(\"/shipping\")}\r\n            className=\"checkout-steps__container\"\r\n          >\r\n            <span\r\n              className={`checkout-steps--text checkout-steps--text--${selectedShipment} `}\r\n            >\r\n              Address\r\n            </span>\r\n          </p>\r\n          <AiOutlineDoubleRight\r\n            className={`checkout-steps--arrows checkout-steps--arrows--${selectedShipment}  checkout-steps--arrows--animate`}\r\n          />\r\n        </div>\r\n        <div className=\"checkout-steps__progress\">\r\n          <span\r\n            className={`checkout-steps__number  checkout-steps__number--${selectedPayment} `}\r\n          >\r\n            2\r\n          </span>{\" \"}\r\n          <p\r\n            onClick={() => history.push(\"/payment\")}\r\n            className=\"checkout-steps__container\"\r\n          >\r\n            <span\r\n              className={`checkout-steps--text checkout-steps--text--${selectedPayment} `}\r\n            >\r\n              Payment & Shipping\r\n            </span>\r\n          </p>\r\n          <AiOutlineDoubleRight\r\n            className={`checkout-steps--arrows checkout-steps--arrows--${selectedPayment} checkout-steps--arrows--animate`}\r\n          />\r\n        </div>\r\n        <div className=\"checkout-steps__progress\">\r\n          <span\r\n            className={`checkout-steps__number checkout-steps__number--${active3}`}\r\n          >\r\n            3\r\n          </span>\r\n          <p\r\n            onClick={() => history.push(\"/complete-order\")}\r\n            className=\"checkout-steps__container\"\r\n          >\r\n            <span\r\n              className={`checkout-steps--text checkout-steps--text--${active3} `}\r\n            >\r\n              Complete Order\r\n            </span>\r\n          </p>\r\n          {/* Empty div for flex space */}\r\n          <div></div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CheckoutSteps;\r\n","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\add-address\\AddAddress.js",["235","236","237","238","239"],"import React, { useState } from \"react\";\r\nimport \"./AddAddress.scss\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport ErrorMessage from \"../error-message/ErrorMessage.js\";\r\nimport { getUserAddresses, addAddress } from \"../../redux/user/user.actions.js\";\r\n//!=============================================================================\r\nconst AddAddress = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [fullName, setFullName] = useState(\"\");\r\n  const [country, setCountry] = useState(\"\");\r\n  const [line1, setLine1] = useState(\"\");\r\n  const [line2, setLine2] = useState(\"\");\r\n  const [city, setCity] = useState(\"\");\r\n  const [stateProvinceRegion, setStateProvinceRegion] = useState(\"\");\r\n  const [postalCode, setPostalCode] = useState(\"\");\r\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\r\n\r\n  const [successColor, setSuccessColor] = useState(\"alert\");\r\n  const [error, setError] = useState(false);\r\n  const [message, setMessage] = useState(null);\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { user } = userDetails;\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    window.location.reload();\r\n    setMessage(\"Address added successfully.\");\r\n    setSuccessColor(\"success\");\r\n    dispatch(\r\n      addAddress({\r\n        id: user._id,\r\n        fullName,\r\n        country,\r\n        line1,\r\n        line2,\r\n        city,\r\n        stateProvinceRegion,\r\n        postalCode,\r\n        phoneNumber,\r\n      })\r\n    );\r\n    dispatch(getUserAddresses());\r\n    setFullName(\"\");\r\n    setCountry(\"\");\r\n    setLine1(\"\");\r\n    setLine2(\"\");\r\n    setCity(\"\");\r\n    setStateProvinceRegion(\"\");\r\n    setPostalCode(\"\");\r\n    setPhoneNumber(\"\");\r\n  };\r\n  return (\r\n    <>\r\n      <form onSubmit={handleSubmit} className=\"add-address__form-container\">\r\n        <label htmlFor=\"fullName\" className=\"add-address__label\">\r\n          <strong>Full name</strong>\r\n        </label>\r\n        <input\r\n          required\r\n          name=\"line1\"\r\n          onChange={(e) => setFullName(e.target.value)}\r\n          value={fullName}\r\n          type=\"text\"\r\n          className=\"add-address__input\"\r\n        />\r\n        <label htmlFor=\"line1\" className=\"add-address__label\">\r\n          <strong>Address line 1</strong>\r\n        </label>\r\n        <input\r\n          required\r\n          name=\"line1\"\r\n          onChange={(e) => setLine1(e.target.value)}\r\n          value={line1}\r\n          type=\"text\"\r\n          className=\"add-address__input\"\r\n        />\r\n\r\n        <label htmlFor=\"line2\" className=\"add-address__label\">\r\n          <strong>Address line 2</strong>\r\n        </label>\r\n        <input\r\n          required\r\n          name=\"line2\"\r\n          onChange={(e) => setLine2(e.target.value)}\r\n          value={line2}\r\n          type=\"text\"\r\n          className=\"add-address__input\"\r\n        />\r\n        <label htmlFor=\"city\" className=\"add-address__label\">\r\n          <strong>City</strong>\r\n        </label>\r\n        <input\r\n          required\r\n          name=\"city\"\r\n          onChange={(e) => setCity(e.target.value)}\r\n          value={city}\r\n          className=\"add-address__input\"\r\n        />\r\n        <label htmlFor=\"stateProvinceRegion\" className=\"add-address__label\">\r\n          <strong>State/Province/Region</strong>\r\n        </label>\r\n        <input\r\n          required\r\n          name=\"stateProvinceRegion\"\r\n          onChange={(e) => setStateProvinceRegion(e.target.value)}\r\n          value={stateProvinceRegion}\r\n          className=\"add-address__input\"\r\n        />\r\n        <label htmlFor=\"postalCode\" className=\"add-address__label\">\r\n          <strong>Postal Code</strong>\r\n        </label>\r\n        <input\r\n          required\r\n          name=\"postalCode\"\r\n          onChange={(e) => setPostalCode(e.target.value)}\r\n          value={postalCode}\r\n          className=\"add-address__input\"\r\n        />\r\n        <label htmlFor=\"country\" className=\"add-address__label\">\r\n          <strong>Country</strong>\r\n        </label>\r\n        <input\r\n          required\r\n          name=\"country\"\r\n          onChange={(e) => setCountry(e.target.value)}\r\n          value={country}\r\n          className=\"add-address__input\"\r\n        />\r\n        <label htmlFor=\"phoneNumber\" className=\"add-address__label\">\r\n          <strong>Phone Number</strong>\r\n        </label>\r\n        <input\r\n          required\r\n          name=\"phoneNumber\"\r\n          onChange={(e) => setPhoneNumber(e.target.value)}\r\n          value={phoneNumber}\r\n          className=\"add-address__input\"\r\n        />\r\n        <input\r\n          required\r\n          className=\"add-address__input-btn\"\r\n          type=\"submit\"\r\n          value=\"Add new Address\"\r\n        />\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddAddress;\r\n","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\product\\Product.js",["240","241","242"],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\loader-generic\\LoaderGeneric.js",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\profile-orders\\ProfileOrders.js",["243"],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\order-of-orders\\OrderOfOrders.js",[],{"ruleId":"244","replacedBy":"245"},{"ruleId":"246","replacedBy":"247"},{"ruleId":"248","severity":1,"message":"249","line":1,"column":17,"nodeType":"250","messageId":"251","endLine":1,"endColumn":26},{"ruleId":"248","severity":1,"message":"252","line":25,"column":11,"nodeType":"250","messageId":"251","endLine":25,"endColumn":19},{"ruleId":"248","severity":1,"message":"253","line":10,"column":8,"nodeType":"250","messageId":"251","endLine":10,"endColumn":12},{"ruleId":"254","severity":1,"message":"255","line":71,"column":26,"nodeType":"256","messageId":"257","endLine":71,"endColumn":58},{"ruleId":"248","severity":1,"message":"258","line":6,"column":10,"nodeType":"250","messageId":"251","endLine":6,"endColumn":14},{"ruleId":"248","severity":1,"message":"259","line":18,"column":9,"nodeType":"250","messageId":"251","endLine":18,"endColumn":17},{"ruleId":"248","severity":1,"message":"260","line":18,"column":11,"nodeType":"250","messageId":"251","endLine":18,"endColumn":18},{"ruleId":"254","severity":1,"message":"255","line":164,"column":26,"nodeType":"256","messageId":"257","endLine":164,"endColumn":55},{"ruleId":"248","severity":1,"message":"260","line":25,"column":11,"nodeType":"250","messageId":"251","endLine":25,"endColumn":18},{"ruleId":"248","severity":1,"message":"258","line":9,"column":10,"nodeType":"250","messageId":"251","endLine":9,"endColumn":14},{"ruleId":"248","severity":1,"message":"261","line":23,"column":9,"nodeType":"250","messageId":"251","endLine":23,"endColumn":27},{"ruleId":"262","severity":1,"message":"263","line":37,"column":46,"nodeType":"264","messageId":"265","endLine":37,"endColumn":48},{"ruleId":"266","severity":1,"message":"267","line":40,"column":13,"nodeType":"268","endLine":51,"endColumn":4},{"ruleId":"248","severity":1,"message":"269","line":1,"column":17,"nodeType":"250","messageId":"251","endLine":1,"endColumn":25},{"ruleId":"248","severity":1,"message":"270","line":21,"column":27,"nodeType":"250","messageId":"251","endLine":21,"endColumn":32},{"ruleId":"248","severity":1,"message":"260","line":19,"column":33,"nodeType":"250","messageId":"251","endLine":19,"endColumn":40},{"ruleId":"248","severity":1,"message":"271","line":24,"column":11,"nodeType":"250","messageId":"251","endLine":24,"endColumn":18},{"ruleId":"248","severity":1,"message":"249","line":1,"column":17,"nodeType":"250","messageId":"251","endLine":1,"endColumn":26},{"ruleId":"248","severity":1,"message":"260","line":16,"column":11,"nodeType":"250","messageId":"251","endLine":16,"endColumn":18},{"ruleId":"248","severity":1,"message":"272","line":12,"column":9,"nodeType":"250","messageId":"251","endLine":12,"endColumn":16},{"ruleId":"248","severity":1,"message":"260","line":22,"column":11,"nodeType":"250","messageId":"251","endLine":22,"endColumn":18},{"ruleId":"248","severity":1,"message":"252","line":33,"column":11,"nodeType":"250","messageId":"251","endLine":33,"endColumn":19},{"ruleId":"248","severity":1,"message":"273","line":12,"column":8,"nodeType":"250","messageId":"251","endLine":12,"endColumn":20},{"ruleId":"248","severity":1,"message":"274","line":7,"column":23,"nodeType":"250","messageId":"251","endLine":7,"endColumn":34},{"ruleId":"275","severity":1,"message":"276","line":35,"column":9,"nodeType":"277","endLine":35,"endColumn":36},{"ruleId":"248","severity":1,"message":"273","line":4,"column":8,"nodeType":"250","messageId":"251","endLine":4,"endColumn":20},{"ruleId":"248","severity":1,"message":"278","line":19,"column":10,"nodeType":"250","messageId":"251","endLine":19,"endColumn":22},{"ruleId":"248","severity":1,"message":"270","line":20,"column":10,"nodeType":"250","messageId":"251","endLine":20,"endColumn":15},{"ruleId":"248","severity":1,"message":"279","line":20,"column":17,"nodeType":"250","messageId":"251","endLine":20,"endColumn":25},{"ruleId":"248","severity":1,"message":"280","line":21,"column":10,"nodeType":"250","messageId":"251","endLine":21,"endColumn":17},{"ruleId":"248","severity":1,"message":"281","line":1,"column":38,"nodeType":"250","messageId":"251","endLine":1,"endColumn":53},{"ruleId":"248","severity":1,"message":"273","line":10,"column":10,"nodeType":"250","messageId":"251","endLine":10,"endColumn":22},{"ruleId":"262","severity":1,"message":"263","line":27,"column":46,"nodeType":"264","messageId":"265","endLine":27,"endColumn":48},{"ruleId":"248","severity":1,"message":"269","line":1,"column":17,"nodeType":"250","messageId":"251","endLine":1,"endColumn":25},"no-native-reassign",["282"],"no-negated-in-lhs",["283"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'userInfo' is assigned a value but never used.","'gsap' is defined but never used.","no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","'Link' is defined but never used.","'location' is assigned a value but never used.","'loading' is assigned a value but never used.","'orderPaymentMethod' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","'useState' is defined but never used.","'error' is assigned a value but never used.","'success' is assigned a value but never used.","'history' is assigned a value but never used.","'ErrorMessage' is defined but never used.","'useDispatch' is defined but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","'successColor' is assigned a value but never used.","'setError' is assigned a value but never used.","'message' is assigned a value but never used.","'useLayoutEffect' is defined but never used.","no-global-assign","no-unsafe-negation"]