[{"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\index.js":"1","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\redux\\store.js":"2","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\scroll-to-top\\ScrollToTop.jsx":"3","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\reportWebVitals.js":"4","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\App.js":"5","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\redux\\cart\\cart.reducers.js":"6","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\redux\\product\\product.reducers.js":"7","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\redux\\user\\user.reducers.js":"8","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\redux\\order\\order.reducers.js":"9","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\redux\\cart\\cart.actions.js":"10","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\login\\Login.js":"11","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\signup\\Signup.js":"12","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\shipping-screen\\ShippingScreen.js":"13","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\profile\\ProfileScreen.js":"14","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\redux\\cart\\cart.constants.js":"15","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\redux\\product\\product.constants.js":"16","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\redux\\order\\order.constants.js":"17","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\redux\\user\\user.constants.js":"18","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\footer\\Footer.js":"19","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\header\\Header.js":"20","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\home-screen\\HomeScreen.js":"21","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\product-screen\\ProductScreen.js":"22","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\complete-order\\CompleteOrder.js":"23","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\payment\\PaymentScreen.js":"24","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\redux\\user\\user.actions.js":"25","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\redux\\order\\order.actions.js":"26","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\error-message\\ErrorMessage.js":"27","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\address-edit\\AddressEdit.js":"28","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\profile-sidebar\\ProfileSidebar.js":"29","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\profile-info\\YourInfo.js":"30","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\checkout\\Checkout.js":"31","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\profile-addresses\\ProfileAddresses.js":"32","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\redux\\product\\product.actions.js":"33","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\utils.js":"34","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\cart-dropdown\\CartDropdown.js":"35","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\user-menu-dropdown\\UserDropdown.js":"36","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\loader\\Loader.js":"37","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\loader-product\\LoaderProduct.js":"38","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\action-show\\ActionShow.js":"39","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\checkout-steps\\CheckoutSteps.js":"40","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\add-address\\AddAddress.js":"41","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\profile-favorite\\FavoriteScreen.js":"42","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\product\\Product.js":"43"},{"size":768,"mtime":1612129189000,"results":"44","hashOfConfig":"45"},{"size":2994,"mtime":1612129189000,"results":"46","hashOfConfig":"45"},{"size":347,"mtime":1612129189000,"results":"47","hashOfConfig":"45"},{"size":362,"mtime":1612129189000,"results":"48","hashOfConfig":"45"},{"size":2044,"mtime":1612291191738,"results":"49","hashOfConfig":"45"},{"size":886,"mtime":1612129189000,"results":"50","hashOfConfig":"45"},{"size":1011,"mtime":1612129189000,"results":"51","hashOfConfig":"45"},{"size":5021,"mtime":1612129189000,"results":"52","hashOfConfig":"45"},{"size":660,"mtime":1612129189000,"results":"53","hashOfConfig":"45"},{"size":1827,"mtime":1612129189000,"results":"54","hashOfConfig":"45"},{"size":2740,"mtime":1612129189000,"results":"55","hashOfConfig":"45"},{"size":5861,"mtime":1612129189000,"results":"56","hashOfConfig":"45"},{"size":4745,"mtime":1612129189000,"results":"57","hashOfConfig":"45"},{"size":1250,"mtime":1612129189000,"results":"58","hashOfConfig":"45"},{"size":626,"mtime":1612129189000,"results":"59","hashOfConfig":"45"},{"size":339,"mtime":1612129189000,"results":"60","hashOfConfig":"45"},{"size":147,"mtime":1612129189000,"results":"61","hashOfConfig":"45"},{"size":1320,"mtime":1612129189000,"results":"62","hashOfConfig":"45"},{"size":1222,"mtime":1612129189000,"results":"63","hashOfConfig":"45"},{"size":3903,"mtime":1612129189000,"results":"64","hashOfConfig":"45"},{"size":1692,"mtime":1612129189000,"results":"65","hashOfConfig":"45"},{"size":9251,"mtime":1612129189000,"results":"66","hashOfConfig":"45"},{"size":9698,"mtime":1612269555766,"results":"67","hashOfConfig":"45"},{"size":5582,"mtime":1612129189000,"results":"68","hashOfConfig":"45"},{"size":7734,"mtime":1612129189000,"results":"69","hashOfConfig":"45"},{"size":851,"mtime":1612129189000,"results":"70","hashOfConfig":"45"},{"size":429,"mtime":1612129189000,"results":"71","hashOfConfig":"45"},{"size":6096,"mtime":1612130953271,"results":"72","hashOfConfig":"45"},{"size":4256,"mtime":1612129189000,"results":"73","hashOfConfig":"45"},{"size":8777,"mtime":1612129189000,"results":"74","hashOfConfig":"45"},{"size":5956,"mtime":1612266848918,"results":"75","hashOfConfig":"45"},{"size":4087,"mtime":1612129189000,"results":"76","hashOfConfig":"45"},{"size":1537,"mtime":1612129189000,"results":"77","hashOfConfig":"45"},{"size":193,"mtime":1612266180948,"results":"78","hashOfConfig":"45"},{"size":4851,"mtime":1612267775383,"results":"79","hashOfConfig":"45"},{"size":1464,"mtime":1612129189000,"results":"80","hashOfConfig":"45"},{"size":611,"mtime":1612129189000,"results":"81","hashOfConfig":"45"},{"size":420,"mtime":1612129189000,"results":"82","hashOfConfig":"45"},{"size":580,"mtime":1612129189000,"results":"83","hashOfConfig":"45"},{"size":3419,"mtime":1612129189000,"results":"84","hashOfConfig":"45"},{"size":4732,"mtime":1612129189000,"results":"85","hashOfConfig":"45"},{"size":4451,"mtime":1612267909316,"results":"86","hashOfConfig":"45"},{"size":4091,"mtime":1612129189000,"results":"87","hashOfConfig":"45"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"jkitux",{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"90"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"90"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"90"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"90"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"90"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"90"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"90"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"142","messages":"143","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"90"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"90"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"160","messages":"161","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"90"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"169","messages":"170","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"90"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"90"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"90"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"186","messages":"187","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"90"},"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\index.js",[],["189","190"],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\redux\\store.js",["191"],"import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport {\r\n  productListReducer,\r\n  productDetailsReducer,\r\n} from \"./product/product.reducers.js\";\r\nimport { cartToggleReducer, getCartReducer } from \"./cart/cart.reducers.js\";\r\nimport {\r\n  userLoginReducer,\r\n  userRegisterReducer,\r\n  userDetailsReducer,\r\n  userUpdateProfileReducer,\r\n  userAddressesReducer,\r\n  addAddressReducer,\r\n  showUserMenuReducer,\r\n  getUserFavoriteProductsReducer,\r\n  showEditAddressReducer,\r\n} from \"./user/user.reducers.js\";\r\nimport {\r\n  addOrderAddressReducer,\r\n  savePaymentMethodReducer,\r\n} from \"./order/order.reducers.js\";\r\n\r\n//! REDUX STORE=========================================\r\nconst reducer = combineReducers({\r\n  addAddress: addAddressReducer,\r\n  cart: getCartReducer,\r\n  cartToggle: cartToggleReducer,\r\n  orderAddress: addOrderAddressReducer,\r\n  orderPaymentMethod: savePaymentMethodReducer,\r\n  productDetails: productDetailsReducer,\r\n  productList: productListReducer,\r\n  showUserMenu: showUserMenuReducer,\r\n  userAddresses: userAddressesReducer,\r\n  userDetails: userDetailsReducer,\r\n  userFavoriteProducts: getUserFavoriteProductsReducer,\r\n  userLogin: userLoginReducer,\r\n  userRegister: userRegisterReducer,\r\n  userUpdateProfile: userUpdateProfileReducer,\r\n});\r\n//!=====================================================\r\n\r\nconst cartItemsFromStorage = localStorage.getItem(\"cartProducts\")\r\n  ? JSON.parse(localStorage.getItem(\"cartProducts\"))\r\n  : [];\r\n\r\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\")\r\n  ? JSON.parse(localStorage.getItem(\"userInfo\"))\r\n  : null;\r\n\r\nconst userAddressesFromStorage = localStorage.getItem(\"userAddresses\")\r\n  ? JSON.parse(localStorage.getItem(\"userAddresses\"))\r\n  : null;\r\n\r\nconst orderAddressFromStorage = localStorage.getItem(\"orderAddress\")\r\n  ? JSON.parse(localStorage.getItem(\"orderAddress\"))\r\n  : {};\r\nconst orderPaymentMethodFromStorage = localStorage.getItem(\"orderPaymentMethod\")\r\n  ? JSON.parse(localStorage.getItem(\"orderPaymentMethod\"))\r\n  : {\r\n      paymentMethod: \"\",\r\n      shippingMethod: {},\r\n    };\r\n\r\nconst userFavoriteProductsFromStorage = localStorage.getItem(\r\n  \"userFavoriteProducts\"\r\n)\r\n  ? JSON.parse(localStorage.getItem(\"userFavoriteProducts\"))\r\n  : [];\r\nconst initialState = {\r\n  productDetails: { product: { reviews: [], likedBy: [] } },\r\n  showUserMenu: false,\r\n  cart: { cartProducts: cartItemsFromStorage },\r\n  userLogin: { userInfo: userInfoFromStorage },\r\n  userAddresses: { addresses: userAddressesFromStorage },\r\n  orderAddress: { orderAddress: orderAddressFromStorage },\r\n  userFavoriteProducts: {\r\n    userFavoriteProducts: userFavoriteProductsFromStorage,\r\n  },\r\n  orderPaymentMethod: orderPaymentMethodFromStorage,\r\n};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\scroll-to-top\\ScrollToTop.jsx",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\App.js",["192","193"],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\redux\\cart\\cart.reducers.js",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\redux\\product\\product.reducers.js",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\redux\\user\\user.reducers.js",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\redux\\order\\order.reducers.js",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\redux\\cart\\cart.actions.js",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\login\\Login.js",["194"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link,useHistory } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport ErrorMessage from \"../../components/error-message/ErrorMessage.js\";\r\nimport { login } from \"../../redux/user/user.actions.js\";\r\nimport \"./Login.scss\";\r\n\r\n//!==========================================================\r\nconst Login = ({ location }) => {\r\n  const history=useHistory();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { error, userInfo } = userLogin;\r\n\r\n  const redirect = location.search ? location.search.split(\"+\")[1] : \"/shop\";\r\n\r\n  //! Check if we are logged in so you get a redirect if you try to access the login route while logged in\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect);\r\n    }\r\n  }, [history, userInfo, redirect]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    //! Dispatch Login ====================\r\n    dispatch(login(email, password));\r\n  };\r\n  return (\r\n    <div className=\"login-screen\">\r\n      <div className=\"home-screen__top\">\r\n        <h1 className=\"heading-1  home-screen__title\">SIGNIN</h1>\r\n      </div>\r\n      {error && <ErrorMessage color=\"alert\">{error}</ErrorMessage>}\r\n\r\n      <div className=\"login-screen__form-container\">\r\n        <form className=\"login-screen__form\" onSubmit={submitHandler}>\r\n          <label className=\"login-screen__form--input-label\" htmlFor=\"email\">\r\n            Email Address\r\n          </label>\r\n          <input\r\n            placeholder=\"Enter email\"\r\n            className=\"login-screen__form--input\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            name=\"email\"\r\n            type=\"email\"\r\n          />\r\n          <label className=\"login-screen__form--input-label\" htmlFor=\"password\">\r\n            Password\r\n          </label>\r\n          <input\r\n            placeholder=\"Enter password\"\r\n            className=\"login-screen__form--input\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            name=\"password\"\r\n            type=\"password\"\r\n          />\r\n          <input\r\n            className=\"login-screen__form--submit-btn\"\r\n            type=\"submit\"\r\n            value=\"Sign In\"\r\n          />\r\n        </form>\r\n        <Link\r\n          className=\"login-screen__create-account-link\"\r\n          to={redirect ? \"/register?redirect=${redirect}\" : \"/register\"}\r\n        >\r\n          Don't have an account? Create one here.\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\signup\\Signup.js",["195","196","197"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport ErrorMessage from \"../../components/error-message/ErrorMessage.js\";\r\nimport { register } from \"../../redux/user/user.actions.js\";\r\nimport \"./Signup.scss\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\n//!==========================================================\r\nconst Signup = ({ location }) => {\r\n  const redirect = location.search ? location.search.split(\"+\")[1] : \"/\";\r\n  const dispatch = useDispatch();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setconfirmPassword] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [message, setMessage] = useState(null);\r\n  const userRegister = useSelector((state) => state.userRegister);\r\n  const { loading, error, userInfo } = userRegister;\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect);\r\n    }\r\n  }, [userInfo, redirect]);\r\n  const passwordLength = password.length < 6 ? false : true;\r\n  const passwordLowercase = /[a-z]/.test(password) < 1 ? false : true;\r\n  const passwordUppercase = /[A-Z]/.test(password) < 1 ? false : true;\r\n  const passwordNumber = /[0-9]/.test(password) < 1 ? false : true;\r\n  const passwordEqualConfirmPassword =\r\n    password !== confirmPassword ? false : true;\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    history.push(\"/shop\");\r\n    //!Password check =====================\r\n\r\n    if (\r\n      passwordLength &&\r\n      passwordLowercase &&\r\n      passwordUppercase &&\r\n      passwordNumber &&\r\n      passwordEqualConfirmPassword\r\n    ) {\r\n      //! Dispatch Login ====================\r\n      dispatch(register(name, email, password));\r\n    } else {\r\n      setMessage(\"You must comply with all the password requisites.\");\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"login-screen\">\r\n      <div className=\"home-screen__top\">\r\n        <h1 className=\"heading-1  home-screen__title\">SIGNUP</h1>\r\n      </div>\r\n      {error && <ErrorMessage color=\"alert\">{error}</ErrorMessage>}\r\n\r\n      <div className=\"login-screen__form-container\">\r\n        <form className=\"login-screen__form\" onSubmit={submitHandler}>\r\n          <label className=\"login-screen__form--input-label\" htmlFor=\"name\">\r\n            Name\r\n          </label>\r\n          <input\r\n            placeholder=\"Enter name\"\r\n            className=\"login-screen__form--input\"\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n            name=\"name\"\r\n            type=\"text\"\r\n          />\r\n          <label className=\"login-screen__form--input-label\" htmlFor=\"email\">\r\n            Email\r\n          </label>\r\n          <input\r\n            placeholder=\"Enter email\"\r\n            className=\"login-screen__form--input\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            name=\"email\"\r\n            type=\"email\"\r\n          />\r\n          <label className=\"login-screen__form--input-label\" htmlFor=\"password\">\r\n            Password\r\n          </label>\r\n          <input\r\n            placeholder=\"Enter password\"\r\n            className=\"login-screen__form--input\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            name=\"password\"\r\n            type=\"password\"\r\n          />\r\n          <label\r\n            className=\"login-screen__form--input-label\"\r\n            htmlFor=\"confirmPassword\"\r\n          >\r\n            Confirm Password\r\n          </label>\r\n          <input\r\n            placeholder=\"Confirm password\"\r\n            className=\"login-screen__form--input\"\r\n            value={confirmPassword}\r\n            onChange={(e) => setconfirmPassword(e.target.value)}\r\n            name=\"confirmPassword\"\r\n            type=\"password\"\r\n          />\r\n          {message && <p className=\"signup__password-error\">{message}</p>}\r\n          <div className=\"signup__password-box\">\r\n            <h3>Password must:</h3>\r\n            <p\r\n              className={\r\n                passwordEqualConfirmPassword\r\n                  ? \"signup__password-box--fail\"\r\n                  : \"signup__password-box--checked\"\r\n              }\r\n            >\r\n              match Confirm Password\r\n            </p>\r\n            <p\r\n              className={\r\n                passwordUppercase\r\n                  ? \"signup__password-box--fail\"\r\n                  : \"signup__password-box--checked\"\r\n              }\r\n            >\r\n              contain an uppercase letter\r\n            </p>\r\n            <p\r\n              className={\r\n                passwordLowercase\r\n                  ? \"signup__password-box--fail\"\r\n                  : \"signup__password-box--checked\"\r\n              }\r\n            >\r\n              contain an lowercase letter\r\n            </p>\r\n            <p\r\n              className={\r\n                passwordNumber\r\n                  ? \"signup__password-box--fail\"\r\n                  : \"signup__password-box--checked\"\r\n              }\r\n            >\r\n              contain a number\r\n            </p>\r\n            <p\r\n              className={\r\n                passwordLength\r\n                  ? \"signup__password-box--fail\"\r\n                  : \"signup__password-box--checked\"\r\n              }\r\n            >\r\n              be at least 6 characters long\r\n            </p>\r\n          </div>\r\n          <input\r\n            className=\"login-screen__form--submit-btn\"\r\n            type=\"submit\"\r\n            value=\"Register\"\r\n          />\r\n        </form>\r\n\r\n        <Link\r\n          className=\"login-screen__create-account-link\"\r\n          to={redirect ? \"/login?redirect=${redirect}\" : \"/login\"}\r\n        >\r\n          Have an account? Log in here.\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\shipping-screen\\ShippingScreen.js",["198","199"],"import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport \"./ShippingScreen.scss\";\r\nimport { getUserAddresses } from \"../../redux/user/user.actions.js\";\r\nimport AddAddress from \"../../components/add-address/AddAddress\";\r\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport CheckoutSteps from \"../../components/checkout-steps/CheckoutSteps\";\r\nimport { addOrderAddress } from \"../../redux/order/order.actions.js\";\r\nimport { AiOutlineDoubleRight } from \"react-icons/ai\";\r\nimport AddressEdit from \"../address-edit/AddressEdit.js\";\r\nimport { IoMdArrowDropdown } from \"react-icons/io\";\r\nimport { IoMdArrowDropup } from \"react-icons/io\";\r\n\r\n//!=======================================================\r\nconst ShippingScreen = () => {\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const dispatch = useDispatch();\r\n\r\n  const [addAddressShow, setAddAddressShow] = useState(false);\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { user } = userDetails;\r\n\r\n  const userAddresses = useSelector((state) => state.userAddresses);\r\n  const { addresses } = userAddresses;\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/login\");\r\n    } else {\r\n      dispatch(getUserAddresses());\r\n    }\r\n  }, [history, userInfo, user, dispatch]);\r\n\r\n  const deleteAddressHandler = (id) => {\r\n    const deleteAddress = async () => {\r\n      try {\r\n        const config = {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${userInfo.token}`,\r\n          },\r\n        };\r\n        await axios.delete(`/api/users/profile/addresses/${id}`, config);\r\n\r\n        dispatch(getUserAddresses());\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    deleteAddress();\r\n  };\r\n\r\n  const handleSubmit = (address) => {\r\n    dispatch(addOrderAddress(address));\r\n    history.push(\"/payment\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"shipping-screen shipping-section\">\r\n      <CheckoutSteps />\r\n      <div>\r\n        <h1 className=\"heading-1  mt-sm mb-sm\">Chose a delivery address</h1>\r\n        <div className=\"shipping-screen__address-container\">\r\n          {addresses\r\n            ? addresses.map((address) => (\r\n                <div key={address._id} className=\"shipping-screen__address\">\r\n                  <address\r\n                    style={{\r\n                      display: \"flex\",\r\n                      flexDirection: \"column\",\r\n                      alignItems: \"center\",\r\n                      marginBottom: \"2rem\",\r\n                    }}\r\n                  >\r\n                    <p className=\"profile-addresses__text\">\r\n                      <strong>{address.fullName}</strong>\r\n                    </p>\r\n                    <p className=\"profile-addresses__text\">{address.line1}</p>\r\n                    <p className=\"profile-addresses__text\">{address.line2}</p>\r\n                    <p className=\"profile-addresses__text\">\r\n                      {address.city} , {address.stateProvinceRegion} ,{\" \"}\r\n                      {address.postalCode}\r\n                    </p>\r\n\r\n                    <p className=\"profile-addresses__text\">{address.country}</p>\r\n                  </address>\r\n                  <button\r\n                    onClick={() => handleSubmit(address)}\r\n                    className=\"shipping-screen__ship-btn\"\r\n                  >\r\n                    Deliver to this address{\" \"}\r\n                    <AiOutlineDoubleRight className=\"payment-screen__arrows\" />{\" \"}\r\n                  </button>\r\n                  <div className=\"shipping-screen__delete-edit-container mt-xs mb-xs\">\r\n                    <AddressEdit address={address} />\r\n                    <span\r\n                      onClick={() => {\r\n                        deleteAddressHandler(address._id);\r\n                      }}\r\n                      className=\"shipping-screen--action shipping-screen--action--delete\"\r\n                    >\r\n                      Delete\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              ))\r\n            : \"\"}\r\n        </div>\r\n\r\n        <div className=\"line-break\" />\r\n        <h2\r\n          onClick={() => setAddAddressShow(!addAddressShow)}\r\n          className=\"heading-2 shipping-screen__add-address mb-sm\"\r\n        >\r\n          Add new address&nbsp;\r\n          {addAddressShow ? <IoMdArrowDropup /> : <IoMdArrowDropdown />}\r\n        </h2>\r\n        {addAddressShow ? <AddAddress /> : \"\"}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ShippingScreen;\r\n","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\profile\\ProfileScreen.js",["200"],"import React from \"react\";\r\nimport \"./ProfileScreen.scss\";\r\nimport { Route } from \"react-router-dom\";\r\nimport ProfileSidebar from \"../../components/profile-sidebar/ProfileSidebar.js\";\r\nimport YourInfo from \"../profile-info/YourInfo.js\";\r\nimport ProfileAddresses from \"../profile-addresses/ProfileAddresses.js\";\r\nimport Checkout from \"../checkout/Checkout.js\";\r\n\r\n//todo ADD GSAP SCROLL TO MAKE LEFT MENU STICKY\r\nimport gsap from \"gsap\";\r\nimport AddressEdit from \"../address-edit/AddressEdit\";\r\nimport FavoriteScreen from \"../profile-favorite/FavoriteScreen\";\r\n\r\n//!=================================================================\r\nconst ProfileScreen = () => {\r\n  return (\r\n    <div className=\"profile-screen\">\r\n      <ProfileSidebar />\r\n      <div className=\"profile-screen__right\">\r\n        <Route exact path=\"/profile/info\" component={YourInfo} />\r\n        <Route exact path=\"/profile/addresses\" component={ProfileAddresses} />\r\n        <Route exact path=\"/profile/checkout/:id?\" component={Checkout} />{\" \"}\r\n        <Route exact path=\"/profile/addresses/:id\" component={AddressEdit} />{\" \"}\r\n        <Route exact path=\"/profile/favorites\" component={FavoriteScreen} />{\" \"}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileScreen;\r\n","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\redux\\cart\\cart.constants.js",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\redux\\product\\product.constants.js",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\redux\\order\\order.constants.js",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\redux\\user\\user.constants.js",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\footer\\Footer.js",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\header\\Header.js",["201"],"import React from \"react\";\r\nimport \"./Header.scss\";\r\nimport { GiTechnoHeart } from \"react-icons/gi\";\r\nimport { TiShoppingCart, TiUserOutline } from \"react-icons/ti\";\r\nimport { FaHeart } from \"react-icons/fa\";\r\nimport { IoMdArrowDropdown } from \"react-icons/io\";\r\n\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport CartDropdown from \"../cart-dropdown/CartDropdown.js\";\r\nimport { toggleCartShow } from \"../../redux/cart/cart.actions.js\";\r\nimport UserDropdown from \"../user-menu-dropdown/UserDropdown.js\";\r\nimport { toggleUserMenuShow } from \"../../redux/user/user.actions.js\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\n//!==============================================================\r\n\r\nconst Header = () => {\r\n  const location = useLocation();\r\n  const { pathname } = location;\r\n\r\n  const dispatch = useDispatch();\r\n  const cartToggle = useSelector((state) => state.cartToggle.showCart);\r\n  const cartItems = useSelector((state) => state.cart);\r\n  const { loading, cartProducts } = cartItems;\r\n  const cartItemsNumber = cartProducts.reduce(\r\n    (accum, cartItem) => accum + cartItem.quantity,\r\n    0\r\n  );\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const dropdownShow = useSelector((state) => state.showUserMenu);\r\n  const { showUserMenu } = dropdownShow;\r\n\r\n  return (\r\n    <>\r\n      {\" \"}\r\n      {pathname === \"/shipping\" ||\r\n      pathname === \"/payment\" ||\r\n      pathname === \"/complete-order\" ? (\r\n        \"\"\r\n      ) : (\r\n        <header className=\"header\">\r\n          <nav className=\"nav\">\r\n            <div className=\"nav__logo-container\">\r\n              <GiTechnoHeart className=\"nav__logo\" />{\" \"}\r\n              <Link to=\"/\">\r\n                <h2 className=\"nav__title\">Cyber Heart</h2>\r\n              </Link>\r\n            </div>\r\n            <div className=\"nav__links-container\">\r\n              <NavLink\r\n                activeClassName=\"nav__link--active\"\r\n                className=\"nav__link\"\r\n                to=\"/shop\"\r\n              >\r\n                SHOP\r\n              </NavLink>\r\n            </div>\r\n            <div className=\"nav__icons-container\">\r\n              <NavLink\r\n                activeClassName=\"nav__icon nav__icon--heart--active\"\r\n                className=\"nav__icon nav__icon--heart\"\r\n                to=\"/profile/favorites\"\r\n              >\r\n                {\" \"}\r\n                <FaHeart />\r\n              </NavLink>\r\n              <div\r\n                onClick={() => dispatch(toggleCartShow())}\r\n                className=\"nav__icon nav__icon--cart\"\r\n              >\r\n                {\" \"}\r\n                <TiShoppingCart />\r\n                <span className=\"nav__cart-items-number\">\r\n                  {cartItemsNumber}\r\n                </span>\r\n              </div>\r\n              {cartToggle ? <CartDropdown /> : null}\r\n              {userInfo ? (\r\n                <>\r\n                  {\" \"}\r\n                  <span\r\n                    className=\"nav__welcome-message\"\r\n                    onClick={() => dispatch(toggleUserMenuShow())}\r\n                  >\r\n                    Your menu &nbsp;\r\n                    <IoMdArrowDropdown\r\n                      style={{ fontSize: \"2rem\" }}\r\n                      className={\r\n                        showUserMenu\r\n                          ? \"dropdown-arrow-class\"\r\n                          : \"dropdown-revert\"\r\n                      }\r\n                    />\r\n                  </span>\r\n                  {showUserMenu ? <UserDropdown /> : null}\r\n                </>\r\n              ) : (\r\n                <Link className=\"nav__icon\" to=\"/login\">\r\n                  {\" \"}\r\n                  <TiUserOutline />\r\n                </Link>\r\n              )}\r\n            </div>\r\n          </nav>\r\n        </header>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\home-screen\\HomeScreen.js",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\product-screen\\ProductScreen.js",["202","203"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport StarRatings from \"react-star-ratings\";\r\nimport { FaHeart } from \"react-icons/fa\";\r\nimport \"./ProductScreen.scss\";\r\nimport { TiShoppingCart } from \"react-icons/ti\";\r\nimport { AiOutlineCheckCircle, AiOutlineCloseCircle } from \"react-icons/ai\";\r\nimport axios from \"axios\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport LoaderProduct from \"../../components/loader-product/LoaderProduct.js\";\r\nimport { addToCart, getCartProducts } from \"../../redux/cart/cart.actions.js\";\r\nimport { listFavoriteProducts } from \"../../redux/user/user.actions.js\";\r\nimport ActionShow from \"../../components/action-show/ActionShow.js\";\r\n//!==================================================================\r\n\r\nconst ProductScreen = ({ match }) => {\r\n  const history = useHistory();\r\n  const [like, setLike] = useState(false);\r\n  const [product, setProduct] = useState({ reviews: [], likedBy: [] });\r\n  const [loading, setLoading] = useState(true);\r\n  const [qty, setQty] = useState(1);\r\n  const [toCart, setToCart] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  //! Getting the state with redux hooks ============================\r\n\r\n  //?================================================================\r\n  const favoriteProductsList = useSelector(\r\n    (state) => state.userFavoriteProducts\r\n  );\r\n  const { userFavoriteProducts } = favoriteProductsList;\r\n  const isFavorite = userFavoriteProducts.find(\r\n    (favoriteProduct) => favoriteProduct._id == product._id\r\n  );\r\n  //! Get the product by id from the API=============================\r\n  useEffect(async () => {\r\n    const { data } = await axios.get(`/api/products/${match.params.id}`);\r\n    setProduct(data);\r\n    setLoading(false);\r\n\r\n    if (isFavorite) {\r\n      setLike(true);\r\n    } else {\r\n      setLike(false);\r\n    }\r\n    return () => clearTimeout();\r\n  }, [match, isFavorite]);\r\n  //?==================================================================\r\n  //!Handlers =========================================================\r\n  const addToCartHandler = () => {\r\n    dispatch(addToCart(match.params.id, Number(qty)));\r\n    dispatch(getCartProducts());\r\n    setToCart(true);\r\n    setTimeout(() => {\r\n      setToCart(false);\r\n    }, 3100);\r\n  };\r\n\r\n  const handleAddUserToLikedArrayAndProductToFavorites = async (id) => {\r\n    try {\r\n      if (!userInfo) {\r\n        history.push(\"/login\");\r\n      } else {\r\n        const config = {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${userInfo.token}`,\r\n          },\r\n        };\r\n        await axios.put(`/api/products/`, { _id: id }, config);\r\n        await axios.post(`/api/users/profile/favorites`, { _id: id }, config);\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const removeFromFavoriteHandler = (id) => {\r\n    const deleteProduct = async () => {\r\n      try {\r\n        const config = {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${userInfo.token}`,\r\n          },\r\n        };\r\n        await axios.delete(`/api/users/profile/favorites/${id}`, config);\r\n\r\n        dispatch(listFavoriteProducts());\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    deleteProduct();\r\n  };\r\n\r\n  const likedByNumber = product.likedBy.length;\r\n\r\n  //?==================================================================\r\n  return (\r\n    <>\r\n      {toCart ? <ActionShow /> : null}\r\n      <div className=\" top-links mb-sm\">\r\n        {\" \"}\r\n        <Link className=\"product-screen__link\" to=\"/\">\r\n          &#10092;&#10092; Home\r\n        </Link>\r\n        <Link className=\"product-screen__link\" to=\"/shop\">\r\n          &#10092;&#10092; Shop\r\n        </Link>\r\n      </div>\r\n      {loading ? (\r\n        <LoaderProduct />\r\n      ) : (\r\n        <div className=\"product-screen__body\">\r\n          <h1 className=\"product-screen__name\">{product.name}</h1>\r\n          <div className=\"product-screen__image-wrapper\">\r\n            <img\r\n              className=\"product-screen__image\"\r\n              src={product.image}\r\n              alt=\"product\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"product-screen__price\">\r\n            <h4 className=\" product-screen__price--title\">PRICE</h4>\r\n            <span className=\" product-screen__price--value\">\r\n              $ {product.price}\r\n            </span>\r\n            {product.countInStock > 0 ? (\r\n              <p className=\"product-screen__stock\">\r\n                <AiOutlineCheckCircle />\r\n                &nbsp;&nbsp;Product is in stock\r\n              </p>\r\n            ) : (\r\n              <p className=\"product-screen__stock product-screen__stock--out\">\r\n                <AiOutlineCloseCircle />\r\n                &nbsp;&nbsp; Product out of stock\r\n              </p>\r\n            )}\r\n\r\n            {product.countInStock > 0 && (\r\n              <div className=\"product-screen__quantity-selector\">\r\n                <form action=\"\">\r\n                  <label\r\n                    className=\"product-screen__quantity-selector--text\"\r\n                    htmlFor=\"quantity\"\r\n                  >\r\n                    Select quantity\r\n                  </label>\r\n                  <select\r\n                    className=\"product-screen__quantity-selector--selection\"\r\n                    value={qty}\r\n                    name=\"quantity\"\r\n                    id=\"quantity\"\r\n                    onChange={(e) => setQty(e.target.value)}\r\n                  >\r\n                    {[...Array(product.countInStock).keys()].map((el) => (\r\n                      <option\r\n                        className=\"product-screen__quantity-selector--option\"\r\n                        key={el + 1}\r\n                        value={el + 1}\r\n                      >\r\n                        {el + 1}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </form>\r\n              </div>\r\n            )}\r\n            {product.countInStock === 0 ? (\r\n              <button className=\"product-screen__button-disabled\">\r\n                {\" \"}\r\n                <TiShoppingCart className=\"product-screen__button--icon\" /> out\r\n                of stock{\" \"}\r\n              </button>\r\n            ) : (\r\n              <button\r\n                onClick={async () => addToCartHandler()}\r\n                className=\"product-screen__button\"\r\n              >\r\n                <TiShoppingCart className=\"product-screen__button--icon\" /> Add\r\n                to cart\r\n              </button>\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"product-screen__rating\">\r\n            <span className=\"product__rating-text\">\r\n              User Rating:&nbsp;&nbsp;&nbsp;\r\n              <strong>{product.rating}</strong> ({product.numReviews} reviews)\r\n            </span>\r\n            <StarRatings\r\n              className=\"product-screen__rating-stars\"\r\n              rating={product.rating}\r\n              starDimension=\"2rem\"\r\n              starSpacing=\".25rem\"\r\n              starRatedColor=\"rgb(255, 180, 3)\"\r\n            />\r\n          </div>\r\n          <div className=\"product-screen__add-favorite\">\r\n            {like ? (\r\n              <div className=\"product-screen__add-favorite--flex\">\r\n                <FaHeart\r\n                  onClick={async () => {\r\n                    await removeFromFavoriteHandler(product._id);\r\n                    await dispatch(listFavoriteProducts());\r\n                  }}\r\n                  className=\"product-screen__heart product-screen__heart--selected\"\r\n                />\r\n                <span className=\"product-screen__add-favorite--text ml-sm\">\r\n                  FAVORITE PRODUCT\r\n                </span>{\" \"}\r\n              </div>\r\n            ) : (\r\n              <div className=\"product-screen__add-favorite--flex\">\r\n                <FaHeart\r\n                  onClick={async () => {\r\n                    await handleAddUserToLikedArrayAndProductToFavorites(\r\n                      product._id\r\n                    );\r\n                    await dispatch(listFavoriteProducts());\r\n                  }}\r\n                  className=\"product-screen__heart\"\r\n                />\r\n                <span className=\"product-screen__add-favorite--text ml-sm\">\r\n                  ADD TO FAVORITES\r\n                </span>\r\n              </div>\r\n            )}\r\n            <span className=\"product-screen__add-favorite--favorite-by\">\r\n              {\" \"}\r\n              ( Favorite by {likedByNumber}{\" \"}\r\n              {likedByNumber > 1 ? \"users\" : \"user\"} )\r\n            </span>\r\n          </div>\r\n          <div className=\"product-screen__details\">\r\n            <h3 className=\"heading-3 product-screen__product-description-title\">\r\n              {\" \"}\r\n              <strong>PRODUCT DESCRIPTION</strong>{\" \"}\r\n            </h3>\r\n            <p className=\"product-screen__details--text\">\r\n              {product.description}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductScreen;\r\n","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\complete-order\\CompleteOrder.js",["204","205"],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\payment\\PaymentScreen.js",["206","207","208","209"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./PaymentScreen.scss\";\r\nimport CheckoutSteps from \"../../components/checkout-steps/CheckoutSteps\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { saveOrderPaymentMethod } from \"../../redux/order/order.actions.js\";\r\nimport { GrPaypal, GrCreditCard, GrStripe } from \"react-icons/gr\";\r\nimport { AiOutlineDoubleRight } from \"react-icons/ai\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { FaDhl } from \"react-icons/fa\";\r\nimport { MdLocalShipping } from \"react-icons/md\";\r\nimport { ReactComponent as DHL } from \"../../assets/dhl-express.svg\";\r\nimport { ReactComponent as Correos } from \"../../assets/correos.svg\";\r\n//!=======================================================\r\n\r\nconst PaymentScreen = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const orderAddressState = useSelector((state) => state.orderAddress);\r\n  const { orderAddress } = orderAddressState;\r\n\r\n  const orderPaymentMethod = useSelector((state) => state.orderPaymentMethod);\r\n\r\n  useEffect(() => {\r\n    if (!orderAddress.fullName) {\r\n      history.push(\"/shipping\");\r\n    }\r\n  }, [orderAddress, history]);\r\n\r\n  const [paymentMethod, setPaymentMethod] = useState(\"PayPal\");\r\n  const [shippingMethod, setShippingMethod] = useState({\r\n    name: \"DHL Standard Delivery\",\r\n    price: 5.99,\r\n  });\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(saveOrderPaymentMethod(paymentMethod, shippingMethod));\r\n    history.push(\"/complete-order\");\r\n  };\r\n\r\n  const paymentMethodHandler = (e) => setPaymentMethod(e.target.value);\r\n  const shippmentMethodHandler = (e) =>\r\n    setShippingMethod({ price: Number(e.target.value), name: e.target.id });\r\n  return (\r\n    <div className=\"payment-screen shipping-section\">\r\n      <CheckoutSteps />\r\n      <div>\r\n        <h1 className=\"heading-1  mt-sm mb-sm\">Chose a payment method</h1>\r\n        <form onSubmit={handleSubmit}>\r\n          <label className=\"payment-screen__label mb-md\" htmlFor=\"PayPal\">\r\n            <input\r\n              id=\"PayPal\"\r\n              className=\"payment-screen__input mr-md\"\r\n              name=\"paymentmethod\"\r\n              type=\"radio\"\r\n              value=\"PayPal\"\r\n              onChange={paymentMethodHandler}\r\n              defaultChecked\r\n            />\r\n            <GrPaypal className=\"payment-screen__payment-icon mr-sm\" />\r\n            PayPal\r\n          </label>\r\n          <label className=\"payment-screen__label mb-md\" htmlFor=\"CreditCard\">\r\n            <input\r\n              id=\"CreditCard\"\r\n              className=\"payment-screen__input mr-md\"\r\n              name=\"paymentmethod\"\r\n              type=\"radio\"\r\n              value=\"Credit Card\"\r\n              onChange={paymentMethodHandler}\r\n            />\r\n            <GrCreditCard className=\"payment-screen__payment-icon mr-sm\" />{\" \"}\r\n            Credit Card\r\n          </label>\r\n          <label className=\"payment-screen__label mb-md\" htmlFor=\"Stripe\">\r\n            <input\r\n              id=\"Stripe\"\r\n              className=\"payment-screen__input mr-md\"\r\n              name=\"paymentmethod\"\r\n              type=\"radio\"\r\n              value=\"Stripe\"\r\n              onChange={paymentMethodHandler}\r\n            />\r\n            <GrStripe className=\"payment-screen__payment-icon mr-sm\" /> Stripe\r\n          </label>\r\n\r\n          <div className=\"line-break\" />\r\n          <h1 className=\"heading-1  mt-sm mb-sm\">Chose a shipping method</h1>\r\n\r\n          <label className=\"payment-screen__label \" htmlFor=\"DHLStandard\">\r\n            <input\r\n              id=\"DHL Standard Shipping\"\r\n              className=\"payment-screen__input mr-md\"\r\n              name=\"shippingOption\"\r\n              type=\"radio\"\r\n              value={5.99}\r\n              onChange={shippmentMethodHandler}\r\n              defaultChecked\r\n            />\r\n            <DHL\r\n              style={{ width: \"7rem\", height: \"7rem\" }}\r\n              className=\"payment-screen__payment-icon mr-sm\"\r\n            />\r\n            DHL Standard Shipping <strong>&nbsp;&nbsp;( + 5.99 €)</strong>\r\n          </label>\r\n          <label className=\"payment-screen__label \" htmlFor=\"DHL1Day\">\r\n            <input\r\n              id=\"DHL 1 Day Delivery\"\r\n              className=\"payment-screen__input mr-md\"\r\n              name=\"shippingOption\"\r\n              type=\"radio\"\r\n              value={8.99}\r\n              onChange={shippmentMethodHandler}\r\n            />\r\n            <DHL\r\n              style={{ width: \"7rem\", height: \"7rem\" }}\r\n              className=\"payment-screen__payment-icon mr-sm\"\r\n            />\r\n            DHL 1 Day Delivery <strong>&nbsp;&nbsp;( + 8.99 €)</strong>\r\n          </label>\r\n          <label className=\"payment-screen__label mb-md\" htmlFor=\"Correos\">\r\n            <input\r\n              id=\"Correos 3-5 Day Delivery\"\r\n              className=\"payment-screen__input mr-md\"\r\n              name=\"shippingOption\"\r\n              type=\"radio\"\r\n              value={3.99}\r\n              onChange={shippmentMethodHandler}\r\n            />\r\n            <Correos\r\n              style={{ width: \"7rem\", height: \"7rem\" }}\r\n              className=\"payment-screen__payment-icon mr-sm\"\r\n            />\r\n            Correos 3-5 Day Delivery <strong>&nbsp;&nbsp;( + 3.99 €)</strong>\r\n          </label>\r\n          <button className=\"payment-screen__ship-btn\">\r\n            Continue <AiOutlineDoubleRight className=\"payment-screen__arrows\" />{\" \"}\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PaymentScreen;\r\n","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\redux\\user\\user.actions.js",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\redux\\order\\order.actions.js",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\error-message\\ErrorMessage.js",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\address-edit\\AddressEdit.js",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\profile-sidebar\\ProfileSidebar.js",["210"],"import React, { useEffect } from \"react\";\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport \"./ProfileSidebar.scss\";\r\nimport { listFavoriteProducts } from \"../../redux/user/user.actions.js\";\r\n\r\n//!=======================================================================\r\n\r\nfunction ProfileSidebar() {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const favoriteProductsList = useSelector(\r\n    (state) => state.userFavoriteProducts\r\n  );\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const { userFavoriteProducts, loading } = favoriteProductsList;\r\n  const favoriteProductsLength = userFavoriteProducts.length;\r\n\r\n  const cartItems = useSelector((state) => state.cart);\r\n  const { cartProducts } = cartItems;\r\n  const cartItemsNumber = cartProducts.reduce(\r\n    (accum, cartItem) => accum + cartItem.quantity,\r\n    0\r\n  );\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/login\");\r\n    }\r\n    dispatch(listFavoriteProducts());\r\n  }, [history, userInfo, dispatch]);\r\n  return (\r\n    <div className=\"profile-sidebar\">\r\n      <h1 className=\"profile-screen__title\">Your Account</h1>\r\n      <NavLink\r\n        className=\"profile-sidebar__options\"\r\n        activeClassName=\"profile-sidebar__active-link\"\r\n        to=\"/profile/info\"\r\n      >\r\n        {\" \"}\r\n        <p>Your Info</p>{\" \"}\r\n      </NavLink>\r\n\r\n      <NavLink\r\n        className=\"profile-sidebar__options\"\r\n        activeClassName=\"profile-sidebar__active-link\"\r\n        to=\"/profile/addresses\"\r\n      >\r\n        {\" \"}\r\n        <p>Your Addresses</p>{\" \"}\r\n      </NavLink>\r\n\r\n      <NavLink\r\n        className=\"profile-sidebar__options\"\r\n        activeClassName=\"profile-sidebar__active-link\"\r\n        to=\"/profile/favorites\"\r\n      >\r\n        {\" \"}\r\n        <p>\r\n          Your Favorites <i>({favoriteProductsLength} items)</i>{\" \"}\r\n        </p>\r\n      </NavLink>\r\n\r\n      <NavLink\r\n        activeClassName=\"profile-sidebar__active-link\"\r\n        className=\"profile-sidebar__options\"\r\n        to=\"/profile/reviews\"\r\n      >\r\n        {\" \"}\r\n        <p>Reviews</p>{\" \"}\r\n      </NavLink>\r\n\r\n      <NavLink\r\n        className=\"profile-sidebar__options\"\r\n        activeClassName=\"profile-sidebar__active-link\"\r\n        to=\"/profile/messages\"\r\n      >\r\n        {\" \"}\r\n        <p>Messages</p>{\" \"}\r\n      </NavLink>\r\n\r\n      <h1 className=\"profile-screen__title\">Orders</h1>\r\n      <NavLink\r\n        activeClassName=\"profile-sidebar__active-link\"\r\n        to=\"/profile/orders\"\r\n      >\r\n        {\" \"}\r\n        <p className=\"profile-sidebar__options\">Orders & Bills</p>{\" \"}\r\n      </NavLink>\r\n\r\n      <NavLink\r\n        className=\"profile-sidebar__options\"\r\n        activeClassName=\"profile-sidebar__active-link\"\r\n        to=\"/profile/checkout\"\r\n      >\r\n        {\" \"}\r\n        <p>\r\n          Checkout <i>({cartItemsNumber} items)</i>\r\n        </p>{\" \"}\r\n      </NavLink>\r\n\r\n      <NavLink\r\n        className=\"profile-sidebar__options\"\r\n        activeClassName=\"profile-sidebar__active-link\"\r\n        to=\"/profile/returns\"\r\n      >\r\n        {\" \"}\r\n        <p>Item returns</p>{\" \"}\r\n      </NavLink>\r\n\r\n      <NavLink\r\n        activeClassName=\"profile-sidebar__active-link\"\r\n        className=\"profile-sidebar__options\"\r\n        to=\"/profile/warranty\"\r\n      >\r\n        {\" \"}\r\n        <p>Warranty</p>{\" \"}\r\n      </NavLink>\r\n\r\n      <h1 className=\"profile-screen__title\">Payment</h1>\r\n      <NavLink\r\n        activeClassName=\"profile-sidebar__active-link\"\r\n        className=\"profile-sidebar__options\"\r\n        to=\"/profile/cards\"\r\n      >\r\n        {\" \"}\r\n        <p>Your cards</p>{\" \"}\r\n      </NavLink>\r\n\r\n      <NavLink\r\n        className=\"profile-sidebar__options\"\r\n        activeClassName=\"profile-sidebar__active-link\"\r\n        to=\"/profile/payment-methods\"\r\n      >\r\n        {\" \"}\r\n        <p>Other payment methods</p>{\" \"}\r\n      </NavLink>\r\n\r\n      <NavLink\r\n        className=\"profile-sidebar__options\"\r\n        activeClassName=\"profile-sidebar__active-link\"\r\n        to=\"/profile/discounts\"\r\n      >\r\n        {\" \"}\r\n        <p>Discount coupons</p>{\" \"}\r\n      </NavLink>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProfileSidebar;\r\n","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\profile-info\\YourInfo.js",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\checkout\\Checkout.js",["211","212"],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\profile-addresses\\ProfileAddresses.js",["213"],"import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getUserAddresses } from \"../../redux/user/user.actions.js\";\r\nimport \"./ProfileAddresses.scss\";\r\nimport AddressEdit from \"../address-edit/AddressEdit.js\";\r\nimport AddAddress from \"../../components/add-address/AddAddress.js\";\r\nimport axios from \"axios\";\r\n//!=============================================\r\n\r\nconst ProfileAddresses = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const [addAddressToggle, setAddAddressToggle] = useState(false);\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { user } = userDetails;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile);\r\n  const { success } = userUpdateProfile;\r\n\r\n  const userAddresses = useSelector((state) => state.userAddresses);\r\n\r\n  const { addresses } = userAddresses;\r\n\r\n  const handleAddAddress = () => {\r\n    setAddAddressToggle(!addAddressToggle);\r\n  };\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/login\");\r\n    }\r\n    dispatch(getUserAddresses());\r\n  }, [history, userInfo, user, dispatch]);\r\n\r\n  const deleteAddressHandler = (id) => {\r\n    const deleteAddress = async () => {\r\n      try {\r\n        const config = {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${userInfo.token}`,\r\n          },\r\n        };\r\n        await axios.delete(`/api/users/profile/addresses/${id}`, config);\r\n\r\n        dispatch(getUserAddresses());\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    deleteAddress();\r\n  };\r\n\r\n  return (\r\n    <div className=\"profile-addresses\">\r\n      <h1 className=\"heading-1 \">YOUR ADDRESSES</h1>\r\n      <div className=\"profile-addresses__grid\">\r\n        {addresses\r\n          ? addresses.map((address, idx) => (\r\n              <div key={address._id} className=\"profile-addresses__wrapper\">\r\n                <div className=\"profile-addresses__address\">\r\n                  <h3 className=\"profile-addresses__address__title\">\r\n                    Address {idx + 1}\r\n                  </h3>\r\n\r\n                  <address>\r\n                    <p className=\"profile-addresses__text\">\r\n                      <strong>{address.fullName}</strong>\r\n                    </p>\r\n                    <p className=\"profile-addresses__text\">{address.line1}</p>\r\n                    <p className=\"profile-addresses__text\">{address.line2}</p>\r\n                    <p className=\"profile-addresses__text\">\r\n                      {address.city} , {address.stateProvinceRegion} ,{\" \"}\r\n                      {address.postalCode}\r\n                    </p>\r\n\r\n                    <p className=\"profile-addresses__text\">{address.country}</p>\r\n                    <p className=\"profile-addresses__text\">\r\n                      {address.phoneNumber}\r\n                    </p>\r\n                  </address>\r\n                  <div className=\"profile-addresses__address__bottom-links\">\r\n                    <AddressEdit address={address} />\r\n                    <span\r\n                      onClick={() => {\r\n                        deleteAddressHandler(address._id);\r\n                      }}\r\n                      className=\"profile-addresses__address__bottom-links--action \"\r\n                    >\r\n                      Delete\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))\r\n          : \"\"}\r\n        <address\r\n          onClick={handleAddAddress}\r\n          className=\"profile-addresses__address profile-addresses__add-address\"\r\n        >\r\n          <span style={{ fontSize: \"8rem\" }}>&#9783;</span>\r\n          Add new address\r\n        </address>\r\n      </div>\r\n      <div className=\"line-break\" />\r\n\r\n      {addAddressToggle ? <AddAddress /> : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileAddresses;\r\n","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\redux\\product\\product.actions.js",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\utils.js",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\cart-dropdown\\CartDropdown.js",["214"],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\user-menu-dropdown\\UserDropdown.js",["215"],"import React from \"react\";\r\nimport \"./UserDropdown.scss\";\r\nimport { FiLogOut } from \"react-icons/fi\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { logout } from \"../../redux/user/user.actions.js\";\r\nimport { toggleUserMenuShow } from \"../../redux/user/user.actions.js\";\r\nimport { useHistory } from \"react-router-dom\";\r\n//!==================================================\r\nconst UserDropdown = () => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  const logoutHandler = () => {\r\n    dispatch(logout());\r\n    // history.push(\"/\");\r\n  };\r\n  const menuToggler = () => {\r\n    dispatch(toggleUserMenuShow());\r\n  };\r\n  return (\r\n    <div className=\"user-dropdown\">\r\n      <ul>\r\n        <li className=\"user-dropdown__list-item\">\r\n          <Link onClick={menuToggler} to=\"/profile/info\">\r\n            Profile\r\n          </Link>\r\n        </li>\r\n\r\n        <li onClick={menuToggler} className=\"user-dropdown__list-item\">\r\n          My orders\r\n        </li>\r\n        <div />\r\n        <li\r\n          onClick={() => {\r\n            logoutHandler();\r\n            menuToggler();\r\n          }}\r\n          style={{\r\n            borderTop: \"1px solid $color-grey-light-1-2\",\r\n            paddingTop: \".5rem\",\r\n          }}\r\n          className=\"user-dropdown__list-item\"\r\n        >\r\n          Log Out&nbsp; <FiLogOut />\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserDropdown;\r\n","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\loader\\Loader.js",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\loader-product\\LoaderProduct.js",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\action-show\\ActionShow.js",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\checkout-steps\\CheckoutSteps.js",["216","217"],"import React from \"react\";\r\nimport \"./CheckoutStepts.scss\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nimport { AiOutlineDoubleRight } from \"react-icons/ai\";\r\nimport { GiTechnoHeart } from \"react-icons/gi\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n//!=====================================================================\r\nconst CheckoutSteps = ({ active3 }) => {\r\n  const history = useHistory();\r\n  const orderAddressState = useSelector((state) => state.orderAddress);\r\n  const { orderAddress } = orderAddressState;\r\n\r\n  const orderPaymentMethod = useSelector((state) => state.orderPaymentMethod);\r\n  const selectedShipment = orderAddress.fullName ? \"selected\" : \"\";\r\n  const selectedPayment =\r\n    orderPaymentMethod.paymentMethod !== \"\" ? \"selected\" : \"\";\r\n  return (\r\n    <>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n        }}\r\n        className=\"nav__logo-container mb-sm\"\r\n      >\r\n        <GiTechnoHeart className=\"nav__logo\" />{\" \"}\r\n        <Link to=\"/\">\r\n          <h2 className=\"nav__title\">Cyber Heart</h2>\r\n        </Link>\r\n      </div>\r\n      <Link to=\"/\">\r\n        <h2 className=\"nav__title\"></h2>\r\n      </Link>\r\n      <div className=\"checkout-steps\">\r\n        <div className=\"checkout-steps__progress\">\r\n          <span\r\n            className={`checkout-steps__number checkout-steps__number--${selectedShipment}`}\r\n          >\r\n            1\r\n          </span>{\" \"}\r\n          <p\r\n            onClick={() => history.push(\"/shipping\")}\r\n            className=\"checkout-steps__container\"\r\n          >\r\n            <span\r\n              className={`checkout-steps--text checkout-steps--text--${selectedShipment} `}\r\n            >\r\n              Address\r\n            </span>\r\n          </p>\r\n          <AiOutlineDoubleRight\r\n            className={`checkout-steps--arrows checkout-steps--arrows--${selectedShipment}  checkout-steps--arrows--animate`}\r\n          />\r\n        </div>\r\n        <div className=\"checkout-steps__progress\">\r\n          <span\r\n            className={`checkout-steps__number  checkout-steps__number--${selectedPayment} `}\r\n          >\r\n            2\r\n          </span>{\" \"}\r\n          <p\r\n            onClick={() => history.push(\"/payment\")}\r\n            className=\"checkout-steps__container\"\r\n          >\r\n            <span\r\n              className={`checkout-steps--text checkout-steps--text--${selectedPayment} `}\r\n            >\r\n              Payment & Shipping\r\n            </span>\r\n          </p>\r\n          <AiOutlineDoubleRight\r\n            className={`checkout-steps--arrows checkout-steps--arrows--${selectedPayment} checkout-steps--arrows--animate`}\r\n          />\r\n        </div>\r\n        <div className=\"checkout-steps__progress\">\r\n          <span\r\n            className={`checkout-steps__number checkout-steps__number--${active3}`}\r\n          >\r\n            3\r\n          </span>\r\n          <p\r\n            onClick={() => history.push(\"/complete-order\")}\r\n            className=\"checkout-steps__container\"\r\n          >\r\n            <span\r\n              className={`checkout-steps--text checkout-steps--text--${active3} `}\r\n            >\r\n              Complete Order\r\n            </span>\r\n          </p>\r\n          {/* Empty div for flex space */}\r\n          <div></div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CheckoutSteps;\r\n","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\add-address\\AddAddress.js",["218","219","220","221","222"],"import React, { useState } from \"react\";\r\nimport \"./AddAddress.scss\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport ErrorMessage from \"../error-message/ErrorMessage.js\";\r\nimport { getUserAddresses, addAddress } from \"../../redux/user/user.actions.js\";\r\n//!=============================================================================\r\nconst AddAddress = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [fullName, setFullName] = useState(\"\");\r\n  const [country, setCountry] = useState(\"\");\r\n  const [line1, setLine1] = useState(\"\");\r\n  const [line2, setLine2] = useState(\"\");\r\n  const [city, setCity] = useState(\"\");\r\n  const [stateProvinceRegion, setStateProvinceRegion] = useState(\"\");\r\n  const [postalCode, setPostalCode] = useState(\"\");\r\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\r\n\r\n  const [successColor, setSuccessColor] = useState(\"alert\");\r\n  const [error, setError] = useState(false);\r\n  const [message, setMessage] = useState(null);\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { user } = userDetails;\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    window.location.reload();\r\n    setMessage(\"Address added successfully.\");\r\n    setSuccessColor(\"success\");\r\n    dispatch(\r\n      addAddress({\r\n        id: user._id,\r\n        fullName,\r\n        country,\r\n        line1,\r\n        line2,\r\n        city,\r\n        stateProvinceRegion,\r\n        postalCode,\r\n        phoneNumber,\r\n      })\r\n    );\r\n    dispatch(getUserAddresses());\r\n    setFullName(\"\");\r\n    setCountry(\"\");\r\n    setLine1(\"\");\r\n    setLine2(\"\");\r\n    setCity(\"\");\r\n    setStateProvinceRegion(\"\");\r\n    setPostalCode(\"\");\r\n    setPhoneNumber(\"\");\r\n  };\r\n  return (\r\n    <>\r\n      <form onSubmit={handleSubmit} className=\"add-address__form-container\">\r\n        <label htmlFor=\"fullName\" className=\"add-address__label\">\r\n          <strong>Full name</strong>\r\n        </label>\r\n        <input\r\n          required\r\n          name=\"line1\"\r\n          onChange={(e) => setFullName(e.target.value)}\r\n          value={fullName}\r\n          type=\"text\"\r\n          className=\"add-address__input\"\r\n        />\r\n        <label htmlFor=\"line1\" className=\"add-address__label\">\r\n          <strong>Address line 1</strong>\r\n        </label>\r\n        <input\r\n          required\r\n          name=\"line1\"\r\n          onChange={(e) => setLine1(e.target.value)}\r\n          value={line1}\r\n          type=\"text\"\r\n          className=\"add-address__input\"\r\n        />\r\n\r\n        <label htmlFor=\"line2\" className=\"add-address__label\">\r\n          <strong>Address line 2</strong>\r\n        </label>\r\n        <input\r\n          required\r\n          name=\"line2\"\r\n          onChange={(e) => setLine2(e.target.value)}\r\n          value={line2}\r\n          type=\"text\"\r\n          className=\"add-address__input\"\r\n        />\r\n        <label htmlFor=\"city\" className=\"add-address__label\">\r\n          <strong>City</strong>\r\n        </label>\r\n        <input\r\n          required\r\n          name=\"city\"\r\n          onChange={(e) => setCity(e.target.value)}\r\n          value={city}\r\n          className=\"add-address__input\"\r\n        />\r\n        <label htmlFor=\"stateProvinceRegion\" className=\"add-address__label\">\r\n          <strong>State/Province/Region</strong>\r\n        </label>\r\n        <input\r\n          required\r\n          name=\"stateProvinceRegion\"\r\n          onChange={(e) => setStateProvinceRegion(e.target.value)}\r\n          value={stateProvinceRegion}\r\n          className=\"add-address__input\"\r\n        />\r\n        <label htmlFor=\"postalCode\" className=\"add-address__label\">\r\n          <strong>Postal Code</strong>\r\n        </label>\r\n        <input\r\n          required\r\n          name=\"postalCode\"\r\n          onChange={(e) => setPostalCode(e.target.value)}\r\n          value={postalCode}\r\n          className=\"add-address__input\"\r\n        />\r\n        <label htmlFor=\"country\" className=\"add-address__label\">\r\n          <strong>Country</strong>\r\n        </label>\r\n        <input\r\n          required\r\n          name=\"country\"\r\n          onChange={(e) => setCountry(e.target.value)}\r\n          value={country}\r\n          className=\"add-address__input\"\r\n        />\r\n        <label htmlFor=\"phoneNumber\" className=\"add-address__label\">\r\n          <strong>Phone Number</strong>\r\n        </label>\r\n        <input\r\n          required\r\n          name=\"phoneNumber\"\r\n          onChange={(e) => setPhoneNumber(e.target.value)}\r\n          value={phoneNumber}\r\n          className=\"add-address__input\"\r\n        />\r\n        <input\r\n          required\r\n          className=\"add-address__input-btn\"\r\n          type=\"submit\"\r\n          value=\"Add new Address\"\r\n        />\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddAddress;\r\n","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\profile-favorite\\FavoriteScreen.js",["223","224","225"],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\product\\Product.js",["226","227","228"],"import React, { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport \"./Product.scss\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport StarRatings from \"react-star-ratings\";\r\n\r\nimport { FaHeart } from \"react-icons/fa\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { listFavoriteProducts } from \"../../redux/user/user.actions.js\";\r\nimport { ErrorMessage } from \"../error-message/ErrorMessage.js\";\r\nimport axios from \"axios\";\r\n//!==================================================================\r\nconst Product = ({ product }) => {\r\n  const dispatch = useDispatch();\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const history = useHistory();\r\n\r\n  const [like, setLike] = useState(false);\r\n\r\n  const favoriteProductsList = useSelector(\r\n    (state) => state.userFavoriteProducts\r\n  );\r\n  const { userFavoriteProducts } = favoriteProductsList;\r\n  const isFavorite = userFavoriteProducts.find(\r\n    (favoriteProduct) => favoriteProduct._id == product._id\r\n  );\r\n  useEffect(() => {\r\n    if (isFavorite) {\r\n      setLike(true);\r\n    } else {\r\n      setLike(false);\r\n    }\r\n  }, [isFavorite]);\r\n\r\n  const handleAddUserToLikedArrayAndProductToFavorites = async (id) => {\r\n    try {\r\n      if (!userInfo) {\r\n        history.push(\"/login\");\r\n      } else {\r\n        const config = {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${userInfo.token}`,\r\n          },\r\n        };\r\n        await axios.put(`/api/products/`, { _id: id }, config);\r\n        await axios.post(`/api/users/profile/favorites`, { _id: id }, config);\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const removeFromFavoriteHandler = (id) => {\r\n    const deleteProduct = async () => {\r\n      try {\r\n        const config = {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${userInfo.token}`,\r\n          },\r\n        };\r\n        await axios.delete(`/api/users/profile/favorites/${id}`, config);\r\n\r\n        dispatch(listFavoriteProducts());\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    deleteProduct();\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={\r\n        product.countInStock === 0 ? \"product out-of-stock\" : \"product\"\r\n      }\r\n    >\r\n      <Link className=\"product__card\" to={`/product/${product._id}`}>\r\n        <div className=\"product__image-container\">\r\n          <img className=\"product__image\" src={product.image} alt=\"\" />\r\n        </div>\r\n        <h3 className=\"heading-4 heading-4--center product__title\">\r\n          {product.name}\r\n        </h3>\r\n        <div className=\"product__center\">\r\n          <span className=\"product__rating-text\">Rating:</span>\r\n          <div className=\"product__rating-stars\">\r\n            <span className=\"product__rating-text\">\r\n              <strong>{product.rating}</strong> ({product.numReviews})\r\n            </span>\r\n            <StarRatings\r\n              rating={product.rating}\r\n              starDimension=\"1.2rem\"\r\n              starSpacing=\".25rem\"\r\n              starRatedColor=\"rgb(255, 180, 3)\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"product__bottom\">\r\n          <span className=\"product__price-text\">Price: </span>\r\n          <span className=\"product__price-text\">\r\n            <strong>${product.price}</strong>\r\n          </span>\r\n        </div>\r\n      </Link>\r\n      {like ? (\r\n        <FaHeart\r\n          onClick={async () => {\r\n            await removeFromFavoriteHandler(product._id);\r\n            await dispatch(listFavoriteProducts());\r\n          }}\r\n          className=\"product__heart product__heart--selected\"\r\n        />\r\n      ) : (\r\n        <FaHeart\r\n          onClick={async () => {\r\n            await handleAddUserToLikedArrayAndProductToFavorites(product._id);\r\n            await dispatch(listFavoriteProducts());\r\n          }}\r\n          className=\"product__heart\"\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Product;\r\n",{"ruleId":"229","replacedBy":"230"},{"ruleId":"231","replacedBy":"232"},{"ruleId":"233","severity":1,"message":"234","line":18,"column":3,"nodeType":"235","messageId":"236","endLine":18,"endColumn":25},{"ruleId":"233","severity":1,"message":"237","line":1,"column":17,"nodeType":"235","messageId":"236","endLine":1,"endColumn":26},{"ruleId":"233","severity":1,"message":"238","line":25,"column":11,"nodeType":"235","messageId":"236","endLine":25,"endColumn":19},{"ruleId":"239","severity":1,"message":"240","line":71,"column":26,"nodeType":"241","messageId":"242","endLine":71,"endColumn":58},{"ruleId":"233","severity":1,"message":"243","line":18,"column":11,"nodeType":"235","messageId":"236","endLine":18,"endColumn":18},{"ruleId":"244","severity":1,"message":"245","line":24,"column":6,"nodeType":"246","endLine":24,"endColumn":26,"suggestions":"247"},{"ruleId":"239","severity":1,"message":"240","line":164,"column":26,"nodeType":"241","messageId":"242","endLine":164,"endColumn":55},{"ruleId":"233","severity":1,"message":"248","line":6,"column":10,"nodeType":"235","messageId":"236","endLine":6,"endColumn":14},{"ruleId":"233","severity":1,"message":"249","line":18,"column":9,"nodeType":"235","messageId":"236","endLine":18,"endColumn":17},{"ruleId":"233","severity":1,"message":"250","line":10,"column":8,"nodeType":"235","messageId":"236","endLine":10,"endColumn":12},{"ruleId":"233","severity":1,"message":"243","line":25,"column":11,"nodeType":"235","messageId":"236","endLine":25,"endColumn":18},{"ruleId":"251","severity":1,"message":"252","line":37,"column":46,"nodeType":"253","messageId":"254","endLine":37,"endColumn":48},{"ruleId":"244","severity":1,"message":"255","line":40,"column":13,"nodeType":"256","endLine":51,"endColumn":4},{"ruleId":"233","severity":1,"message":"257","line":1,"column":17,"nodeType":"235","messageId":"236","endLine":1,"endColumn":25},{"ruleId":"233","severity":1,"message":"258","line":11,"column":3,"nodeType":"235","messageId":"236","endLine":11,"endColumn":20},{"ruleId":"233","severity":1,"message":"248","line":9,"column":10,"nodeType":"235","messageId":"236","endLine":9,"endColumn":14},{"ruleId":"233","severity":1,"message":"259","line":10,"column":10,"nodeType":"235","messageId":"236","endLine":10,"endColumn":15},{"ruleId":"233","severity":1,"message":"260","line":11,"column":10,"nodeType":"235","messageId":"236","endLine":11,"endColumn":25},{"ruleId":"233","severity":1,"message":"261","line":23,"column":9,"nodeType":"235","messageId":"236","endLine":23,"endColumn":27},{"ruleId":"233","severity":1,"message":"243","line":18,"column":33,"nodeType":"235","messageId":"236","endLine":18,"endColumn":40},{"ruleId":"233","severity":1,"message":"237","line":1,"column":17,"nodeType":"235","messageId":"236","endLine":1,"endColumn":26},{"ruleId":"233","severity":1,"message":"243","line":16,"column":11,"nodeType":"235","messageId":"236","endLine":16,"endColumn":18},{"ruleId":"233","severity":1,"message":"262","line":24,"column":11,"nodeType":"235","messageId":"236","endLine":24,"endColumn":18},{"ruleId":"233","severity":1,"message":"243","line":22,"column":11,"nodeType":"235","messageId":"236","endLine":22,"endColumn":18},{"ruleId":"233","severity":1,"message":"263","line":12,"column":9,"nodeType":"235","messageId":"236","endLine":12,"endColumn":16},{"ruleId":"233","severity":1,"message":"264","line":7,"column":23,"nodeType":"235","messageId":"236","endLine":7,"endColumn":34},{"ruleId":"265","severity":1,"message":"266","line":34,"column":9,"nodeType":"267","endLine":34,"endColumn":36},{"ruleId":"233","severity":1,"message":"268","line":4,"column":8,"nodeType":"235","messageId":"236","endLine":4,"endColumn":20},{"ruleId":"233","severity":1,"message":"269","line":19,"column":10,"nodeType":"235","messageId":"236","endLine":19,"endColumn":22},{"ruleId":"233","severity":1,"message":"270","line":20,"column":10,"nodeType":"235","messageId":"236","endLine":20,"endColumn":15},{"ruleId":"233","severity":1,"message":"271","line":20,"column":17,"nodeType":"235","messageId":"236","endLine":20,"endColumn":25},{"ruleId":"233","severity":1,"message":"272","line":21,"column":10,"nodeType":"235","messageId":"236","endLine":21,"endColumn":17},{"ruleId":"233","severity":1,"message":"248","line":4,"column":10,"nodeType":"235","messageId":"236","endLine":4,"endColumn":14},{"ruleId":"233","severity":1,"message":"273","line":18,"column":11,"nodeType":"235","messageId":"236","endLine":18,"endColumn":15},{"ruleId":"233","severity":1,"message":"243","line":44,"column":33,"nodeType":"235","messageId":"236","endLine":44,"endColumn":40},{"ruleId":"233","severity":1,"message":"274","line":1,"column":38,"nodeType":"235","messageId":"236","endLine":1,"endColumn":53},{"ruleId":"233","severity":1,"message":"268","line":10,"column":10,"nodeType":"235","messageId":"236","endLine":10,"endColumn":22},{"ruleId":"251","severity":1,"message":"252","line":27,"column":46,"nodeType":"253","messageId":"254","endLine":27,"endColumn":48},"no-native-reassign",["275"],"no-negated-in-lhs",["276"],"no-unused-vars","'showEditAddressReducer' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'userInfo' is assigned a value but never used.","no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","'loading' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["277"],"'Link' is defined but never used.","'location' is assigned a value but never used.","'gsap' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","'useState' is defined but never used.","'removeCartProduct' is defined but never used.","'FaDhl' is defined but never used.","'MdLocalShipping' is defined but never used.","'orderPaymentMethod' is assigned a value but never used.","'success' is assigned a value but never used.","'history' is assigned a value but never used.","'useDispatch' is defined but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","'ErrorMessage' is defined but never used.","'successColor' is assigned a value but never used.","'error' is assigned a value but never used.","'setError' is assigned a value but never used.","'message' is assigned a value but never used.","'user' is assigned a value but never used.","'useLayoutEffect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"278","fix":"279"},"Update the dependencies array to be: [userInfo, redirect, history]",{"range":"280","text":"281"},[1023,1043],"[userInfo, redirect, history]"]