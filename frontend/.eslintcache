[{"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\index.js":"1","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\redux\\store.js":"2","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\scroll-to-top\\ScrollToTop.jsx":"3","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\App.js":"4","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\reportWebVitals.js":"5","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\redux\\cart\\cart.reducers.js":"6","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\redux\\product\\product.reducers.js":"7","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\redux\\user\\user.reducers.js":"8","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\redux\\order\\order.reducers.js":"9","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\redux\\cart\\cart.actions.js":"10","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\profile-screen\\ProfileScreen.js":"11","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\login-screen\\Login.js":"12","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\shipping-screen\\ShippingScreen.js":"13","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\signup-screen\\Signup.js":"14","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\redux\\cart\\cart.constants.js":"15","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\redux\\product\\product.constants.js":"16","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\redux\\user\\user.constants.js":"17","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\redux\\order\\order.constants.js":"18","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\footer\\Footer.js":"19","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\header\\Header.js":"20","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\payment-screen\\PaymentScreen.js":"21","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\product-screen\\ProductScreen.js":"22","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\complete-order-screen\\CompleteOrder.js":"23","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\redux\\user\\user.actions.js":"24","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\redux\\order\\order.actions.js":"25","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\profile-sidebar\\ProfileSidebar.js":"26","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\profile-info-screen\\YourInfo.js":"27","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\profile-addresses-screen\\ProfileAddresses.js":"28","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\checkout-screen\\Checkout.js":"29","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\error-message\\ErrorMessage.js":"30","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\redux\\product\\product.actions.js":"31","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\user-menu-dropdown\\UserDropdown.js":"32","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\cart-dropdown\\CartDropdown.js":"33","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\utils.js":"34","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\loader\\Loader.js":"35","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\loader-product\\LoaderProduct.js":"36","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\action-show\\ActionShow.js":"37","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\order-screen\\OrderScreen.js":"38","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\profile-favorite-screen\\FavoriteScreen.js":"39","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\checkout-steps\\CheckoutSteps.js":"40","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\add-address\\AddAddress.js":"41","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\product\\Product.js":"42","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\loader-generic\\LoaderGeneric.js":"43","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\profile-orders\\ProfileOrders.js":"44","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\order-of-orders\\OrderOfOrders.js":"45","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\add-review\\AddReview.js":"46","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\review\\Review.js":"47","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\searchbox\\SearchBox.js":"48","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\profile-reviews-screen\\ProfileReviews.js":"49","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\shop\\Shop.js":"50","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\product-filter\\ProductFilter.js":"51","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\home-page\\HomePage.js":"52","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\carousel-products\\CarouselProductShow.js":"53","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\category-screen\\ProductCategory.js":"54","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\search-results\\SearchResults.js":"55","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\modals\\address-edit-modal\\AddressEdit.js":"56","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\modals\\product-review-modal\\ProductReviewModal.js":"57","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\order-item\\OrderItem.js":"58","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\deals-screen\\DealsScreen.js":"59","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\sidebar\\Sidebar.js":"60"},{"size":772,"mtime":1618030376641,"results":"61","hashOfConfig":"62"},{"size":4373,"mtime":1618170007839,"results":"63","hashOfConfig":"62"},{"size":347,"mtime":1612129189000,"results":"64","hashOfConfig":"62"},{"size":2544,"mtime":1614369689489,"results":"65","hashOfConfig":"62"},{"size":362,"mtime":1612129189000,"results":"66","hashOfConfig":"62"},{"size":886,"mtime":1612129189000,"results":"67","hashOfConfig":"62"},{"size":2438,"mtime":1614163652005,"results":"68","hashOfConfig":"62"},{"size":5646,"mtime":1613058002987,"results":"69","hashOfConfig":"62"},{"size":2912,"mtime":1614225220161,"results":"70","hashOfConfig":"62"},{"size":1827,"mtime":1612129189000,"results":"71","hashOfConfig":"62"},{"size":1770,"mtime":1618242159468,"results":"72","hashOfConfig":"62"},{"size":2757,"mtime":1618168539109,"results":"73","hashOfConfig":"62"},{"size":5031,"mtime":1618292774035,"results":"74","hashOfConfig":"62"},{"size":5940,"mtime":1618169228428,"results":"75","hashOfConfig":"62"},{"size":626,"mtime":1612129189000,"results":"76","hashOfConfig":"62"},{"size":900,"mtime":1614037446795,"results":"77","hashOfConfig":"62"},{"size":1509,"mtime":1612897264410,"results":"78","hashOfConfig":"62"},{"size":809,"mtime":1614225234874,"results":"79","hashOfConfig":"62"},{"size":1067,"mtime":1618031748833,"results":"80","hashOfConfig":"62"},{"size":6537,"mtime":1618271283270,"results":"81","hashOfConfig":"62"},{"size":6188,"mtime":1618295492834,"results":"82","hashOfConfig":"62"},{"size":10858,"mtime":1618292129872,"results":"83","hashOfConfig":"62"},{"size":12804,"mtime":1618298366653,"results":"84","hashOfConfig":"62"},{"size":8749,"mtime":1612897966262,"results":"85","hashOfConfig":"62"},{"size":4127,"mtime":1612630597633,"results":"86","hashOfConfig":"62"},{"size":5769,"mtime":1618244216265,"results":"87","hashOfConfig":"62"},{"size":9159,"mtime":1618273045112,"results":"88","hashOfConfig":"62"},{"size":4030,"mtime":1618293626640,"results":"89","hashOfConfig":"62"},{"size":6746,"mtime":1618284793875,"results":"90","hashOfConfig":"62"},{"size":451,"mtime":1618031640448,"results":"91","hashOfConfig":"62"},{"size":3332,"mtime":1613844398175,"results":"92","hashOfConfig":"62"},{"size":1420,"mtime":1618166700228,"results":"93","hashOfConfig":"62"},{"size":6616,"mtime":1618030855829,"results":"94","hashOfConfig":"62"},{"size":554,"mtime":1612824891496,"results":"95","hashOfConfig":"62"},{"size":611,"mtime":1612129189000,"results":"96","hashOfConfig":"62"},{"size":420,"mtime":1612129189000,"results":"97","hashOfConfig":"62"},{"size":604,"mtime":1618030671236,"results":"98","hashOfConfig":"62"},{"size":10339,"mtime":1618300112358,"results":"99","hashOfConfig":"62"},{"size":5449,"mtime":1618170809788,"results":"100","hashOfConfig":"62"},{"size":3579,"mtime":1618299406950,"results":"101","hashOfConfig":"62"},{"size":4641,"mtime":1618169653020,"results":"102","hashOfConfig":"62"},{"size":5244,"mtime":1618032116017,"results":"103","hashOfConfig":"62"},{"size":389,"mtime":1618032001767,"results":"104","hashOfConfig":"62"},{"size":1467,"mtime":1618168974226,"results":"105","hashOfConfig":"62"},{"size":2071,"mtime":1618032076166,"results":"106","hashOfConfig":"62"},{"size":4998,"mtime":1618294711228,"results":"107","hashOfConfig":"62"},{"size":1103,"mtime":1618166591482,"results":"108","hashOfConfig":"62"},{"size":1455,"mtime":1618179570867,"results":"109","hashOfConfig":"62"},{"size":1922,"mtime":1618168999199,"results":"110","hashOfConfig":"62"},{"size":3357,"mtime":1618169197184,"results":"111","hashOfConfig":"62"},{"size":263,"mtime":1618032165273,"results":"112","hashOfConfig":"113"},{"size":7271,"mtime":1618264353350,"results":"114","hashOfConfig":"62"},{"size":3016,"mtime":1618229034945,"results":"115","hashOfConfig":"62"},{"size":3265,"mtime":1618022870973,"results":"116","hashOfConfig":"62"},{"size":4110,"mtime":1614124622340,"results":"117","hashOfConfig":"62"},{"size":6087,"mtime":1618166807518,"results":"118","hashOfConfig":"62"},{"size":1732,"mtime":1618294584052,"results":"119","hashOfConfig":"62"},{"size":3272,"mtime":1618022870969,"results":"120","hashOfConfig":"62"},{"size":2747,"mtime":1614270110640,"results":"121","hashOfConfig":"62"},{"size":3437,"mtime":1618245796133,"results":"122","hashOfConfig":"62"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},"jkitux",{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"125"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"125"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"125"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"125"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"201"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"125"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"125"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"125"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"125"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1j4c21t",{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\index.js",[],["254","255"],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\redux\\store.js",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\scroll-to-top\\ScrollToTop.jsx",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\App.js",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\redux\\cart\\cart.reducers.js",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\redux\\product\\product.reducers.js",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\redux\\user\\user.reducers.js",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\redux\\order\\order.reducers.js",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\redux\\cart\\cart.actions.js",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\profile-screen\\ProfileScreen.js",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\login-screen\\Login.js",["256"],"//! Core\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\n//!  Redux\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { login } from \"../../redux/user/user.actions.js\";\r\n\r\n//! Components\r\nimport ErrorMessage from \"../../components/error-message/ErrorMessage.js\";\r\n\r\n//!==========================================================\r\nconst Login = ({ location }) => {\r\n  const history = useHistory();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { error, userInfo } = userLogin;\r\n\r\n  const redirect = location.search ? location.search.split(\"+\")[1] : \"/\";\r\n\r\n  //! Check if we are logged in so you get a redirect if you try to access the login route while logged in\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect);\r\n    }\r\n  }, [history, userInfo, redirect]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    //! Dispatch Login ====================\r\n    dispatch(login(email, password));\r\n  };\r\n  return (\r\n    <div className=\"login-screen\">\r\n      <div className=\"home-screen__top\">\r\n        <h1 className=\"heading-1  home-screen__title\">SIGNIN</h1>\r\n      </div>\r\n      {error && <ErrorMessage color=\"alert\">{error}</ErrorMessage>}\r\n\r\n      <div className=\"login-screen__form-container\">\r\n        <form className=\"login-screen__form\" onSubmit={submitHandler}>\r\n          <label className=\"login-screen__form--input-label\" htmlFor=\"email\">\r\n            Email Address\r\n          </label>\r\n          <input\r\n            placeholder=\"Enter email\"\r\n            className=\"login-screen__form--input\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            name=\"email\"\r\n            type=\"email\"\r\n          />\r\n          <label className=\"login-screen__form--input-label\" htmlFor=\"password\">\r\n            Password\r\n          </label>\r\n          <input\r\n            placeholder=\"Enter password\"\r\n            className=\"login-screen__form--input\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            name=\"password\"\r\n            type=\"password\"\r\n          />\r\n          <input\r\n            className=\"login-screen__form--submit-btn\"\r\n            type=\"submit\"\r\n            value=\"Sign In\"\r\n          />\r\n        </form>\r\n        <Link\r\n          className=\"login-screen__create-account-link\"\r\n          to={redirect ? \"/register?redirect=${redirect}\" : \"/register\"}\r\n        >\r\n          Don't have an account? Create one here.\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\shipping-screen\\ShippingScreen.js",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\signup-screen\\Signup.js",["257"],"//! Core\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\n//! Redux\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { register } from \"../../redux/user/user.actions.js\";\r\n\r\n//! Components\r\nimport ErrorMessage from \"../../components/error-message/ErrorMessage.js\";\r\n\r\n//!==========================================================\r\nconst Signup = ({ location }) => {\r\n  //! Hooks\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  //! State\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [message, setMessage] = useState(null);\r\n  const redirect = location.search ? location.search.split(\"+\")[1] : \"/\";\r\n\r\n  //! Selectors\r\n  const userRegister = useSelector((state) => state.userRegister);\r\n  const { error, userInfo } = userRegister;\r\n\r\n  //! Use Effect\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect);\r\n    }\r\n  }, [userInfo, redirect, history]);\r\n  const passwordLength = password.length < 6 ? false : true;\r\n  const passwordLowercase = /[a-z]/.test(password) < 1 ? false : true;\r\n  const passwordUppercase = /[A-Z]/.test(password) < 1 ? false : true;\r\n  const passwordNumber = /[0-9]/.test(password) < 1 ? false : true;\r\n  const passwordEqualConfirmPassword =\r\n    password !== confirmPassword ? false : true;\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    history.push(\"/\");\r\n    //!Password check =====================\r\n\r\n    if (\r\n      passwordLength &&\r\n      passwordLowercase &&\r\n      passwordUppercase &&\r\n      passwordNumber &&\r\n      passwordEqualConfirmPassword\r\n    ) {\r\n      //! Dispatch Login ====================\r\n      dispatch(register(name, email, password));\r\n    } else {\r\n      setMessage(\"You must comply with all the password requisites.\");\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"login-screen\">\r\n      <div className=\"home-screen__top\">\r\n        <h1 className=\"heading-1  home-screen__title\">SIGNUP</h1>\r\n      </div>\r\n      {error && <ErrorMessage color=\"alert\">{error}</ErrorMessage>}\r\n\r\n      <div className=\"login-screen__form-container\">\r\n        <form className=\"login-screen__form\" onSubmit={submitHandler}>\r\n          <label className=\"login-screen__form--input-label\" htmlFor=\"name\">\r\n            Name\r\n          </label>\r\n          <input\r\n            placeholder=\"Enter name\"\r\n            className=\"login-screen__form--input\"\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n            name=\"name\"\r\n            type=\"text\"\r\n          />\r\n          <label className=\"login-screen__form--input-label\" htmlFor=\"email\">\r\n            Email\r\n          </label>\r\n          <input\r\n            placeholder=\"Enter email\"\r\n            className=\"login-screen__form--input\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            name=\"email\"\r\n            type=\"email\"\r\n          />\r\n          <label className=\"login-screen__form--input-label\" htmlFor=\"password\">\r\n            Password\r\n          </label>\r\n          <input\r\n            placeholder=\"Enter password\"\r\n            className=\"login-screen__form--input\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            name=\"password\"\r\n            type=\"password\"\r\n          />\r\n          <label\r\n            className=\"login-screen__form--input-label\"\r\n            htmlFor=\"confirmPassword\"\r\n          >\r\n            Confirm Password\r\n          </label>\r\n          <input\r\n            placeholder=\"Confirm password\"\r\n            className=\"login-screen__form--input\"\r\n            value={confirmPassword}\r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n            name=\"confirmPassword\"\r\n            type=\"password\"\r\n          />\r\n          {message && <p className=\"signup__password-error\">{message}</p>}\r\n          <div className=\"signup__password-box\">\r\n            <h3>Password must:</h3>\r\n            <p\r\n              className={\r\n                passwordEqualConfirmPassword\r\n                  ? \"signup__password-box--fail\"\r\n                  : \"signup__password-box--checked\"\r\n              }\r\n            >\r\n              match Confirm Password\r\n            </p>\r\n            <p\r\n              className={\r\n                passwordUppercase\r\n                  ? \"signup__password-box--fail\"\r\n                  : \"signup__password-box--checked\"\r\n              }\r\n            >\r\n              contain an uppercase letter\r\n            </p>\r\n            <p\r\n              className={\r\n                passwordLowercase\r\n                  ? \"signup__password-box--fail\"\r\n                  : \"signup__password-box--checked\"\r\n              }\r\n            >\r\n              contain an lowercase letter\r\n            </p>\r\n            <p\r\n              className={\r\n                passwordNumber\r\n                  ? \"signup__password-box--fail\"\r\n                  : \"signup__password-box--checked\"\r\n              }\r\n            >\r\n              contain a number\r\n            </p>\r\n            <p\r\n              className={\r\n                passwordLength\r\n                  ? \"signup__password-box--fail\"\r\n                  : \"signup__password-box--checked\"\r\n              }\r\n            >\r\n              be at least 6 characters long\r\n            </p>\r\n          </div>\r\n          <input\r\n            className=\"login-screen__form--submit-btn\"\r\n            type=\"submit\"\r\n            value=\"Register\"\r\n          />\r\n        </form>\r\n\r\n        <Link\r\n          className=\"login-screen__create-account-link\"\r\n          to={redirect ? \"/login?redirect=${redirect}\" : \"/login\"}\r\n        >\r\n          Have an account? Log in here.\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\redux\\cart\\cart.constants.js",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\redux\\product\\product.constants.js",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\redux\\user\\user.constants.js",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\redux\\order\\order.constants.js",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\footer\\Footer.js",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\header\\Header.js",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\payment-screen\\PaymentScreen.js",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\product-screen\\ProductScreen.js",["258"],"//! Core\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Link, useHistory, useRouteMatch } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { roundToTwo } from \"../../utils\";\r\n\r\n//! Components\r\nimport LoaderGeneric from \"../../components/loader-generic/LoaderGeneric.js\";\r\nimport ActionShow from \"../../components/action-show/ActionShow.js\";\r\nimport AddReview from \"../../components/add-review/AddReview.js\";\r\nimport Review from \"../../components/review/Review\";\r\n\r\nimport Rating from \"@material-ui/lab/Rating\";\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\n//! Icons\r\nimport { FaHeart } from \"react-icons/fa\";\r\nimport { TiShoppingCart } from \"react-icons/ti\";\r\nimport { AiOutlineCheckCircle, AiOutlineCloseCircle } from \"react-icons/ai\";\r\n\r\n//! Redux Actions\r\nimport { addToCart, getCartProducts } from \"../../redux/cart/cart.actions.js\";\r\nimport { listFavoriteProducts } from \"../../redux/user/user.actions.js\";\r\nimport { listProductDetails } from \"../../redux/product/product.actions\";\r\n\r\n//!==================================================================\r\n\r\nconst ProductScreen = () => {\r\n  //! Hooks declaration\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const match = useRouteMatch();\r\n\r\n  //! State\r\n  const [like, setLike] = useState(false);\r\n\r\n  const [qty, setQty] = useState(1);\r\n  const [toCart, setToCart] = useState(false);\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  //! Redux data selection hook\r\n  const productDetailsInfo = useSelector((state) => state.productDetails);\r\n  const { loading, product } = productDetailsInfo;\r\n\r\n  const isFavorite = product?.likedBy?.find((id) => id == userInfo?._id);\r\n\r\n  let timer;\r\n\r\n  //! Get the product by id from the API\r\n  useEffect(() => {\r\n    dispatch(listFavoriteProducts());\r\n    dispatch(listProductDetails(match.params.id));\r\n    if (isFavorite) {\r\n      setLike(true);\r\n    } else {\r\n      setLike(false);\r\n    }\r\n    return () => clearTimeout(timer);\r\n  }, [isFavorite, dispatch, match.params.id, timer]);\r\n\r\n  //!Handlers\r\n  const addToCartHandler = () => {\r\n    try {\r\n      if (!userInfo) {\r\n        history.push(\"/login\");\r\n      } else {\r\n        dispatch(addToCart(match.params.id, Number(qty)));\r\n        dispatch(getCartProducts());\r\n        setToCart(true);\r\n        timer = setTimeout(() => {\r\n          setToCart(false);\r\n        }, 3100);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const handleAddUserToLikedArrayAndProductToFavorites = async (id) => {\r\n    try {\r\n      if (!userInfo) {\r\n        history.push(\"/login\");\r\n      } else {\r\n        const config = {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${userInfo.token}`,\r\n          },\r\n        };\r\n        await axios.put(`/api/products/`, { _id: id }, config);\r\n        await axios.post(`/api/users/profile/favorites`, { _id: id }, config);\r\n        setLike(true);\r\n        dispatch(listFavoriteProducts());\r\n        dispatch(listProductDetails(match.params.id));\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const removeFromFavoriteHandler = (id) => {\r\n    const deleteProduct = async () => {\r\n      try {\r\n        const config = {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${userInfo.token}`,\r\n          },\r\n        };\r\n        await axios.delete(`/api/users/profile/favorites/${id}`, config);\r\n        setLike(false);\r\n        dispatch(listFavoriteProducts());\r\n        dispatch(listProductDetails(match.params.id));\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    deleteProduct();\r\n  };\r\n\r\n  const likedByNumber = product.likedBy.length;\r\n\r\n  return (\r\n    <>\r\n      {toCart ? <ActionShow /> : null}\r\n      <div className=\" top-links mb-sm\">\r\n        {\" \"}\r\n        <Link className=\"product-screen__link\" to=\"/\">\r\n          &#10092;&#10092; Home\r\n        </Link>\r\n        <span onClick={() => history.goBack()} className=\"product-screen__link\">\r\n          &#10092;&#10092; Back\r\n        </span>\r\n      </div>\r\n      {loading ? (\r\n        <LoaderGeneric />\r\n      ) : (\r\n        <>\r\n          <div className=\"product-screen__body\">\r\n            <h1 className=\"product-screen__name\">{product.name}</h1>\r\n            <div className=\"product-screen__image-wrapper\">\r\n              <img\r\n                className=\"product-screen__image\"\r\n                src={product.image}\r\n                alt=\"product\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"product-screen__price\">\r\n              <h4 className=\" product-screen__price--title\">PRICE</h4>\r\n              <span className=\" product-screen__price--value\">\r\n                {product.onOffer ? (\r\n                  <strong style={{ textAlign: \"center\" }}>\r\n                    {\" \"}\r\n                    €{\" \"}\r\n                    {roundToTwo(\r\n                      product.price -\r\n                        product.price * (product.offerPriceDiscount / 100)\r\n                    )}{\" \"}\r\n                    <br />\r\n                    <s style={{ fontSize: \"1.3rem\", width: \"100%\" }}>\r\n                      {\" \"}\r\n                      € {product.price}\r\n                    </s>\r\n                  </strong>\r\n                ) : (\r\n                  <strong>\r\n                    {\" \"}\r\n                    €{\" \"}\r\n                    {roundToTwo(\r\n                      product.price -\r\n                        product.price * (product.offerPriceDiscount / 100)\r\n                    )}{\" \"}\r\n                  </strong>\r\n                )}\r\n              </span>\r\n              {product.countInStock > 0 ? (\r\n                <p className=\"product-screen__stock\">\r\n                  <AiOutlineCheckCircle />\r\n                  &nbsp;&nbsp;Product is in stock\r\n                </p>\r\n              ) : (\r\n                <p className=\"product-screen__stock product-screen__stock--out\">\r\n                  <AiOutlineCloseCircle />\r\n                  &nbsp;&nbsp; Product out of stock\r\n                </p>\r\n              )}\r\n\r\n              {product.countInStock > 0 && (\r\n                <div className=\"product-screen__quantity-selector\">\r\n                  <form action=\"\">\r\n                    <label\r\n                      className=\"product-screen__quantity-selector--text\"\r\n                      htmlFor=\"quantity\"\r\n                    >\r\n                      Select quantity\r\n                    </label>\r\n                    <select\r\n                      className=\"product-screen__quantity-selector--selection\"\r\n                      value={qty}\r\n                      name=\"quantity\"\r\n                      id=\"quantity\"\r\n                      onChange={(e) => setQty(e.target.value)}\r\n                    >\r\n                      {[...Array(product.countInStock).keys()].map((el) => (\r\n                        <option\r\n                          className=\"product-screen__quantity-selector--option\"\r\n                          key={el + 1}\r\n                          value={el + 1}\r\n                        >\r\n                          {el + 1}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                  </form>\r\n                </div>\r\n              )}\r\n              {product.countInStock === 0 ? (\r\n                <button className=\"product-screen__button-disabled\">\r\n                  {\" \"}\r\n                  <TiShoppingCart className=\"product-screen__button--icon\" />{\" \"}\r\n                  out of stock{\" \"}\r\n                </button>\r\n              ) : (\r\n                <button\r\n                  onClick={async () => addToCartHandler()}\r\n                  className=\"product-screen__button\"\r\n                >\r\n                  <TiShoppingCart className=\"product-screen__button--icon\" />{\" \"}\r\n                  Add to cart\r\n                </button>\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"product-screen__rating\">\r\n              <span className=\"product__rating-text\">\r\n                User Rating:&nbsp;&nbsp;&nbsp;\r\n                <strong>{roundToTwo(product.rating)}</strong> (\r\n                {product.numReviews} reviews)\r\n              </span>\r\n              <Box component=\"fieldset\" borderColor=\"transparent\">\r\n                <Rating\r\n                  name=\"Product Rating\"\r\n                  title=\"Product Rating\"\r\n                  value={product.rating || 0}\r\n                  size=\"large\"\r\n                  readOnly\r\n                />\r\n              </Box>\r\n            </div>\r\n            <div className=\"product-screen__add-favorite\">\r\n              {like ? (\r\n                <div className=\"product-screen__add-favorite--flex\">\r\n                  <FaHeart\r\n                    onClick={() => {\r\n                      removeFromFavoriteHandler(product._id);\r\n                    }}\r\n                    className=\"product-screen__heart product-screen__heart--selected\"\r\n                  />\r\n                  <span className=\"product-screen__add-favorite--text ml-sm\">\r\n                    FAVORITE PRODUCT\r\n                  </span>{\" \"}\r\n                </div>\r\n              ) : (\r\n                <div className=\"product-screen__add-favorite--flex\">\r\n                  <FaHeart\r\n                    onClick={() => {\r\n                      handleAddUserToLikedArrayAndProductToFavorites(\r\n                        product._id\r\n                      );\r\n                    }}\r\n                    className=\"product-screen__heart\"\r\n                  />\r\n                  <span className=\"product-screen__add-favorite--text ml-sm\">\r\n                    ADD TO FAVORITES\r\n                  </span>\r\n                </div>\r\n              )}\r\n              <span className=\"product-screen__add-favorite--favorite-by\">\r\n                {\" \"}\r\n                ( Favorite by {likedByNumber}{\" \"}\r\n                {likedByNumber > 1 ? \"users\" : \"user\"} )\r\n              </span>\r\n            </div>\r\n            <div className=\"product-screen__details\">\r\n              <h3 className=\"heading-3 product-screen__product-description-title\">\r\n                {\" \"}\r\n                <strong>PRODUCT DESCRIPTION</strong>{\" \"}\r\n              </h3>\r\n              <p className=\"product-screen__details--text\">\r\n                {product.description}\r\n              </p>\r\n            </div>\r\n          </div>\r\n\r\n          <AddReview showModal={false} productId={product._id} />\r\n\r\n          <div className=\"line-break\"></div>\r\n\r\n          {product.reviews.map((review) => (\r\n            <Review key={review._id} review={review} />\r\n          ))}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductScreen;\r\n","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\complete-order-screen\\CompleteOrder.js",["259"],"//! Core\r\nimport React, { useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { roundToTwo } from \"../../utils.js\";\r\n\r\n//! Components\r\nimport CheckoutSteps from \"../../components/checkout-steps/CheckoutSteps\";\r\n\r\n//! Icons\r\nimport { GrPaypal, GrCreditCard, GrStripe } from \"react-icons/gr\";\r\n\r\n//! Redux Actions\r\nimport {\r\n  addOrderAddress,\r\n  createOrder,\r\n  saveOrderPaymentMethod,\r\n} from \"../../redux/order/order.actions\";\r\nimport { addToCart, getCartProducts } from \"../../redux/cart/cart.actions.js\";\r\nimport { productConstants } from \"../../redux/product/product.constants\";\r\n\r\n//! Extra npm packages\r\nimport { Link, animateScroll as scroll } from \"react-scroll\";\r\n\r\n//todo implement gsap to stop the buy now on screen\r\n//!=======================================================\r\n\r\nconst CompleteOrder = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const cart = useSelector((state) => state.cart);\r\n  const { cartProducts } = cart;\r\n  const orderAddressState = useSelector((state) => state.orderAddress);\r\n  const { orderAddress } = orderAddressState;\r\n\r\n  const orderCreate = useSelector((state) => state.orderCreate);\r\n  const { order, success } = orderCreate;\r\n\r\n  const orderPaymentMethod = useSelector((state) => state.orderPaymentMethod);\r\n  const paymentMethod = orderPaymentMethod.paymentMethod;\r\n  const { shippingMethod } = orderPaymentMethod;\r\n  //! REMOVE ALL CART ITEMS WHEN YOU PLACE THE ORDER==\r\n\r\n  const clearCartHandler = async () => {\r\n    try {\r\n      if (!userInfo) {\r\n        history.push(\"/login\");\r\n      } else {\r\n        const config = {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${userInfo.token}`,\r\n          },\r\n        };\r\n        await axios.delete(`/api/cart`, config);\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n  //!==================================================\r\n  useEffect(() => {\r\n    if (success) {\r\n      history.push(`/profile/orders/${order._id}`);\r\n    }\r\n    if (!orderAddress.fullName) {\r\n      history.push(\"/shipping\");\r\n    } else if (!orderPaymentMethod.paymentMethod) {\r\n      history.push(\"/payment\");\r\n    }\r\n  }, [orderAddress, history, orderPaymentMethod, order, success]);\r\n  const removeCartProduct = (id) => {\r\n    const deleteProduct = async () => {\r\n      try {\r\n        const config = {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${userInfo.token}`,\r\n          },\r\n        };\r\n        await axios.delete(`/api/cart/${id}`, config);\r\n\r\n        dispatch(getCartProducts());\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    deleteProduct();\r\n  };\r\n\r\n  const subtotal = cartProducts.reduce(\r\n    (accum, cartItem) =>\r\n      accum +\r\n      cartItem.quantity *\r\n        roundToTwo(\r\n          cartItem.product.price -\r\n            cartItem.product.price * (cartItem.product.offerPriceDiscount / 100)\r\n        ),\r\n    0\r\n  );\r\n  const totalPrice = roundToTwo(subtotal + shippingMethod.price);\r\n\r\n  //* Place order action ======================================\r\n  const placeOrderHandler = async () => {\r\n    dispatch(\r\n      createOrder({\r\n        orderItems: cartProducts,\r\n        shippingAddress: orderAddress,\r\n        paymentMethod: paymentMethod,\r\n        itemsPrice: roundToTwo(subtotal),\r\n        shippingPrice: roundToTwo(shippingMethod.price),\r\n        shippingMethod: shippingMethod.name,\r\n        totalPrice: roundToTwo(totalPrice),\r\n      })\r\n    );\r\n\r\n    clearCartHandler();\r\n    dispatch(getCartProducts());\r\n  };\r\n  //*============================================================\r\n  return (\r\n    <div className=\"complete-order shipping-section\">\r\n      <div id=\"section1\"></div>\r\n      <CheckoutSteps active3=\"selected-3\" />\r\n\r\n      <div>\r\n        <h1 className=\"heading-1  mt-sm mb-sm\">Order summary</h1>\r\n      </div>\r\n      <div className=\"complete-order__grid\">\r\n        <div className=\"complete-order__address-info complete-order__steps-container\">\r\n          <h3 className=\"heading-3 complete-order__steps-title mb-sm mt-sm\">\r\n            1. Shipping address\r\n          </h3>\r\n          <address className=\"complete-order__middle-text\">\r\n            <p>{orderAddress.fullName}</p>\r\n            <p>{orderAddress.line1}</p>\r\n            <p>{orderAddress.line2}</p>\r\n            <p>{orderAddress.city}</p>\r\n            <p>{orderAddress.stateProvinceRegion}</p>\r\n            <p>{orderAddress.country}</p>\r\n            <p>{orderAddress.postalCode}</p>\r\n            <p>{orderAddress.phoneNumber}</p>\r\n          </address>\r\n          <span\r\n            onClick={() => {\r\n              dispatch(addOrderAddress({}));\r\n            }}\r\n            className=\"complete-order__change-link\"\r\n          >\r\n            Change address\r\n          </span>\r\n        </div>\r\n        <div className=\"complete-order__payment-info complete-order__steps-container\">\r\n          <h3 className=\"heading-3 complete-order__steps-title mb-sm mt-sm\">\r\n            2. Payment Method\r\n          </h3>\r\n          <p\r\n            style={{ alignSelf: \"center\", fontSize: \"1.4rem\" }}\r\n            className=\"complete-order__middle-text\"\r\n          >\r\n            {paymentMethod === \"PayPal\" ? (\r\n              <GrPaypal className=\" mr-sm\" />\r\n            ) : paymentMethod === \"Credit Card\" ? (\r\n              <GrCreditCard className=\" mr-sm\" />\r\n            ) : (\r\n              <GrStripe className=\" mr-sm\" />\r\n            )}\r\n            {paymentMethod}\r\n          </p>\r\n          <span\r\n            onClick={() => {\r\n              dispatch(saveOrderPaymentMethod(\"\", {}));\r\n            }}\r\n            className=\"complete-order__change-link\"\r\n          >\r\n            Change payment\r\n          </span>\r\n        </div>\r\n        <div className=\"complete-order__shipment-info complete-order__steps-container\">\r\n          <h3 className=\"heading-3 complete-order__steps-title mb-sm mt-sm\">\r\n            3. Shipment Method\r\n          </h3>\r\n          <p\r\n            style={{ alignSelf: \"center\" }}\r\n            className=\"complete-order__middle-text\"\r\n          >\r\n            {shippingMethod.name} &nbsp;{\" \"}\r\n            <span style={{ color: \" #fd3e3e\" }}>\r\n              + {shippingMethod.price} €\r\n            </span>\r\n          </p>\r\n\r\n          <span\r\n            onClick={() => dispatch(saveOrderPaymentMethod(\"\", {}))}\r\n            className=\"complete-order__change-link\"\r\n          >\r\n            Change shipment\r\n          </span>\r\n        </div>\r\n        <div className=\"complete-order__products-info \">\r\n          <h3\r\n            style={{ padding: \"1rem\" }}\r\n            className=\"heading-3 complete-order__steps-title mb-sm mt-sm\"\r\n          >\r\n            4. Review Products\r\n          </h3>\r\n\r\n          {cartProducts.length === 0 ? (\r\n            <h3 className=\"heading-3 complete-order__steps-title\">\r\n              Cart is empty\r\n            </h3>\r\n          ) : (\r\n            cartProducts.map((item) => (\r\n              <div key={item.product._id} className=\"complete-order__item\">\r\n                <div className=\"complete-order__image-container\">\r\n                  <img\r\n                    onClick={() => {\r\n                      dispatch({\r\n                        type: productConstants.PRODUCT_DETAILS_RESET,\r\n                      });\r\n                      history.push(`/product/${item.product._id}`);\r\n                    }}\r\n                    src={item.product.image}\r\n                    alt={item.product.name}\r\n                    className=\"complete-order__image\"\r\n                  />\r\n                </div>\r\n                <div className=\"complete-order__item-details\">\r\n                  <h4\r\n                    onClick={() => {\r\n                      dispatch({\r\n                        type: productConstants.PRODUCT_DETAILS_RESET,\r\n                      });\r\n                      history.push(`/product/${item.product._id}`);\r\n                    }}\r\n                    className=\"heading-4 complete-order__item-details--title\"\r\n                  >\r\n                    {item.product.name} x {item.quantity}\r\n                  </h4>\r\n                  {item.product.countInStock ? (\r\n                    <h3 className=\"in-stock\">In stock</h3>\r\n                  ) : (\r\n                    <h3 className=\"out-of-stock-favorites\">Not in stock</h3>\r\n                  )}\r\n                  <h4 className=\"heading-4 complete-order__item-details--price\">\r\n                    PRICE:\r\n                  </h4>\r\n                  <h4 className=\"heading-4 complete-order__item-details--price-value\">\r\n                    €{\" \"}\r\n                    {roundToTwo(\r\n                      item.product.price -\r\n                        item.product.price *\r\n                          (item.product.offerPriceDiscount / 100)\r\n                    )}{\" \"}\r\n                    &#10006;&nbsp;\r\n                    {item.product.countInStock > 0 && (\r\n                      <div className=\"complete-order__quantity-selector complete-order__quantity-selector\">\r\n                        <form action=\"\">\r\n                          <label\r\n                            className=\"complete-order__quantity-selector--text\"\r\n                            htmlFor=\"quantity\"\r\n                          >\r\n                            quantity\r\n                          </label>\r\n                          <select\r\n                            className=\"complete-order__quantity-selector--selection\"\r\n                            value={item.quantity}\r\n                            name=\"quantity\"\r\n                            id=\"quantity\"\r\n                            onChange={(e) => {\r\n                              dispatch(\r\n                                addToCart(\r\n                                  item.product._id,\r\n                                  Number(e.target.value)\r\n                                )\r\n                              );\r\n                              dispatch(getCartProducts());\r\n                            }}\r\n                          >\r\n                            {[...Array(item.product.countInStock).keys()].map(\r\n                              (el) => (\r\n                                <option\r\n                                  className=\"complete-order__quantity-selector--option\"\r\n                                  key={el + 1}\r\n                                  value={el + 1}\r\n                                >\r\n                                  {el + 1}\r\n                                </option>\r\n                              )\r\n                            )}\r\n                          </select>\r\n                        </form>\r\n                      </div>\r\n                    )}\r\n                  </h4>\r\n                  <span\r\n                    onClick={() => removeCartProduct(item._id)}\r\n                    className=\"complete-order__remove\"\r\n                  >\r\n                    Remove\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            ))\r\n          )}\r\n        </div>\r\n        <div className=\"complete-order__summary\">\r\n          {cartProducts.length === 0 ? (\r\n            <button className=\" complete-order__btn  btn-disabled\">\r\n              Cart is empty\r\n            </button>\r\n          ) : (\r\n            <button\r\n              onClick={placeOrderHandler}\r\n              className=\"complete-order__buy-btn complete-order__btn\"\r\n            >\r\n              PLACE ORDER\r\n            </button>\r\n          )}\r\n          <h3 className=\"heading-3 complete-order__summary--title\">\r\n            Order Price\r\n          </h3>\r\n          <span style={{ gridColumn: \"1/3\", fontSize: \"1.2rem\" }}>\r\n            (All prices include VAT)\r\n          </span>\r\n          <h4 className=\"heading-4 complete-order__summary--text\">Products:</h4>\r\n          <span className=\"complete-order__summary--value\">\r\n            {roundToTwo(subtotal)}€\r\n          </span>\r\n          <h4 className=\"heading-4 complete-order__summary--text\">Shipping:</h4>\r\n          <span className=\"complete-order__summary--value\">\r\n            {shippingMethod.price}€\r\n          </span>\r\n          <h2 className=\"heading-2 complete-order__summary--total\">TOTAL:</h2>\r\n          <h2 className=\"heading-2 complete-order__summary--total-value\">\r\n            {totalPrice}€\r\n          </h2>\r\n        </div>\r\n      </div>\r\n      <Link to=\"section1\" smooth={true} duration={500}>\r\n        <span className=\"back-to-top\">&#8632; &nbsp;Back to top </span>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CompleteOrder;\r\n","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\redux\\user\\user.actions.js",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\redux\\order\\order.actions.js",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\profile-sidebar\\ProfileSidebar.js",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\profile-info-screen\\YourInfo.js",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\profile-addresses-screen\\ProfileAddresses.js",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\checkout-screen\\Checkout.js",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\error-message\\ErrorMessage.js",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\redux\\product\\product.actions.js",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\user-menu-dropdown\\UserDropdown.js",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\cart-dropdown\\CartDropdown.js",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\utils.js",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\loader\\Loader.js",[],["260","261"],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\loader-product\\LoaderProduct.js",[],["262","263"],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\action-show\\ActionShow.js",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\order-screen\\OrderScreen.js",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\profile-favorite-screen\\FavoriteScreen.js",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\checkout-steps\\CheckoutSteps.js",["264"],"import React from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nimport { AiOutlineDoubleRight, AiOutlineCheck } from \"react-icons/ai\";\r\nimport { GiTechnoHeart } from \"react-icons/gi\";\r\nimport { useSelector } from \"react-redux\";\r\n//!=====================================================================\r\nconst CheckoutSteps = ({ active3 }) => {\r\n  const history = useHistory();\r\n  const orderAddressState = useSelector((state) => state.orderAddress);\r\n  const { orderAddress } = orderAddressState;\r\n\r\n  const orderPaymentMethod = useSelector((state) => state.orderPaymentMethod);\r\n  const selectedShipment = orderAddress.fullName ? \"selected\" : \"\";\r\n  const selectedPayment =\r\n    orderPaymentMethod.paymentMethod !== \"\" ? \"selected\" : \"\";\r\n  return (\r\n    <div className=\"checkout-steps-container\">\r\n      <div\r\n        style={{\r\n          marginTop: \"-8rem\",\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n        }}\r\n        className=\"nav__logo-container mb-sm\"\r\n      >\r\n        <GiTechnoHeart className=\"nav__logo\" />{\" \"}\r\n        <Link to=\"/\">\r\n          <h2 className=\"nav__title\">Cyber Heart</h2>\r\n        </Link>\r\n      </div>\r\n      <Link to=\"/\">\r\n        <h2 className=\"nav__title\"></h2>\r\n      </Link>\r\n      <div className=\"checkout-steps\">\r\n        <div className=\"checkout-steps__progress\">\r\n          <span\r\n            className={`checkout-steps__number checkout-steps__number--${selectedShipment}`}\r\n          >\r\n            {orderAddress.fullName ? <AiOutlineCheck /> : \"1\"}\r\n          </span>{\" \"}\r\n          <p\r\n            onClick={() => history.push(\"/shipping\")}\r\n            className=\"checkout-steps__container\"\r\n          >\r\n            <span\r\n              className={`checkout-steps--text checkout-steps--text--${selectedShipment} `}\r\n            >\r\n              Address\r\n            </span>\r\n          </p>\r\n          <AiOutlineDoubleRight\r\n            className={`checkout-steps--arrows checkout-steps--arrows--${selectedShipment}  checkout-steps--arrows--animate`}\r\n          />\r\n        </div>\r\n        <div className=\"checkout-steps__progress\">\r\n          <span\r\n            className={`checkout-steps__number  checkout-steps__number--${selectedPayment} `}\r\n          >\r\n            {orderPaymentMethod.paymentMethod !== \"\" ? <AiOutlineCheck /> : \"2\"}\r\n          </span>{\" \"}\r\n          <p\r\n            onClick={() => history.push(\"/payment\")}\r\n            className=\"checkout-steps__container\"\r\n          >\r\n            <span\r\n              className={`checkout-steps--text checkout-steps--text--${selectedPayment} `}\r\n            >\r\n              Payment & Shipping\r\n            </span>\r\n          </p>\r\n          <AiOutlineDoubleRight\r\n            className={`checkout-steps--arrows checkout-steps--arrows--${selectedPayment} checkout-steps--arrows--animate`}\r\n          />\r\n        </div>\r\n        <div className=\"checkout-steps__progress\">\r\n          <span\r\n            className={`checkout-steps__number checkout-steps__number--${active3}`}\r\n          >\r\n            3\r\n          </span>\r\n          <p\r\n            onClick={() => history.push(\"/complete-order\")}\r\n            className=\"checkout-steps__container\"\r\n          >\r\n            <span\r\n              className={`checkout-steps--text checkout-steps--text--${active3} `}\r\n            >\r\n              Complete Order\r\n            </span>\r\n          </p>\r\n          {/* Empty div for flex space */}\r\n          <div></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CheckoutSteps;\r\n","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\add-address\\AddAddress.js",["265","266","267","268"],"import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getUserAddresses, addAddress } from \"../../redux/user/user.actions.js\";\r\n//!=============================================================================\r\nconst AddAddress = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [fullName, setFullName] = useState(\"\");\r\n  const [country, setCountry] = useState(\"\");\r\n  const [line1, setLine1] = useState(\"\");\r\n  const [line2, setLine2] = useState(\"\");\r\n  const [city, setCity] = useState(\"\");\r\n  const [stateProvinceRegion, setStateProvinceRegion] = useState(\"\");\r\n  const [postalCode, setPostalCode] = useState(\"\");\r\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\r\n\r\n  const [successColor, setSuccessColor] = useState(\"alert\");\r\n  const [error, setError] = useState(false);\r\n  const [message, setMessage] = useState(null);\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { user } = userDetails;\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    window.location.reload();\r\n    setMessage(\"Address added successfully.\");\r\n    setSuccessColor(\"success\");\r\n    dispatch(\r\n      addAddress({\r\n        id: user._id,\r\n        fullName,\r\n        country,\r\n        line1,\r\n        line2,\r\n        city,\r\n        stateProvinceRegion,\r\n        postalCode,\r\n        phoneNumber,\r\n      })\r\n    );\r\n    dispatch(getUserAddresses());\r\n    setFullName(\"\");\r\n    setCountry(\"\");\r\n    setLine1(\"\");\r\n    setLine2(\"\");\r\n    setCity(\"\");\r\n    setStateProvinceRegion(\"\");\r\n    setPostalCode(\"\");\r\n    setPhoneNumber(\"\");\r\n  };\r\n  return (\r\n    <>\r\n      <form onSubmit={handleSubmit} className=\"add-address__form-container\">\r\n        <label htmlFor=\"fullName\" className=\"add-address__label\">\r\n          <strong>Full name</strong>\r\n        </label>\r\n        <input\r\n          required\r\n          name=\"line1\"\r\n          onChange={(e) => setFullName(e.target.value)}\r\n          value={fullName}\r\n          type=\"text\"\r\n          className=\"add-address__input\"\r\n        />\r\n        <label htmlFor=\"line1\" className=\"add-address__label\">\r\n          <strong>Address line 1</strong>\r\n        </label>\r\n        <input\r\n          required\r\n          name=\"line1\"\r\n          onChange={(e) => setLine1(e.target.value)}\r\n          value={line1}\r\n          type=\"text\"\r\n          className=\"add-address__input\"\r\n        />\r\n\r\n        <label htmlFor=\"line2\" className=\"add-address__label\">\r\n          <strong>Address line 2</strong>\r\n        </label>\r\n        <input\r\n          required\r\n          name=\"line2\"\r\n          onChange={(e) => setLine2(e.target.value)}\r\n          value={line2}\r\n          type=\"text\"\r\n          className=\"add-address__input\"\r\n        />\r\n        <label htmlFor=\"city\" className=\"add-address__label\">\r\n          <strong>City</strong>\r\n        </label>\r\n        <input\r\n          required\r\n          name=\"city\"\r\n          onChange={(e) => setCity(e.target.value)}\r\n          value={city}\r\n          className=\"add-address__input\"\r\n        />\r\n        <label htmlFor=\"stateProvinceRegion\" className=\"add-address__label\">\r\n          <strong>State/Province/Region</strong>\r\n        </label>\r\n        <input\r\n          required\r\n          name=\"stateProvinceRegion\"\r\n          onChange={(e) => setStateProvinceRegion(e.target.value)}\r\n          value={stateProvinceRegion}\r\n          className=\"add-address__input\"\r\n        />\r\n        <label htmlFor=\"postalCode\" className=\"add-address__label\">\r\n          <strong>Postal Code</strong>\r\n        </label>\r\n        <input\r\n          required\r\n          name=\"postalCode\"\r\n          onChange={(e) => setPostalCode(e.target.value)}\r\n          value={postalCode}\r\n          className=\"add-address__input\"\r\n        />\r\n        <label htmlFor=\"country\" className=\"add-address__label\">\r\n          <strong>Country</strong>\r\n        </label>\r\n        <input\r\n          required\r\n          name=\"country\"\r\n          onChange={(e) => setCountry(e.target.value)}\r\n          value={country}\r\n          className=\"add-address__input\"\r\n        />\r\n        <label htmlFor=\"phoneNumber\" className=\"add-address__label\">\r\n          <strong>Phone Number</strong>\r\n        </label>\r\n        <input\r\n          required\r\n          name=\"phoneNumber\"\r\n          onChange={(e) => setPhoneNumber(e.target.value)}\r\n          value={phoneNumber}\r\n          className=\"add-address__input\"\r\n        />\r\n        <input\r\n          required\r\n          className=\"add-address__input-btn\"\r\n          type=\"submit\"\r\n          value=\"Add new Address\"\r\n        />\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddAddress;\r\n","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\product\\Product.js",["269"],"//! Core\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { roundToTwo } from \"../../utils\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport axios from \"axios\";\r\n\r\n//! Components\r\nimport StarRatings from \"react-star-ratings\";\r\n\r\n//! Icons\r\nimport { FaHeart } from \"react-icons/fa\";\r\n\r\n//! Redux Actions\r\nimport { listFavoriteProducts } from \"../../redux/user/user.actions.js\";\r\nimport { productConstants } from \"../../redux/product/product.constants\";\r\n\r\n//!==================================================================\r\nconst Product = ({ product }) => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const [like, setLike] = useState(false);\r\n\r\n  const favoriteProductsList = useSelector(\r\n    (state) => state.userFavoriteProducts\r\n  );\r\n  const { userFavoriteProducts } = favoriteProductsList;\r\n\r\n  const isFavorite = userFavoriteProducts.find(\r\n    (favoriteProduct) => favoriteProduct._id == product._id\r\n  );\r\n  useEffect(() => {\r\n    if (isFavorite) {\r\n      setLike(true);\r\n    } else {\r\n      setLike(false);\r\n    }\r\n  }, [isFavorite]);\r\n\r\n  const handleAddUserToLikedArrayAndProductToFavorites = (id) => {\r\n    const addProduct = async () => {\r\n      try {\r\n        if (!userInfo) {\r\n          history.push(\"/login\");\r\n        } else {\r\n          const config = {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n          };\r\n          await axios.put(`/api/products/`, { _id: id }, config);\r\n          await axios.post(`/api/users/profile/favorites`, { _id: id }, config);\r\n          setLike(true);\r\n          dispatch(listFavoriteProducts());\r\n        }\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n    addProduct();\r\n  };\r\n\r\n  const removeFromFavoriteHandler = (id) => {\r\n    const deleteProduct = async () => {\r\n      try {\r\n        const config = {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${userInfo.token}`,\r\n          },\r\n        };\r\n        await axios.delete(`/api/users/profile/favorites/${id}`, config);\r\n        setLike(false);\r\n        dispatch(listFavoriteProducts());\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    deleteProduct();\r\n  };\r\n\r\n  const handleProductDetailsLink = () => {\r\n    history.push(`/product/${product._id}`);\r\n    dispatch({ type: productConstants.PRODUCT_DETAILS_RESET });\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={\r\n        product.countInStock === 0 ? \"product out-of-stock\" : \"product\"\r\n      }\r\n    >\r\n      <div onClick={handleProductDetailsLink} className=\"product__card\">\r\n        {product.onOffer ? (\r\n          <div className=\"product__discount-message\">\r\n            -{product.offerPriceDiscount}%\r\n          </div>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        <div className=\"product__image-container\">\r\n          <img className=\"product__image\" src={product.image} alt=\"\" />\r\n        </div>\r\n        <h3 className=\"heading-4 heading-4--center product__title\">\r\n          {product.name}\r\n        </h3>\r\n        <div className=\"product__bottom\">\r\n          <span className=\"product__price-text\">\r\n            {product.onOffer ? (\r\n              <strong>\r\n                <s style={{ fontSize: \"1.3rem\" }}> € {product.price}</s>&nbsp; €{\" \"}\r\n                {roundToTwo(\r\n                  product.price -\r\n                    product.price * (product.offerPriceDiscount / 100)\r\n                )}{\" \"}\r\n              </strong>\r\n            ) : (\r\n              <strong>\r\n                {\" \"}\r\n                €{\" \"}\r\n                {roundToTwo(\r\n                  product.price -\r\n                    product.price * (product.offerPriceDiscount / 100)\r\n                )}{\" \"}\r\n              </strong>\r\n            )}\r\n          </span>\r\n        </div>\r\n        <div className=\"product__center mt-xs\">\r\n          <span className=\"product__rating-text\"></span>\r\n          <div className=\"product__rating-stars\">\r\n            <span className=\"product__rating-text\">\r\n              <strong>{roundToTwo(product.rating)}</strong> (\r\n              {product.numReviews})\r\n            </span>\r\n            <StarRatings\r\n              rating={product.rating}\r\n              starDimension=\"1.2rem\"\r\n              starSpacing=\".25rem\"\r\n              starRatedColor=\"rgb(255, 180, 3)\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {like ? (\r\n        <span\r\n          onClick={() => {\r\n            removeFromFavoriteHandler(product._id);\r\n          }}\r\n          title=\"Remove from Favorites\"\r\n        >\r\n          <FaHeart className=\"product__heart product__heart--selected\" />\r\n        </span>\r\n      ) : (\r\n        <span\r\n          onClick={async () => {\r\n            handleAddUserToLikedArrayAndProductToFavorites(product._id);\r\n          }}\r\n          title=\"Add to Favorites\"\r\n        >\r\n          <FaHeart className=\"product__heart\" />\r\n        </span>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Product;\r\n","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\loader-generic\\LoaderGeneric.js",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\profile-orders\\ProfileOrders.js",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\order-of-orders\\OrderOfOrders.js",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\add-review\\AddReview.js",["270"],"//! Core\r\nimport React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useHistory, useLocation, useRouteMatch } from \"react-router-dom\";\r\n\r\n//! Components\r\nimport ErrorMessage from \"../error-message/ErrorMessage.js\";\r\nimport Rating from \"@material-ui/lab/Rating\";\r\n\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\n//! Redux Actions\r\nimport {\r\n  createProductReview,\r\n  listProductDetails,\r\n} from \"../../redux/product/product.actions\";\r\nimport { productConstants } from \"../../redux/product/product.constants\";\r\n\r\n//! Icons\r\nimport { AiOutlinePlus } from \"react-icons/ai\";\r\nimport { BiMessageAdd } from \"react-icons/bi\";\r\nimport { BsFillBackspaceFill } from \"react-icons/bs\";\r\n\r\n//!==========================================================\r\nconst AddReview = ({ productId, showModal, style }) => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n\r\n  const productReviewCreateSelector = useSelector(\r\n    (state) => state.productReviewCreate\r\n  );\r\n  const { success, error } = productReviewCreateSelector;\r\n\r\n  const [addReviewShow, setAddReviewShow] = useState(showModal);\r\n  const [hover, setHover] = useState(-1);\r\n  const [starValue, setStarValue] = useState(0);\r\n  const [textFieldValue, setTextFieldValue] = useState(\"\");\r\n  const [title, setTitle] = useState(\"\");\r\n\r\n  const addReviewHandler = () => {\r\n    setAddReviewShow(!addReviewShow);\r\n  };\r\n  const labels = {\r\n    1: \"Useless\",\r\n\r\n    2: \"Poor\",\r\n\r\n    3: \"Ok\",\r\n\r\n    4: \"Good\",\r\n\r\n    5: \"Excellent\",\r\n  };\r\n  const submitReviewHandler = () => {\r\n    const review = {\r\n      title: title,\r\n      rating: starValue,\r\n      comment: textFieldValue,\r\n    };\r\n    dispatch(createProductReview(productId, review));\r\n    if (location.pathname === `/product/${productId}`) {\r\n      dispatch(listProductDetails(productId));\r\n    } else {\r\n      dispatch({ type: productConstants.PRODUCT_DETAILS_RESET });\r\n      history.push(`/product/${productId}`);\r\n    }\r\n\r\n    setAddReviewShow(false);\r\n  };\r\n\r\n  return (\r\n    <div style={style} className=\"add-review mt-sm\">\r\n      {error ? <ErrorMessage color=\"alert\">{error}</ErrorMessage> : \"\"}\r\n      {success ? <ErrorMessage color=\"success\">{success}</ErrorMessage> : \"\"}\r\n      {addReviewShow ? (\r\n        <div className=\"add-review__submit-flex\">\r\n          <button onClick={submitReviewHandler} className=\"add-review__button\">\r\n            <BiMessageAdd style={{ fontSize: \"1.8rem\" }} />\r\n            &nbsp; Submit Review\r\n          </button>\r\n          <BsFillBackspaceFill\r\n            onClick={() => setAddReviewShow(false)}\r\n            className=\"add-review__cancel-review ml-sm\"\r\n            title=\"Cancel writing review\"\r\n          />\r\n        </div>\r\n      ) : (\r\n        <button onClick={addReviewHandler} className=\"add-review__button\">\r\n          <AiOutlinePlus style={{ fontSize: \"1.8rem\" }} />\r\n          &nbsp; Add Review\r\n        </button>\r\n      )}\r\n      {addReviewShow ? (\r\n        <div className=\"add-review__whole-body\">\r\n          <form>\r\n            <div className=\"add-review__star-select mt-sm mb-sm\">\r\n              <h4 className=\"heading-4 \">Select Rating &nbsp;</h4>\r\n              <Rating\r\n                size=\"large\"\r\n                name=\"hover-feedback\"\r\n                value={starValue}\r\n                precision={1}\r\n                onChange={(event, newstarValue) => {\r\n                  setStarValue(newstarValue);\r\n                }}\r\n                onChangeActive={(event, newHover) => {\r\n                  setHover(newHover);\r\n                }}\r\n              />\r\n              {starValue !== null && (\r\n                <Box style={{ fontSize: \"1.4rem\" }} ml={2}>\r\n                  {labels[hover !== -1 ? hover : starValue]}\r\n                </Box>\r\n              )}\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"review-title\">\r\n                <h4 className=\"heading-4 mb-xs\"> Add a title</h4>\r\n                <input\r\n                  className=\"add-review__title mb-sm\"\r\n                  name=\"review-title\"\r\n                  type=\"text\"\r\n                  placeholder=\"What is the most important ?\"\r\n                  value={title}\r\n                  onChange={(e) => setTitle(e.target.value)}\r\n                />\r\n              </label>\r\n\r\n              <label htmlFor=\"review-title\">\r\n                <h4 className=\"heading-4 mb-xs\"> Add a written review</h4>\r\n                <textarea\r\n                  className=\"add-review__text-field\"\r\n                  name=\"rating-text\"\r\n                  id=\"\"\r\n                  rows=\"7\"\r\n                  value={textFieldValue}\r\n                  placeholder=\"What did you like and what you did not?\"\r\n                  onChange={(e) => setTextFieldValue(e.target.value)}\r\n                ></textarea>\r\n              </label>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddReview;\r\n","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\review\\Review.js",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\searchbox\\SearchBox.js",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\profile-reviews-screen\\ProfileReviews.js",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\shop\\Shop.js",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\product-filter\\ProductFilter.js",["271"],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\home-page\\HomePage.js",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\carousel-products\\CarouselProductShow.js",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\category-screen\\ProductCategory.js",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\search-results\\SearchResults.js",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\modals\\address-edit-modal\\AddressEdit.js",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\modals\\product-review-modal\\ProductReviewModal.js",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\order-item\\OrderItem.js",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\deals-screen\\DealsScreen.js",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\sidebar\\Sidebar.js",[],{"ruleId":"272","replacedBy":"273"},{"ruleId":"274","replacedBy":"275"},{"ruleId":"276","severity":1,"message":"277","line":75,"column":26,"nodeType":"278","messageId":"279","endLine":75,"endColumn":58},{"ruleId":"276","severity":1,"message":"277","line":175,"column":26,"nodeType":"278","messageId":"279","endLine":175,"endColumn":55},{"ruleId":"280","severity":1,"message":"281","line":48,"column":56,"nodeType":"282","messageId":"283","endLine":48,"endColumn":58},{"ruleId":"284","severity":1,"message":"285","line":24,"column":33,"nodeType":"286","messageId":"287","endLine":24,"endColumn":39},{"ruleId":"272","replacedBy":"288"},{"ruleId":"274","replacedBy":"289"},{"ruleId":"272","replacedBy":"290"},{"ruleId":"274","replacedBy":"291"},{"ruleId":"292","severity":1,"message":"293","line":34,"column":9,"nodeType":"294","endLine":34,"endColumn":36},{"ruleId":"284","severity":1,"message":"295","line":17,"column":10,"nodeType":"286","messageId":"287","endLine":17,"endColumn":22},{"ruleId":"284","severity":1,"message":"296","line":18,"column":10,"nodeType":"286","messageId":"287","endLine":18,"endColumn":15},{"ruleId":"284","severity":1,"message":"297","line":18,"column":17,"nodeType":"286","messageId":"287","endLine":18,"endColumn":25},{"ruleId":"284","severity":1,"message":"298","line":19,"column":10,"nodeType":"286","messageId":"287","endLine":19,"endColumn":17},{"ruleId":"280","severity":1,"message":"281","line":34,"column":46,"nodeType":"282","messageId":"283","endLine":34,"endColumn":48},{"ruleId":"284","severity":1,"message":"299","line":4,"column":35,"nodeType":"286","messageId":"287","endLine":4,"endColumn":48},{"ruleId":"284","severity":1,"message":"300","line":1,"column":17,"nodeType":"286","messageId":"287","endLine":1,"endColumn":25},"no-native-reassign",["301"],"no-negated-in-lhs",["302"],"no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'scroll' is defined but never used.","Identifier","unusedVar",["301"],["302"],["301"],["302"],"jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","'successColor' is assigned a value but never used.","'error' is assigned a value but never used.","'setError' is assigned a value but never used.","'message' is assigned a value but never used.","'useRouteMatch' is defined but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]