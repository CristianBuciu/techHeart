[{"/home/devox/projects/techHeart/frontend/src/index.js":"1","/home/devox/projects/techHeart/frontend/src/App.js":"2","/home/devox/projects/techHeart/frontend/src/reportWebVitals.js":"3","/home/devox/projects/techHeart/frontend/src/components/header/Header.js":"4","/home/devox/projects/techHeart/frontend/src/components/footer/Footer.js":"5","/home/devox/projects/techHeart/frontend/src/screens/product-screen/ProductScreen.js":"6","/home/devox/projects/techHeart/frontend/src/screens/home-screen/HomeScreen.js":"7","/home/devox/projects/techHeart/frontend/src/components/product/Product.js":"8","/home/devox/projects/techHeart/frontend/src/redux/store.js":"9","/home/devox/projects/techHeart/frontend/src/components/loader/Loader.js":"10","/home/devox/projects/techHeart/frontend/src/components/error-message/ErrorMessage.js":"11","/home/devox/projects/techHeart/frontend/src/components/loader-product/LoaderProduct.js":"12","/home/devox/projects/techHeart/frontend/src/components/scroll-to-top/ScrollToTop.jsx":"13","/home/devox/projects/techHeart/frontend/src/redux/cart/cart.actions.js":"14","/home/devox/projects/techHeart/frontend/src/redux/product/product.reducers.js":"15","/home/devox/projects/techHeart/frontend/src/redux/product/product.constants.js":"16","/home/devox/projects/techHeart/frontend/src/redux/product/product.actions.js":"17","/home/devox/projects/techHeart/frontend/src/redux/cart/cart.reducers.js":"18","/home/devox/projects/techHeart/frontend/src/redux/cart/cart.constants.js":"19","/home/devox/projects/techHeart/frontend/src/components/cart-dropdown/CartDropdown.js":"20","/home/devox/projects/techHeart/frontend/src/screens/checkout/Checkout.js":"21","/home/devox/projects/techHeart/frontend/src/utils.js":"22","/home/devox/projects/techHeart/frontend/src/redux/user/user.reducers.js":"23","/home/devox/projects/techHeart/frontend/src/redux/user/user.constants.js":"24","/home/devox/projects/techHeart/frontend/src/screens/login/Login.js":"25","/home/devox/projects/techHeart/frontend/src/redux/user/user.actions.js":"26","/home/devox/projects/techHeart/frontend/src/screens/signup/Signup.js":"27","/home/devox/projects/techHeart/frontend/src/components/user-menu-dropdown/UserDropdown.js":"28","/home/devox/projects/techHeart/frontend/src/screens/profile/ProfileScreen.js":"29","/home/devox/projects/techHeart/frontend/src/screens/shipping-screen/ShippingScreen.js":"30","/home/devox/projects/techHeart/frontend/src/components/profile-sidebar/ProfileSidebar.js":"31","/home/devox/projects/techHeart/frontend/src/screens/address-edit/AddressEdit.js":"32","/home/devox/projects/techHeart/frontend/src/components/add-address/AddAddress.js":"33","/home/devox/projects/techHeart/frontend/src/screens/payment/PaymentScreen.js":"34","/home/devox/projects/techHeart/frontend/src/components/checkout-steps/CheckoutSteps.js":"35","/home/devox/projects/techHeart/frontend/src/redux/order/order.reducers.js":"36","/home/devox/projects/techHeart/frontend/src/redux/order/order.constants.js":"37","/home/devox/projects/techHeart/frontend/src/redux/order/order.actions.js":"38","/home/devox/projects/techHeart/frontend/src/screens/profile-addresses/ProfileAddresses.js":"39","/home/devox/projects/techHeart/frontend/src/screens/profile-info/YourInfo.js":"40","/home/devox/projects/techHeart/frontend/src/screens/profile-favorite/FavoriteScreen.js":"41","/home/devox/projects/techHeart/frontend/src/components/action-show/ActionShow.js":"42"},{"size":768,"mtime":1609806107518,"results":"43","hashOfConfig":"44"},{"size":1839,"mtime":1611792872003,"results":"45","hashOfConfig":"44"},{"size":362,"mtime":1609289486641,"results":"46","hashOfConfig":"44"},{"size":3302,"mtime":1611783373923,"results":"47","hashOfConfig":"44"},{"size":1222,"mtime":1611236083873,"results":"48","hashOfConfig":"44"},{"size":9215,"mtime":1611811152913,"results":"49","hashOfConfig":"44"},{"size":1589,"mtime":1611622229100,"results":"50","hashOfConfig":"44"},{"size":4091,"mtime":1611791438593,"results":"51","hashOfConfig":"44"},{"size":2620,"mtime":1611793196833,"results":"52","hashOfConfig":"44"},{"size":611,"mtime":1609792335618,"results":"53","hashOfConfig":"44"},{"size":429,"mtime":1610600172017,"results":"54","hashOfConfig":"44"},{"size":420,"mtime":1609802173658,"results":"55","hashOfConfig":"44"},{"size":347,"mtime":1608667914500,"results":"56","hashOfConfig":"44"},{"size":1827,"mtime":1611790841613,"results":"57","hashOfConfig":"44"},{"size":1011,"mtime":1611793059993,"results":"58","hashOfConfig":"44"},{"size":339,"mtime":1610295786727,"results":"59","hashOfConfig":"44"},{"size":1537,"mtime":1610383000163,"results":"60","hashOfConfig":"44"},{"size":886,"mtime":1611781542573,"results":"61","hashOfConfig":"44"},{"size":626,"mtime":1611779362563,"results":"62","hashOfConfig":"44"},{"size":4782,"mtime":1611803190673,"results":"63","hashOfConfig":"44"},{"size":5168,"mtime":1611806899853,"results":"64","hashOfConfig":"44"},{"size":95,"mtime":1610120577055,"results":"65","hashOfConfig":"44"},{"size":5019,"mtime":1611636175250,"results":"66","hashOfConfig":"44"},{"size":1318,"mtime":1611609912480,"results":"67","hashOfConfig":"44"},{"size":2705,"mtime":1611650915700,"results":"68","hashOfConfig":"44"},{"size":7730,"mtime":1611642752280,"results":"69","hashOfConfig":"44"},{"size":5806,"mtime":1610598213117,"results":"70","hashOfConfig":"44"},{"size":1461,"mtime":1611635828410,"results":"71","hashOfConfig":"44"},{"size":1250,"mtime":1611613548490,"results":"72","hashOfConfig":"44"},{"size":4225,"mtime":1611369003040,"results":"73","hashOfConfig":"44"},{"size":4350,"mtime":1611810032303,"results":"74","hashOfConfig":"44"},{"size":5131,"mtime":1611624965120,"results":"75","hashOfConfig":"44"},{"size":4732,"mtime":1611133861117,"results":"76","hashOfConfig":"44"},{"size":352,"mtime":1611160992833,"results":"77","hashOfConfig":"44"},{"size":1815,"mtime":1611188279912,"results":"78","hashOfConfig":"44"},{"size":306,"mtime":1611166968363,"results":"79","hashOfConfig":"44"},{"size":84,"mtime":1611166242503,"results":"80","hashOfConfig":"44"},{"size":512,"mtime":1611167702103,"results":"81","hashOfConfig":"44"},{"size":4241,"mtime":1611623026800,"results":"82","hashOfConfig":"44"},{"size":8709,"mtime":1611369003300,"results":"83","hashOfConfig":"44"},{"size":4439,"mtime":1611811285283,"results":"84","hashOfConfig":"44"},{"size":592,"mtime":1611811074503,"results":"85","hashOfConfig":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"19vth6p",{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"88"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"88"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"88"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"88"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"88"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"88"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"88"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"88"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"88"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"88"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"88"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"88"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"/home/devox/projects/techHeart/frontend/src/index.js",[],["183","184"],"/home/devox/projects/techHeart/frontend/src/App.js",["185","186"],"import React, { useEffect } from \"react\";\nimport Header from \"./components/header/Header\";\nimport Footer from \"./components/footer/Footer\";\nimport HomeScreen from \"./screens/home-screen/HomeScreen\";\nimport { Route } from \"react-router-dom\";\nimport ProductScreen from \"./screens/product-screen/ProductScreen\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { toggleCartShow } from \"./redux/cart/cart.actions.js\";\nimport Login from \"./screens/login/Login.js\";\nimport Signup from \"./screens/signup/Signup.js\";\nimport ProfileScreen from \"./screens/profile/ProfileScreen.js\";\nimport ShippingScreen from \"./screens/shipping-screen/ShippingScreen.js\";\nimport PaymentScreen from \"./screens/payment/PaymentScreen\";\n\n//!==================================================================\nfunction App() {\n  const dispatch = useDispatch();\n  const showCart = useSelector((state) => state.cartToggle.showCart);\n  const overlayClickHandler = () => {\n    dispatch(toggleCartShow());\n  };\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  return (\n    <>\n      <Header />\n      <main className=\"app-main\">\n        {\" \"}\n        {showCart ? (\n          <div onClick={overlayClickHandler} className=\"overlay\">\n            {\" \"}\n          </div>\n        ) : null}{\" \"}\n        <Route exact path=\"/shop\" render={() => <HomeScreen />} />{\" \"}\n        <Route path=\"/product/:id\" component={ProductScreen} />{\" \"}\n        <Route path=\"/login\" component={Login} />{\" \"}\n        <Route path=\"/register\" component={Signup} />{\" \"}\n        <Route path=\"/profile\" component={ProfileScreen} />{\" \"}\n        <Route path=\"/shipping\" component={ShippingScreen} />{\" \"}\n        <Route path=\"/payment\" component={PaymentScreen} />{\" \"}\n      </main>{\" \"}\n      <Footer />\n    </>\n  );\n}\n\nexport default App;\n","/home/devox/projects/techHeart/frontend/src/reportWebVitals.js",[],"/home/devox/projects/techHeart/frontend/src/components/header/Header.js",["187"],"import React from \"react\";\r\nimport \"./Header.scss\";\r\nimport { GiTechnoHeart } from \"react-icons/gi\";\r\nimport { TiShoppingCart, TiUserOutline } from \"react-icons/ti\";\r\nimport { FaHeart } from \"react-icons/fa\";\r\nimport { IoMdArrowDropdown } from \"react-icons/io\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport CartDropdown from \"../cart-dropdown/CartDropdown.js\";\r\nimport { toggleCartShow } from \"../../redux/cart/cart.actions.js\";\r\nimport UserDropdown from \"../user-menu-dropdown/UserDropdown.js\";\r\nimport { toggleUserMenuShow } from \"../../redux/user/user.actions.js\";\r\n//!==============================================================\r\n\r\nconst Header = () => {\r\n  const techTitle = \"Cyber Heart\";\r\n  const dispatch = useDispatch();\r\n  const cartToggle = useSelector((state) => state.cartToggle.showCart);\r\n  const cartItems = useSelector((state) => state.cart);\r\n  const { loading, cartProducts } = cartItems;\r\n  const cartItemsNumber = cartProducts.reduce(\r\n    (accum, cartItem) => accum + cartItem.quantity,\r\n    0\r\n  );\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const dropdownShow = useSelector((state) => state.showUserMenu);\r\n  const { showUserMenu } = dropdownShow;\r\n\r\n  return (\r\n    <header className=\"header\">\r\n      <nav className=\"nav\">\r\n        <div className=\"nav__logo-container\">\r\n          <GiTechnoHeart className=\"nav__logo\" />{\" \"}\r\n          <Link to=\"/\">\r\n            <h2 className=\"nav__title\">{techTitle}</h2>\r\n          </Link>\r\n        </div>\r\n        <div className=\"nav__links-container\">\r\n          <NavLink\r\n            activeClassName=\"nav__link--active\"\r\n            className=\"nav__link\"\r\n            to=\"/shop\"\r\n          >\r\n            SHOP\r\n          </NavLink>\r\n        </div>\r\n        <div className=\"nav__icons-container\">\r\n          <NavLink\r\n            activeClassName=\"nav__icon nav__icon--heart--active\"\r\n            className=\"nav__icon nav__icon--heart\"\r\n            to=\"/profile/favorites\"\r\n          >\r\n            {\" \"}\r\n            <FaHeart />\r\n          </NavLink>\r\n          <div\r\n            onClick={() => dispatch(toggleCartShow())}\r\n            className=\"nav__icon nav__icon--cart\"\r\n          >\r\n            {\" \"}\r\n            <TiShoppingCart />\r\n            <span className=\"nav__cart-items-number\">{cartItemsNumber}</span>\r\n          </div>\r\n          {cartToggle ? <CartDropdown /> : null}\r\n          {userInfo ? (\r\n            <>\r\n              {\" \"}\r\n              <span\r\n                className=\"nav__welcome-message\"\r\n                onClick={() => dispatch(toggleUserMenuShow())}\r\n              >\r\n                Your menu &nbsp;\r\n                <IoMdArrowDropdown\r\n                  style={{ fontSize: \"2rem\" }}\r\n                  className={\r\n                    showUserMenu ? \"dropdown-arrow-class\" : \"dropdown-revert\"\r\n                  }\r\n                />\r\n              </span>\r\n              {showUserMenu ? <UserDropdown /> : null}\r\n            </>\r\n          ) : (\r\n            <Link className=\"nav__icon\" to=\"/login\">\r\n              {\" \"}\r\n              <TiUserOutline />\r\n            </Link>\r\n          )}\r\n        </div>\r\n      </nav>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","/home/devox/projects/techHeart/frontend/src/components/footer/Footer.js",[],"/home/devox/projects/techHeart/frontend/src/screens/product-screen/ProductScreen.js",["188","189"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport StarRatings from \"react-star-ratings\";\r\nimport { FaHeart } from \"react-icons/fa\";\r\nimport \"./ProductScreen.scss\";\r\nimport { TiShoppingCart } from \"react-icons/ti\";\r\nimport { AiOutlineCheckCircle, AiOutlineCloseCircle } from \"react-icons/ai\";\r\nimport axios from \"axios\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport LoaderProduct from \"../../components/loader-product/LoaderProduct.js\";\r\nimport { addToCart, getCartProducts } from \"../../redux/cart/cart.actions.js\";\r\nimport { listFavoriteProducts } from \"../../redux/user/user.actions.js\";\r\nimport ActionShow from \"../../components/action-show/ActionShow.js\";\r\n//!==================================================================\r\n\r\nconst ProductScreen = ({ match, history }) => {\r\n  const [like, setLike] = useState(false);\r\n  const [product, setProduct] = useState({ reviews: [], likedBy: [] });\r\n  const [loading, setLoading] = useState(true);\r\n  const [qty, setQty] = useState(1);\r\n  const [toCart, setToCart] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  //! Getting the state with redux hooks ============================\r\n\r\n  //?================================================================\r\n  const favoriteProductsList = useSelector(\r\n    (state) => state.userFavoriteProducts\r\n  );\r\n  const { userFavoriteProducts } = favoriteProductsList;\r\n  const isFavorite = userFavoriteProducts.find(\r\n    (favoriteProduct) => favoriteProduct._id == product._id\r\n  );\r\n  //! Get the product by id from the API=============================\r\n  useEffect(async () => {\r\n    const { data } = await axios.get(`/api/products/${match.params.id}`);\r\n    setProduct(data);\r\n    setLoading(false);\r\n\r\n    if (isFavorite) {\r\n      setLike(true);\r\n    } else {\r\n      setLike(false);\r\n    }\r\n    return () => clearTimeout();\r\n  }, [match, isFavorite]);\r\n  //?==================================================================\r\n  //!Handlers =========================================================\r\n  const addToCartHandler = () => {\r\n    dispatch(addToCart(match.params.id, Number(qty)));\r\n    dispatch(getCartProducts());\r\n    setToCart(true);\r\n    setTimeout(() => {\r\n      setToCart(false);\r\n    }, 3100);\r\n  };\r\n\r\n  const handleAddUserToLikedArrayAndProductToFavorites = async (id) => {\r\n    try {\r\n      if (!userInfo) {\r\n        history.push(\"/login\");\r\n      } else {\r\n        const config = {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${userInfo.token}`,\r\n          },\r\n        };\r\n        await axios.put(`/api/products/`, { _id: id }, config);\r\n        await axios.post(`/api/users/profile/favorites`, { _id: id }, config);\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const removeFromFavoriteHandler = (id) => {\r\n    const deleteProduct = async () => {\r\n      try {\r\n        const config = {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${userInfo.token}`,\r\n          },\r\n        };\r\n        await axios.delete(`/api/users/profile/favorites/${id}`, config);\r\n\r\n        dispatch(listFavoriteProducts());\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    deleteProduct();\r\n  };\r\n\r\n  const likedByNumber = product.likedBy.length;\r\n\r\n  //?==================================================================\r\n  return (\r\n    <>\r\n      {toCart ? <ActionShow /> : null}\r\n      <div className=\" top-links mb-sm\">\r\n        {\" \"}\r\n        <Link className=\"product-screen__link\" to=\"/\">\r\n          &#10092;&#10092; Home\r\n        </Link>\r\n        <Link className=\"product-screen__link\" to=\"/shop\">\r\n          &#10092;&#10092; Shop\r\n        </Link>\r\n      </div>\r\n      {loading ? (\r\n        <LoaderProduct />\r\n      ) : (\r\n        <div className=\"product-screen__body\">\r\n          <h1 className=\"product-screen__name\">{product.name}</h1>\r\n          <div className=\"product-screen__image-wrapper\">\r\n            <img\r\n              className=\"product-screen__image\"\r\n              src={product.image}\r\n              alt=\"product\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"product-screen__price\">\r\n            <h4 className=\" product-screen__price--title\">PRICE</h4>\r\n            <span className=\" product-screen__price--value\">\r\n              $ {product.price}\r\n            </span>\r\n            {product.countInStock > 0 ? (\r\n              <p className=\"product-screen__stock\">\r\n                <AiOutlineCheckCircle />\r\n                &nbsp;&nbsp;Product is in stock\r\n              </p>\r\n            ) : (\r\n              <p className=\"product-screen__stock product-screen__stock--out\">\r\n                <AiOutlineCloseCircle />\r\n                &nbsp;&nbsp; Product out of stock\r\n              </p>\r\n            )}\r\n\r\n            {product.countInStock > 0 && (\r\n              <div className=\"product-screen__quantity-selector\">\r\n                <form action=\"\">\r\n                  <label\r\n                    className=\"product-screen__quantity-selector--text\"\r\n                    htmlFor=\"quantity\"\r\n                  >\r\n                    Select quantity\r\n                  </label>\r\n                  <select\r\n                    className=\"product-screen__quantity-selector--selection\"\r\n                    value={qty}\r\n                    name=\"quantity\"\r\n                    id=\"quantity\"\r\n                    onChange={(e) => setQty(e.target.value)}\r\n                  >\r\n                    {[...Array(product.countInStock).keys()].map((el) => (\r\n                      <option\r\n                        className=\"product-screen__quantity-selector--option\"\r\n                        key={el + 1}\r\n                        value={el + 1}\r\n                      >\r\n                        {el + 1}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </form>\r\n              </div>\r\n            )}\r\n            {product.countInStock === 0 ? (\r\n              <button className=\"product-screen__button-disabled\">\r\n                {\" \"}\r\n                <TiShoppingCart className=\"product-screen__button--icon\" /> out\r\n                of stock{\" \"}\r\n              </button>\r\n            ) : (\r\n              <button\r\n                onClick={async () => addToCartHandler()}\r\n                className=\"product-screen__button\"\r\n              >\r\n                <TiShoppingCart className=\"product-screen__button--icon\" /> Add\r\n                to cart\r\n              </button>\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"product-screen__rating\">\r\n            <span className=\"product__rating-text\">\r\n              User Rating:&nbsp;&nbsp;&nbsp;\r\n              <strong>{product.rating}</strong> ({product.numReviews} reviews)\r\n            </span>\r\n            <StarRatings\r\n              className=\"product-screen__rating-stars\"\r\n              rating={product.rating}\r\n              starDimension=\"2rem\"\r\n              starSpacing=\".25rem\"\r\n              starRatedColor=\"rgb(255, 180, 3)\"\r\n            />\r\n          </div>\r\n          <div className=\"product-screen__add-favorite\">\r\n            {like ? (\r\n              <div className=\"product-screen__add-favorite--flex\">\r\n                <FaHeart\r\n                  onClick={async () => {\r\n                    await removeFromFavoriteHandler(product._id);\r\n                    await dispatch(listFavoriteProducts());\r\n                  }}\r\n                  className=\"product-screen__heart product-screen__heart--selected\"\r\n                />\r\n                <span className=\"product-screen__add-favorite--text ml-sm\">\r\n                  FAVORITE PRODUCT\r\n                </span>{\" \"}\r\n              </div>\r\n            ) : (\r\n              <div className=\"product-screen__add-favorite--flex\">\r\n                <FaHeart\r\n                  onClick={async () => {\r\n                    await handleAddUserToLikedArrayAndProductToFavorites(\r\n                      product._id\r\n                    );\r\n                    await dispatch(listFavoriteProducts());\r\n                  }}\r\n                  className=\"product-screen__heart\"\r\n                />\r\n                <span className=\"product-screen__add-favorite--text ml-sm\">\r\n                  ADD TO FAVORITES\r\n                </span>\r\n              </div>\r\n            )}\r\n            <span className=\"product-screen__add-favorite--favorite-by\">\r\n              {\" \"}\r\n              ( Favorite by {likedByNumber}{\" \"}\r\n              {likedByNumber > 1 ? \"users\" : \"user\"} )\r\n            </span>\r\n          </div>\r\n          <div className=\"product-screen__details\">\r\n            <h3 className=\"heading-3 product-screen__product-description-title\">\r\n              {\" \"}\r\n              <strong>PRODUCT DESCRIPTION</strong>{\" \"}\r\n            </h3>\r\n            <p className=\"product-screen__details--text\">\r\n              {product.description}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductScreen;\r\n","/home/devox/projects/techHeart/frontend/src/screens/home-screen/HomeScreen.js",[],"/home/devox/projects/techHeart/frontend/src/components/product/Product.js",["190","191","192"],"import React, { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport \"./Product.scss\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport StarRatings from \"react-star-ratings\";\r\n\r\nimport { FaHeart } from \"react-icons/fa\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { listFavoriteProducts } from \"../../redux/user/user.actions.js\";\r\nimport { ErrorMessage } from \"../error-message/ErrorMessage.js\";\r\nimport axios from \"axios\";\r\n//!==================================================================\r\nconst Product = ({ product }) => {\r\n  const dispatch = useDispatch();\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const history = useHistory();\r\n\r\n  const [like, setLike] = useState(false);\r\n\r\n  const favoriteProductsList = useSelector(\r\n    (state) => state.userFavoriteProducts\r\n  );\r\n  const { userFavoriteProducts } = favoriteProductsList;\r\n  const isFavorite = userFavoriteProducts.find(\r\n    (favoriteProduct) => favoriteProduct._id == product._id\r\n  );\r\n  useEffect(() => {\r\n    if (isFavorite) {\r\n      setLike(true);\r\n    } else {\r\n      setLike(false);\r\n    }\r\n  }, [isFavorite]);\r\n\r\n  const handleAddUserToLikedArrayAndProductToFavorites = async (id) => {\r\n    try {\r\n      if (!userInfo) {\r\n        history.push(\"/login\");\r\n      } else {\r\n        const config = {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${userInfo.token}`,\r\n          },\r\n        };\r\n        await axios.put(`/api/products/`, { _id: id }, config);\r\n        await axios.post(`/api/users/profile/favorites`, { _id: id }, config);\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const removeFromFavoriteHandler = (id) => {\r\n    const deleteProduct = async () => {\r\n      try {\r\n        const config = {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${userInfo.token}`,\r\n          },\r\n        };\r\n        await axios.delete(`/api/users/profile/favorites/${id}`, config);\r\n\r\n        dispatch(listFavoriteProducts());\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    deleteProduct();\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={\r\n        product.countInStock === 0 ? \"product out-of-stock\" : \"product\"\r\n      }\r\n    >\r\n      <Link className=\"product__card\" to={`/product/${product._id}`}>\r\n        <div className=\"product__image-container\">\r\n          <img className=\"product__image\" src={product.image} alt=\"\" />\r\n        </div>\r\n        <h3 className=\"heading-4 heading-4--center product__title\">\r\n          {product.name}\r\n        </h3>\r\n        <div className=\"product__center\">\r\n          <span className=\"product__rating-text\">Rating:</span>\r\n          <div className=\"product__rating-stars\">\r\n            <span className=\"product__rating-text\">\r\n              <strong>{product.rating}</strong> ({product.numReviews})\r\n            </span>\r\n            <StarRatings\r\n              rating={product.rating}\r\n              starDimension=\"1.2rem\"\r\n              starSpacing=\".25rem\"\r\n              starRatedColor=\"rgb(255, 180, 3)\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"product__bottom\">\r\n          <span className=\"product__price-text\">Price: </span>\r\n          <span className=\"product__price-text\">\r\n            <strong>${product.price}</strong>\r\n          </span>\r\n        </div>\r\n      </Link>\r\n      {like ? (\r\n        <FaHeart\r\n          onClick={async () => {\r\n            await removeFromFavoriteHandler(product._id);\r\n            await dispatch(listFavoriteProducts());\r\n          }}\r\n          className=\"product__heart product__heart--selected\"\r\n        />\r\n      ) : (\r\n        <FaHeart\r\n          onClick={async () => {\r\n            await handleAddUserToLikedArrayAndProductToFavorites(product._id);\r\n            await dispatch(listFavoriteProducts());\r\n          }}\r\n          className=\"product__heart\"\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Product;\r\n","/home/devox/projects/techHeart/frontend/src/redux/store.js",[],"/home/devox/projects/techHeart/frontend/src/components/loader/Loader.js",[],"/home/devox/projects/techHeart/frontend/src/components/error-message/ErrorMessage.js",[],"/home/devox/projects/techHeart/frontend/src/components/loader-product/LoaderProduct.js",[],"/home/devox/projects/techHeart/frontend/src/components/scroll-to-top/ScrollToTop.jsx",[],"/home/devox/projects/techHeart/frontend/src/redux/cart/cart.actions.js",[],"/home/devox/projects/techHeart/frontend/src/redux/product/product.reducers.js",[],"/home/devox/projects/techHeart/frontend/src/redux/product/product.constants.js",[],"/home/devox/projects/techHeart/frontend/src/redux/product/product.actions.js",[],"/home/devox/projects/techHeart/frontend/src/redux/cart/cart.reducers.js",[],"/home/devox/projects/techHeart/frontend/src/redux/cart/cart.constants.js",[],"/home/devox/projects/techHeart/frontend/src/components/cart-dropdown/CartDropdown.js",["193"],"import React, { useRef, useEffect } from \"react\";\r\nimport \"./CartDropdown.scss\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { TweenMax, Power3 } from \"gsap\";\r\nimport { toggleCartShow } from \"../../redux/cart/cart.actions.js\";\r\nimport { roundToTwo } from \"../../utils.js\";\r\nimport { getCartProducts } from \"../../redux/cart/cart.actions.js\";\r\nimport axios from \"axios\";\r\nimport { AiOutlineDelete } from \"react-icons/ai\";\r\n//!========================================================================\r\n//!========================================================================\r\n//!========================================================================\r\nconst CartDropdown = () => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const cartItems = useSelector((state) => state.cart);\r\n  const { loading, cartProducts } = cartItems;\r\n\r\n  //! CALCULATE TOTAL NUMBER OF PRODUCTS IN CART ===========================\r\n  const cartItemsNumber = cartProducts.reduce(\r\n    (accum, cartItem) => accum + cartItem.quantity,\r\n    0\r\n  );\r\n  const subtotal = cartProducts.reduce(\r\n    (accum, cartItem) => accum + cartItem.quantity * cartItem.product.price,\r\n    0\r\n  );\r\n\r\n  //! GO TO CHECKOUT PAGE LINK =============================================\r\n  const checkoutClickHandler = () => {\r\n    dispatch(toggleCartShow());\r\n  };\r\n  //! GO TO THE PRODUCT PAGE LINK ==========================================\r\n  const goToProductPage = (id) => {\r\n    history.push(`/product/${id}`);\r\n    dispatch(toggleCartShow());\r\n  };\r\n\r\n  //! FADE IN ANIMATION  ====================================================\r\n  //TODO ADD GSAP OR SPRING FOR THE UNMOUNT ANIMATION =======================\r\n  const cartRef = useRef(null);\r\n  useEffect(() => {\r\n    TweenMax.to(cartRef.current, 0.8, {\r\n      opacity: 1,\r\n      x: 0,\r\n      ease: Power3.easeOut,\r\n    });\r\n    dispatch(getCartProducts());\r\n  }, [dispatch]);\r\n\r\n  //! REMOVE PRODUCT FROM CART ==============================================\r\n\r\n  const removeCartProduct = (id) => {\r\n    const deleteProduct = async () => {\r\n      try {\r\n        const config = {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${userInfo.token}`,\r\n          },\r\n        };\r\n        await axios.delete(`/api/cart/${id}`, config);\r\n\r\n        dispatch(getCartProducts());\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    deleteProduct();\r\n  };\r\n\r\n  return (\r\n    <div ref={cartRef} className=\"cart\">\r\n      <div className=\"cart__top\">\r\n        <h3 className=\"cart__top--text\">\r\n          You have {cartItemsNumber} items in your cart\r\n        </h3>\r\n      </div>\r\n      {cartProducts.map((item) => (\r\n        <div key={item.product._id} className=\"cart__item\">\r\n          <div className=\"cart__item--image-container\">\r\n            <img\r\n              onClick={() => goToProductPage(item.product._id)}\r\n              src={item.product.image}\r\n              alt={item.product.name}\r\n              className=\"cart__item--image\"\r\n            />\r\n          </div>\r\n          <div className=\"cart__details\">\r\n            <h3 className=\"cart__details--title\">\r\n              {item.product.name}{\" \"}\r\n              <AiOutlineDelete\r\n                onClick={() => removeCartProduct(item._id)}\r\n                className=\"cart__details--delete\"\r\n              />\r\n            </h3>\r\n            <h3 className=\"cart__details--price\">\r\n              Price: &nbsp;\r\n              <span className=\"cart__details--price-value\">\r\n                {item.product.price}\r\n              </span>\r\n            </h3>\r\n            <h3 className=\"cart__details--quantity\">\r\n              Quantity:&nbsp;\r\n              <span className=\"cart__details--quantity-value\">\r\n                {item.quantity}\r\n              </span>\r\n            </h3>\r\n            <h3 className=\"cart__details--total\">TOTAL:</h3>\r\n            <h3 className=\"cart__details--total-value\">\r\n              {roundToTwo(item.quantity * item.product.price)}\r\n            </h3>\r\n          </div>\r\n        </div>\r\n      ))}\r\n      <div className=\"cart__subtotal\">\r\n        <h2 className=\"cart__subtotal--text\">SUBTOTAL:</h2>\r\n        <h2 className=\"cart__subtotal--value\">{roundToTwo(subtotal)}</h2>\r\n      </div>\r\n      <div className=\"cart__checkout\">\r\n        <Link to=\"/profile/checkout\">\r\n          <button\r\n            onClick={checkoutClickHandler}\r\n            className=\"cart__checkout--btn\"\r\n          >\r\n            Go to checkout\r\n          </button>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CartDropdown;\r\n","/home/devox/projects/techHeart/frontend/src/screens/checkout/Checkout.js",["194","195","196"],"import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { addToCart } from \"../../redux/cart/cart.actions.js\";\r\nimport \"./Checkout.scss\";\r\nimport { roundToTwo } from \"../../utils.js\";\r\nimport axios from \"axios\";\r\nimport { getCartProducts } from \"../../redux/cart/cart.actions.js\";\r\n\r\n//!=======================================================\r\nconst Checkout = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n  const cartItems = useSelector((state) => state.cart);\r\n  const { loading, cartProducts } = cartItems;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const cartItemsNumber = cartProducts.reduce(\r\n    (accum, cartItem) => accum + cartItem.quantity,\r\n    0\r\n  );\r\n  const subtotal = cartProducts.reduce(\r\n    (accum, cartItem) => accum + cartItem.quantity * cartItem.product.price,\r\n    0\r\n  );\r\n\r\n  const removeCartProduct = (id) => {\r\n    const deleteProduct = async () => {\r\n      try {\r\n        const config = {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${userInfo.token}`,\r\n          },\r\n        };\r\n        await axios.delete(`/api/cart/${id}`, config);\r\n\r\n        dispatch(getCartProducts());\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    deleteProduct();\r\n  };\r\n\r\n  const checkoutHandler = () => {\r\n    history.push(\"/shipping\");\r\n  };\r\n  return (\r\n    <div className=\"checkout-screen\">\r\n      <h1 className=\"heading-1  \">CHECK OUT</h1>\r\n      <div className=\"checkout-screen__subtotal\">\r\n        <div>\r\n          <h3 className=\"checkout-screen__subtotal--title\">\r\n            Subtotal ({cartItemsNumber} products):\r\n          </h3>\r\n          <h3 className=\"checkout-screen__subtotal--value\">\r\n            € {roundToTwo(subtotal)}\r\n          </h3>\r\n        </div>\r\n        {cartItems.length === 0 ? (\r\n          <button className=\" btn-disabled\">Cart is empty</button>\r\n        ) : (\r\n          <button\r\n            onClick={() => {\r\n              checkoutHandler();\r\n            }}\r\n            className=\"checkout-screen__subtotal--button\"\r\n          >\r\n            Proceed to checkout\r\n          </button>\r\n        )}\r\n      </div>\r\n      <h2 className=\"checkout-screen__item-count\">\r\n        You have {cartItemsNumber} items in your cart.\r\n      </h2>\r\n      {cartProducts.map((item) => (\r\n        <div key={item.product._id} className=\"checkout-screen__item\">\r\n          <img\r\n            src={item.product.image}\r\n            alt={item.product.name}\r\n            className=\"checkout-screen__image\"\r\n          />\r\n          <div className=\"checkout-screen__item-details\">\r\n            <h3 className=\"heading-3 checkout-screen__item-details--title\">\r\n              {item.product.name} x {item.quantity}\r\n            </h3>\r\n            {item.product.countInStock ? (\r\n              <h3 className=\"in-stock\">In stock</h3>\r\n            ) : (\r\n              <h3 className=\"out-of-stock-favorites\">Not in stock</h3>\r\n            )}\r\n            <h3 className=\"heading-3 checkout-screen__item-details--price\">\r\n              PRICE:\r\n            </h3>\r\n            <h3 className=\"heading-3 checkout-screen__item-details--price-value\">\r\n              € {item.product.price} &#10006;&nbsp;\r\n              {item.product.countInStock > 0 && (\r\n                <div className=\"product-screen__quantity-selector checkout-screen__quantity-selector\">\r\n                  <form action=\"\">\r\n                    <label\r\n                      className=\"product-screen__quantity-selector--text\"\r\n                      htmlFor=\"quantity\"\r\n                    >\r\n                      quantity\r\n                    </label>\r\n                    <select\r\n                      className=\"product-screen__quantity-selector--selection\"\r\n                      value={item.quantity}\r\n                      name=\"quantity\"\r\n                      id=\"quantity\"\r\n                      onChange={(e) => {\r\n                        dispatch(\r\n                          addToCart(item.product._id, Number(e.target.value))\r\n                        );\r\n                        dispatch(getCartProducts());\r\n                      }}\r\n                    >\r\n                      {[...Array(item.product.countInStock).keys()].map(\r\n                        (el) => (\r\n                          <option\r\n                            className=\"product-screen__quantity-selector--option\"\r\n                            key={el + 1}\r\n                            value={el + 1}\r\n                          >\r\n                            {el + 1}\r\n                          </option>\r\n                        )\r\n                      )}\r\n                    </select>\r\n                  </form>\r\n                </div>\r\n              )}\r\n            </h3>\r\n            <span\r\n              onClick={() => removeCartProduct(item._id)}\r\n              className=\"checkout-screen__remove\"\r\n            >\r\n              Remove\r\n            </span>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Checkout;\r\n","/home/devox/projects/techHeart/frontend/src/utils.js",[],"/home/devox/projects/techHeart/frontend/src/redux/user/user.reducers.js",[],"/home/devox/projects/techHeart/frontend/src/redux/user/user.constants.js",[],"/home/devox/projects/techHeart/frontend/src/screens/login/Login.js",["197"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport ErrorMessage from \"../../components/error-message/ErrorMessage.js\";\r\nimport { login } from \"../../redux/user/user.actions.js\";\r\nimport \"./Login.scss\";\r\n//!==========================================================\r\nconst Login = ({ location, history }) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { error, userInfo } = userLogin;\r\n\r\n  const redirect = location.search ? location.search.split(\"+\")[1] : \"/shop\";\r\n\r\n  //! Check if we are logged in so you get a redirect if you try to access the login route while logged in\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect);\r\n    }\r\n  }, [history, userInfo, redirect]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    //! Dispatch Login ====================\r\n    dispatch(login(email, password));\r\n  };\r\n  return (\r\n    <div className=\"login-screen\">\r\n      <div className=\"home-screen__top\">\r\n        <h1 className=\"heading-1  home-screen__title\">SIGNIN</h1>\r\n      </div>\r\n      {error && <ErrorMessage color=\"alert\">{error}</ErrorMessage>}\r\n\r\n      <div className=\"login-screen__form-container\">\r\n        <form className=\"login-screen__form\" onSubmit={submitHandler}>\r\n          <label className=\"login-screen__form--input-label\" htmlFor=\"email\">\r\n            Email Address\r\n          </label>\r\n          <input\r\n            placeholder=\"Enter email\"\r\n            className=\"login-screen__form--input\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            name=\"email\"\r\n            type=\"email\"\r\n          />\r\n          <label className=\"login-screen__form--input-label\" htmlFor=\"password\">\r\n            Password\r\n          </label>\r\n          <input\r\n            placeholder=\"Enter password\"\r\n            className=\"login-screen__form--input\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            name=\"password\"\r\n            type=\"password\"\r\n          />\r\n          <input\r\n            className=\"login-screen__form--submit-btn\"\r\n            type=\"submit\"\r\n            value=\"Sign In\"\r\n          />\r\n        </form>\r\n        <Link\r\n          className=\"login-screen__create-account-link\"\r\n          to={redirect ? \"/register?redirect=${redirect}\" : \"/register\"}\r\n        >\r\n          Don't have an account? Create one here.\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","/home/devox/projects/techHeart/frontend/src/redux/user/user.actions.js",[],"/home/devox/projects/techHeart/frontend/src/screens/signup/Signup.js",["198","199"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport ErrorMessage from \"../../components/error-message/ErrorMessage.js\";\r\nimport { register } from \"../../redux/user/user.actions.js\";\r\nimport \"./Signup.scss\";\r\n//!==========================================================\r\nconst Signup = ({ location, history }) => {\r\n  const redirect = location.search ? location.search.split(\"+\")[1] : \"/\";\r\n  const dispatch = useDispatch();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setconfirmPassword] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [message, setMessage] = useState(null);\r\n  const userRegister = useSelector((state) => state.userRegister);\r\n  const { loading, error, userInfo } = userRegister;\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect);\r\n    }\r\n  }, [history, userInfo, redirect]);\r\n  const passwordLength = password.length < 6 ? false : true;\r\n  const passwordLowercase = /[a-z]/.test(password) < 1 ? false : true;\r\n  const passwordUppercase = /[A-Z]/.test(password) < 1 ? false : true;\r\n  const passwordNumber = /[0-9]/.test(password) < 1 ? false : true;\r\n  const passwordEqualConfirmPassword =\r\n    password !== confirmPassword ? false : true;\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    //!Password check =====================\r\n\r\n    if (\r\n      passwordLength &&\r\n      passwordLowercase &&\r\n      passwordUppercase &&\r\n      passwordNumber &&\r\n      passwordEqualConfirmPassword\r\n    ) {\r\n      //! Dispatch Login ====================\r\n      dispatch(register(name, email, password));\r\n    } else {\r\n      setMessage(\"You must comply with all the password requisites.\");\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"login-screen\">\r\n      <div className=\"home-screen__top\">\r\n        <h1 className=\"heading-1  home-screen__title\">SIGNUP</h1>\r\n      </div>\r\n      {error && <ErrorMessage color=\"alert\">{error}</ErrorMessage>}\r\n\r\n      <div className=\"login-screen__form-container\">\r\n        <form className=\"login-screen__form\" onSubmit={submitHandler}>\r\n          <label className=\"login-screen__form--input-label\" htmlFor=\"name\">\r\n            Name\r\n          </label>\r\n          <input\r\n            placeholder=\"Enter name\"\r\n            className=\"login-screen__form--input\"\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n            name=\"name\"\r\n            type=\"text\"\r\n          />\r\n          <label className=\"login-screen__form--input-label\" htmlFor=\"email\">\r\n            Email\r\n          </label>\r\n          <input\r\n            placeholder=\"Enter email\"\r\n            className=\"login-screen__form--input\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            name=\"email\"\r\n            type=\"email\"\r\n          />\r\n          <label className=\"login-screen__form--input-label\" htmlFor=\"password\">\r\n            Password\r\n          </label>\r\n          <input\r\n            placeholder=\"Enter password\"\r\n            className=\"login-screen__form--input\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            name=\"password\"\r\n            type=\"password\"\r\n          />\r\n          <label\r\n            className=\"login-screen__form--input-label\"\r\n            htmlFor=\"confirmPassword\"\r\n          >\r\n            Confirm Password\r\n          </label>\r\n          <input\r\n            placeholder=\"Confirm password\"\r\n            className=\"login-screen__form--input\"\r\n            value={confirmPassword}\r\n            onChange={(e) => setconfirmPassword(e.target.value)}\r\n            name=\"confirmPassword\"\r\n            type=\"password\"\r\n          />\r\n          {message && <p className=\"signup__password-error\">{message}</p>}\r\n          <div className=\"signup__password-box\">\r\n            <h3>Password must:</h3>\r\n            <p\r\n              className={\r\n                passwordEqualConfirmPassword\r\n                  ? \"signup__password-box--fail\"\r\n                  : \"signup__password-box--checked\"\r\n              }\r\n            >\r\n              match Confirm Password\r\n            </p>\r\n            <p\r\n              className={\r\n                passwordUppercase\r\n                  ? \"signup__password-box--fail\"\r\n                  : \"signup__password-box--checked\"\r\n              }\r\n            >\r\n              contain an uppercase letter\r\n            </p>\r\n            <p\r\n              className={\r\n                passwordLowercase\r\n                  ? \"signup__password-box--fail\"\r\n                  : \"signup__password-box--checked\"\r\n              }\r\n            >\r\n              contain an lowercase letter\r\n            </p>\r\n            <p\r\n              className={\r\n                passwordNumber\r\n                  ? \"signup__password-box--fail\"\r\n                  : \"signup__password-box--checked\"\r\n              }\r\n            >\r\n              contain a number\r\n            </p>\r\n            <p\r\n              className={\r\n                passwordLength\r\n                  ? \"signup__password-box--fail\"\r\n                  : \"signup__password-box--checked\"\r\n              }\r\n            >\r\n              be at least 6 characters long\r\n            </p>\r\n          </div>\r\n          <input\r\n            className=\"login-screen__form--submit-btn\"\r\n            type=\"submit\"\r\n            value=\"Register\"\r\n          />\r\n        </form>\r\n\r\n        <Link\r\n          className=\"login-screen__create-account-link\"\r\n          to={redirect ? \"/login?redirect=${redirect}\" : \"/login\"}\r\n        >\r\n          Have an account? Log in here.\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","/home/devox/projects/techHeart/frontend/src/components/user-menu-dropdown/UserDropdown.js",[],"/home/devox/projects/techHeart/frontend/src/screens/profile/ProfileScreen.js",["200"],"import React from \"react\";\r\nimport \"./ProfileScreen.scss\";\r\nimport { Route } from \"react-router-dom\";\r\nimport ProfileSidebar from \"../../components/profile-sidebar/ProfileSidebar.js\";\r\nimport YourInfo from \"../profile-info/YourInfo.js\";\r\nimport ProfileAddresses from \"../profile-addresses/ProfileAddresses.js\";\r\nimport Checkout from \"../checkout/Checkout.js\";\r\n\r\n//todo ADD GSAP SCROLL TO MAKE LEFT MENU STICKY\r\nimport gsap from \"gsap\";\r\nimport AddressEdit from \"../address-edit/AddressEdit\";\r\nimport FavoriteScreen from \"../profile-favorite/FavoriteScreen\";\r\n\r\n//!=================================================================\r\nconst ProfileScreen = () => {\r\n  return (\r\n    <div className=\"profile-screen\">\r\n      <ProfileSidebar />\r\n      <div className=\"profile-screen__right\">\r\n        <Route exact path=\"/profile/info\" component={YourInfo} />\r\n        <Route exact path=\"/profile/addresses\" component={ProfileAddresses} />\r\n        <Route exact path=\"/profile/checkout/:id?\" component={Checkout} />{\" \"}\r\n        <Route exact path=\"/profile/addresses/:id\" component={AddressEdit} />{\" \"}\r\n        <Route exact path=\"/profile/favorites\" component={FavoriteScreen} />{\" \"}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileScreen;\r\n","/home/devox/projects/techHeart/frontend/src/screens/shipping-screen/ShippingScreen.js",[],"/home/devox/projects/techHeart/frontend/src/components/profile-sidebar/ProfileSidebar.js",["201"],"import React, { useEffect } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport \"./ProfileSidebar.scss\";\r\nimport { listFavoriteProducts } from \"../../redux/user/user.actions.js\";\r\n\r\n//!=======================================================================\r\n\r\nfunction ProfileSidebar({ history }) {\r\n  const dispatch = useDispatch();\r\n  const favoriteProductsList = useSelector(\r\n    (state) => state.userFavoriteProducts\r\n  );\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const { userFavoriteProducts, loading } = favoriteProductsList;\r\n  const favoriteProductsLength = userFavoriteProducts.length;\r\n\r\n  const cartItems = useSelector((state) => state.cart);\r\n  const { cartProducts } = cartItems;\r\n  const cartItemsNumber = cartProducts.reduce(\r\n    (accum, cartItem) => accum + cartItem.quantity,\r\n    0\r\n  );\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/login\");\r\n    }\r\n    dispatch(listFavoriteProducts());\r\n  }, [history, userInfo, dispatch]);\r\n  return (\r\n    <div className=\"profile-sidebar\">\r\n      <h1 className=\"profile-screen__title\">Your Account</h1>\r\n      <NavLink\r\n        className=\"profile-sidebar__options\"\r\n        activeClassName=\"profile-sidebar__active-link\"\r\n        to=\"/profile/info\"\r\n      >\r\n        {\" \"}\r\n        <p>Your Info</p>{\" \"}\r\n      </NavLink>\r\n\r\n      <NavLink\r\n        className=\"profile-sidebar__options\"\r\n        activeClassName=\"profile-sidebar__active-link\"\r\n        to=\"/profile/addresses\"\r\n      >\r\n        {\" \"}\r\n        <p>Your Addresses</p>{\" \"}\r\n      </NavLink>\r\n\r\n      <NavLink\r\n        className=\"profile-sidebar__options\"\r\n        activeClassName=\"profile-sidebar__active-link\"\r\n        to=\"/profile/favorites\"\r\n      >\r\n        {\" \"}\r\n        <p>\r\n          Your Favorites{\" \"}\r\n          <i className=\"profile-sidebar__count\">\r\n            ({favoriteProductsLength} items)\r\n          </i>{\" \"}\r\n        </p>\r\n      </NavLink>\r\n\r\n      <NavLink\r\n        activeClassName=\"profile-sidebar__active-link\"\r\n        className=\"profile-sidebar__options\"\r\n        to=\"/profile/reviews\"\r\n      >\r\n        {\" \"}\r\n        <p>Reviews</p>{\" \"}\r\n      </NavLink>\r\n\r\n      <NavLink\r\n        className=\"profile-sidebar__options\"\r\n        activeClassName=\"profile-sidebar__active-link\"\r\n        to=\"/profile/messages\"\r\n      >\r\n        {\" \"}\r\n        <p>Messages</p>{\" \"}\r\n      </NavLink>\r\n\r\n      <h1 className=\"profile-screen__title\">Orders</h1>\r\n      <NavLink\r\n        activeClassName=\"profile-sidebar__active-link\"\r\n        to=\"/profile/orders\"\r\n      >\r\n        {\" \"}\r\n        <p className=\"profile-sidebar__options\">Orders & Bills</p>{\" \"}\r\n      </NavLink>\r\n\r\n      <NavLink\r\n        className=\"profile-sidebar__options\"\r\n        activeClassName=\"profile-sidebar__active-link\"\r\n        to=\"/profile/checkout\"\r\n      >\r\n        {\" \"}\r\n        <p>\r\n          Checkout{\" \"}\r\n          <i className=\"profile-sidebar__count\">({cartItemsNumber} items)</i>\r\n        </p>{\" \"}\r\n      </NavLink>\r\n\r\n      <NavLink\r\n        className=\"profile-sidebar__options\"\r\n        activeClassName=\"profile-sidebar__active-link\"\r\n        to=\"/profile/returns\"\r\n      >\r\n        {\" \"}\r\n        <p>Item returns</p>{\" \"}\r\n      </NavLink>\r\n\r\n      <NavLink\r\n        activeClassName=\"profile-sidebar__active-link\"\r\n        className=\"profile-sidebar__options\"\r\n        to=\"/profile/warranty\"\r\n      >\r\n        {\" \"}\r\n        <p>Warranty</p>{\" \"}\r\n      </NavLink>\r\n\r\n      <h1 className=\"profile-screen__title\">Payment</h1>\r\n      <NavLink\r\n        activeClassName=\"profile-sidebar__active-link\"\r\n        className=\"profile-sidebar__options\"\r\n        to=\"/profile/cards\"\r\n      >\r\n        {\" \"}\r\n        <p>Your cards</p>{\" \"}\r\n      </NavLink>\r\n\r\n      <NavLink\r\n        className=\"profile-sidebar__options\"\r\n        activeClassName=\"profile-sidebar__active-link\"\r\n        to=\"/profile/payment-methods\"\r\n      >\r\n        {\" \"}\r\n        <p>Other payment methods</p>{\" \"}\r\n      </NavLink>\r\n\r\n      <NavLink\r\n        className=\"profile-sidebar__options\"\r\n        activeClassName=\"profile-sidebar__active-link\"\r\n        to=\"/profile/discounts\"\r\n      >\r\n        {\" \"}\r\n        <p>Discount coupons</p>{\" \"}\r\n      </NavLink>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProfileSidebar;\r\n","/home/devox/projects/techHeart/frontend/src/screens/address-edit/AddressEdit.js",[],"/home/devox/projects/techHeart/frontend/src/components/add-address/AddAddress.js",["202","203","204","205","206"],"import React, { useState } from \"react\";\r\nimport \"./AddAddress.scss\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport ErrorMessage from \"../error-message/ErrorMessage.js\";\r\nimport { getUserAddresses, addAddress } from \"../../redux/user/user.actions.js\";\r\n//!=============================================================================\r\nconst AddAddress = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [fullName, setFullName] = useState(\"\");\r\n  const [country, setCountry] = useState(\"\");\r\n  const [line1, setLine1] = useState(\"\");\r\n  const [line2, setLine2] = useState(\"\");\r\n  const [city, setCity] = useState(\"\");\r\n  const [stateProvinceRegion, setStateProvinceRegion] = useState(\"\");\r\n  const [postalCode, setPostalCode] = useState(\"\");\r\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\r\n\r\n  const [successColor, setSuccessColor] = useState(\"alert\");\r\n  const [error, setError] = useState(false);\r\n  const [message, setMessage] = useState(null);\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { user } = userDetails;\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    window.location.reload();\r\n    setMessage(\"Address added successfully.\");\r\n    setSuccessColor(\"success\");\r\n    dispatch(\r\n      addAddress({\r\n        id: user._id,\r\n        fullName,\r\n        country,\r\n        line1,\r\n        line2,\r\n        city,\r\n        stateProvinceRegion,\r\n        postalCode,\r\n        phoneNumber,\r\n      })\r\n    );\r\n    dispatch(getUserAddresses());\r\n    setFullName(\"\");\r\n    setCountry(\"\");\r\n    setLine1(\"\");\r\n    setLine2(\"\");\r\n    setCity(\"\");\r\n    setStateProvinceRegion(\"\");\r\n    setPostalCode(\"\");\r\n    setPhoneNumber(\"\");\r\n  };\r\n  return (\r\n    <>\r\n      <form onSubmit={handleSubmit} className=\"add-address__form-container\">\r\n        <label htmlFor=\"fullName\" className=\"add-address__label\">\r\n          <strong>Full name</strong>\r\n        </label>\r\n        <input\r\n          required\r\n          name=\"line1\"\r\n          onChange={(e) => setFullName(e.target.value)}\r\n          value={fullName}\r\n          type=\"text\"\r\n          className=\"add-address__input\"\r\n        />\r\n        <label htmlFor=\"line1\" className=\"add-address__label\">\r\n          <strong>Address line 1</strong>\r\n        </label>\r\n        <input\r\n          required\r\n          name=\"line1\"\r\n          onChange={(e) => setLine1(e.target.value)}\r\n          value={line1}\r\n          type=\"text\"\r\n          className=\"add-address__input\"\r\n        />\r\n\r\n        <label htmlFor=\"line2\" className=\"add-address__label\">\r\n          <strong>Address line 2</strong>\r\n        </label>\r\n        <input\r\n          required\r\n          name=\"line2\"\r\n          onChange={(e) => setLine2(e.target.value)}\r\n          value={line2}\r\n          type=\"text\"\r\n          className=\"add-address__input\"\r\n        />\r\n        <label htmlFor=\"city\" className=\"add-address__label\">\r\n          <strong>City</strong>\r\n        </label>\r\n        <input\r\n          required\r\n          name=\"city\"\r\n          onChange={(e) => setCity(e.target.value)}\r\n          value={city}\r\n          className=\"add-address__input\"\r\n        />\r\n        <label htmlFor=\"stateProvinceRegion\" className=\"add-address__label\">\r\n          <strong>State/Province/Region</strong>\r\n        </label>\r\n        <input\r\n          required\r\n          name=\"stateProvinceRegion\"\r\n          onChange={(e) => setStateProvinceRegion(e.target.value)}\r\n          value={stateProvinceRegion}\r\n          className=\"add-address__input\"\r\n        />\r\n        <label htmlFor=\"postalCode\" className=\"add-address__label\">\r\n          <strong>Postal Code</strong>\r\n        </label>\r\n        <input\r\n          required\r\n          name=\"postalCode\"\r\n          onChange={(e) => setPostalCode(e.target.value)}\r\n          value={postalCode}\r\n          className=\"add-address__input\"\r\n        />\r\n        <label htmlFor=\"country\" className=\"add-address__label\">\r\n          <strong>Country</strong>\r\n        </label>\r\n        <input\r\n          required\r\n          name=\"country\"\r\n          onChange={(e) => setCountry(e.target.value)}\r\n          value={country}\r\n          className=\"add-address__input\"\r\n        />\r\n        <label htmlFor=\"phoneNumber\" className=\"add-address__label\">\r\n          <strong>Phone Number</strong>\r\n        </label>\r\n        <input\r\n          required\r\n          name=\"phoneNumber\"\r\n          onChange={(e) => setPhoneNumber(e.target.value)}\r\n          value={phoneNumber}\r\n          className=\"add-address__input\"\r\n        />\r\n        <input\r\n          required\r\n          className=\"add-address__input-btn\"\r\n          type=\"submit\"\r\n          value=\"Add new Address\"\r\n        />\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddAddress;\r\n","/home/devox/projects/techHeart/frontend/src/screens/payment/PaymentScreen.js",[],"/home/devox/projects/techHeart/frontend/src/components/checkout-steps/CheckoutSteps.js",[],"/home/devox/projects/techHeart/frontend/src/redux/order/order.reducers.js",[],"/home/devox/projects/techHeart/frontend/src/redux/order/order.constants.js",[],"/home/devox/projects/techHeart/frontend/src/redux/order/order.actions.js",[],"/home/devox/projects/techHeart/frontend/src/screens/profile-addresses/ProfileAddresses.js",["207","208","209"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  getUserDetails,\r\n  addAddress,\r\n  getUserAddresses,\r\n} from \"../../redux/user/user.actions.js\";\r\nimport \"./ProfileAddresses.scss\";\r\n\r\nimport AddAddress from \"../../components/add-address/AddAddress.js\";\r\nimport axios from \"axios\";\r\n//!=============================================\r\n\r\nconst ProfileAddresses = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [addAddressToggle, setAddAddressToggle] = useState(false);\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { user } = userDetails;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile);\r\n  const { success } = userUpdateProfile;\r\n\r\n  const userAddresses = useSelector((state) => state.userAddresses);\r\n\r\n  const { addresses } = userAddresses;\r\n\r\n  const handleAddAddress = () => {\r\n    setAddAddressToggle(!addAddressToggle);\r\n  };\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/login\");\r\n    }\r\n    dispatch(getUserAddresses());\r\n  }, [history, userInfo, user, dispatch]);\r\n\r\n  const deleteAddressHandler = (id) => {\r\n    const deleteAddress = async () => {\r\n      try {\r\n        const config = {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${userInfo.token}`,\r\n          },\r\n        };\r\n        await axios.delete(`/api/users/profile/addresses/${id}`, config);\r\n\r\n        dispatch(getUserAddresses());\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    deleteAddress();\r\n  };\r\n\r\n  return (\r\n    <div className=\"profile-addresses\">\r\n      <h1 className=\"heading-1 \">YOUR ADDRESSES</h1>\r\n      <div className=\"profile-addresses__grid\">\r\n        {addresses\r\n          ? addresses.map((address, idx) => (\r\n              <div key={address._id} className=\"profile-addresses__wrapper\">\r\n                <div className=\"profile-addresses__address\">\r\n                  <h3 className=\"profile-addresses__address__title\">\r\n                    Address {idx + 1}\r\n                  </h3>\r\n\r\n                  <address>\r\n                    <p className=\"profile-addresses__text\">\r\n                      <strong>{address.fullName}</strong>\r\n                    </p>\r\n                    <p className=\"profile-addresses__text\">{address.line1}</p>\r\n                    <p className=\"profile-addresses__text\">{address.line2}</p>\r\n                    <p className=\"profile-addresses__text\">\r\n                      {address.city} , {address.stateProvinceRegion} ,{\" \"}\r\n                      {address.postalCode}\r\n                    </p>\r\n\r\n                    <p className=\"profile-addresses__text\">{address.country}</p>\r\n                    <p className=\"profile-addresses__text\">\r\n                      {address.phoneNumber}\r\n                    </p>\r\n                  </address>\r\n                  <div className=\"profile-addresses__address__bottom-links\">\r\n                    <Link\r\n                      to={`/profile/addresses/${address._id}`}\r\n                      className=\"profile-addresses__address__bottom-links--action\"\r\n                    >\r\n                      Edit\r\n                    </Link>\r\n                    <span\r\n                      onClick={() => {\r\n                        deleteAddressHandler(address._id);\r\n                      }}\r\n                      className=\"profile-addresses__address__bottom-links--action \"\r\n                    >\r\n                      Delete\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))\r\n          : \"\"}\r\n        <address\r\n          onClick={handleAddAddress}\r\n          className=\"profile-addresses__address profile-addresses__add-address\"\r\n        >\r\n          <span style={{ fontSize: \"8rem\" }}>&#9783;</span>\r\n          Add new address\r\n        </address>\r\n      </div>\r\n      <div className=\"line-break\" />\r\n\r\n      {addAddressToggle ? <AddAddress /> : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileAddresses;\r\n","/home/devox/projects/techHeart/frontend/src/screens/profile-info/YourInfo.js",[],"/home/devox/projects/techHeart/frontend/src/screens/profile-favorite/FavoriteScreen.js",["210","211","212"],"/home/devox/projects/techHeart/frontend/src/components/action-show/ActionShow.js",[],{"ruleId":"213","replacedBy":"214"},{"ruleId":"215","replacedBy":"216"},{"ruleId":"217","severity":1,"message":"218","line":1,"column":17,"nodeType":"219","messageId":"220","endLine":1,"endColumn":26},{"ruleId":"217","severity":1,"message":"221","line":24,"column":11,"nodeType":"219","messageId":"220","endLine":24,"endColumn":19},{"ruleId":"217","severity":1,"message":"222","line":20,"column":11,"nodeType":"219","messageId":"220","endLine":20,"endColumn":18},{"ruleId":"223","severity":1,"message":"224","line":36,"column":46,"nodeType":"225","messageId":"226","endLine":36,"endColumn":48},{"ruleId":"227","severity":1,"message":"228","line":39,"column":13,"nodeType":"229","endLine":50,"endColumn":4},{"ruleId":"217","severity":1,"message":"230","line":1,"column":38,"nodeType":"219","messageId":"220","endLine":1,"endColumn":53},{"ruleId":"217","severity":1,"message":"231","line":10,"column":10,"nodeType":"219","messageId":"220","endLine":10,"endColumn":22},{"ruleId":"223","severity":1,"message":"224","line":27,"column":46,"nodeType":"225","messageId":"226","endLine":27,"endColumn":48},{"ruleId":"217","severity":1,"message":"222","line":22,"column":11,"nodeType":"219","messageId":"220","endLine":22,"endColumn":18},{"ruleId":"217","severity":1,"message":"218","line":1,"column":17,"nodeType":"219","messageId":"220","endLine":1,"endColumn":26},{"ruleId":"217","severity":1,"message":"232","line":3,"column":10,"nodeType":"219","messageId":"220","endLine":3,"endColumn":14},{"ruleId":"217","severity":1,"message":"222","line":14,"column":11,"nodeType":"219","messageId":"220","endLine":14,"endColumn":18},{"ruleId":"233","severity":1,"message":"234","line":69,"column":26,"nodeType":"235","messageId":"236","endLine":69,"endColumn":58},{"ruleId":"217","severity":1,"message":"222","line":17,"column":11,"nodeType":"219","messageId":"220","endLine":17,"endColumn":18},{"ruleId":"233","severity":1,"message":"234","line":162,"column":26,"nodeType":"235","messageId":"236","endLine":162,"endColumn":55},{"ruleId":"217","severity":1,"message":"237","line":10,"column":8,"nodeType":"219","messageId":"220","endLine":10,"endColumn":12},{"ruleId":"217","severity":1,"message":"222","line":17,"column":33,"nodeType":"219","messageId":"220","endLine":17,"endColumn":40},{"ruleId":"217","severity":1,"message":"231","line":4,"column":8,"nodeType":"219","messageId":"220","endLine":4,"endColumn":20},{"ruleId":"217","severity":1,"message":"238","line":19,"column":10,"nodeType":"219","messageId":"220","endLine":19,"endColumn":22},{"ruleId":"217","severity":1,"message":"239","line":20,"column":10,"nodeType":"219","messageId":"220","endLine":20,"endColumn":15},{"ruleId":"217","severity":1,"message":"240","line":20,"column":17,"nodeType":"219","messageId":"220","endLine":20,"endColumn":25},{"ruleId":"217","severity":1,"message":"241","line":21,"column":10,"nodeType":"219","messageId":"220","endLine":21,"endColumn":17},{"ruleId":"217","severity":1,"message":"242","line":5,"column":3,"nodeType":"219","messageId":"220","endLine":5,"endColumn":17},{"ruleId":"217","severity":1,"message":"243","line":6,"column":3,"nodeType":"219","messageId":"220","endLine":6,"endColumn":13},{"ruleId":"217","severity":1,"message":"244","line":27,"column":11,"nodeType":"219","messageId":"220","endLine":27,"endColumn":18},{"ruleId":"217","severity":1,"message":"232","line":4,"column":10,"nodeType":"219","messageId":"220","endLine":4,"endColumn":14},{"ruleId":"217","severity":1,"message":"245","line":18,"column":11,"nodeType":"219","messageId":"220","endLine":18,"endColumn":15},{"ruleId":"217","severity":1,"message":"222","line":44,"column":33,"nodeType":"219","messageId":"220","endLine":44,"endColumn":40},"no-native-reassign",["246"],"no-negated-in-lhs",["247"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'userInfo' is assigned a value but never used.","'loading' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","'useLayoutEffect' is defined but never used.","'ErrorMessage' is defined but never used.","'Link' is defined but never used.","no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","'gsap' is defined but never used.","'successColor' is assigned a value but never used.","'error' is assigned a value but never used.","'setError' is assigned a value but never used.","'message' is assigned a value but never used.","'getUserDetails' is defined but never used.","'addAddress' is defined but never used.","'success' is assigned a value but never used.","'user' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]