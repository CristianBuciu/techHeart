[{"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\index.js":"1","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\redux\\store.js":"2","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\scroll-to-top\\ScrollToTop.jsx":"3","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\App.js":"4","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\reportWebVitals.js":"5","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\redux\\cart\\cart.reducers.js":"6","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\redux\\product\\product.reducers.js":"7","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\redux\\user\\user.reducers.js":"8","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\redux\\order\\order.reducers.js":"9","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\redux\\cart\\cart.actions.js":"10","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\profile-screen\\ProfileScreen.js":"11","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\login-screen\\Login.js":"12","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\shipping-screen\\ShippingScreen.js":"13","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\signup-screen\\Signup.js":"14","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\redux\\cart\\cart.constants.js":"15","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\redux\\product\\product.constants.js":"16","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\redux\\user\\user.constants.js":"17","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\redux\\order\\order.constants.js":"18","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\footer\\Footer.js":"19","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\header\\Header.js":"20","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\payment-screen\\PaymentScreen.js":"21","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\product-screen\\ProductScreen.js":"22","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\complete-order-screen\\CompleteOrder.js":"23","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\redux\\user\\user.actions.js":"24","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\redux\\order\\order.actions.js":"25","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\profile-sidebar\\ProfileSidebar.js":"26","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\profile-info-screen\\YourInfo.js":"27","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\profile-addresses-screen\\ProfileAddresses.js":"28","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\checkout-screen\\Checkout.js":"29","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\address-edit-modal\\AddressEdit.js":"30","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\error-message\\ErrorMessage.js":"31","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\redux\\product\\product.actions.js":"32","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\user-menu-dropdown\\UserDropdown.js":"33","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\cart-dropdown\\CartDropdown.js":"34","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\utils.js":"35","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\loader\\Loader.js":"36","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\loader-product\\LoaderProduct.js":"37","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\action-show\\ActionShow.js":"38","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\order-screen\\OrderScreen.js":"39","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\profile-favorite-screen\\FavoriteScreen.js":"40","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\checkout-steps\\CheckoutSteps.js":"41","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\add-address\\AddAddress.js":"42","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\product\\Product.js":"43","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\loader-generic\\LoaderGeneric.js":"44","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\profile-orders\\ProfileOrders.js":"45","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\order-of-orders\\OrderOfOrders.js":"46","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\add-review\\AddReview.js":"47","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\review\\Review.js":"48","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\searchbox\\SearchBox.js":"49","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\profile-reviews-screen\\ProfileReviews.js":"50","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\shop\\Shop.js":"51","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\product-filter\\ProductFilter.js":"52"},{"size":768,"mtime":1612129189000,"results":"53","hashOfConfig":"54"},{"size":4073,"mtime":1613058125101,"results":"55","hashOfConfig":"54"},{"size":347,"mtime":1612129189000,"results":"56","hashOfConfig":"54"},{"size":1925,"mtime":1613413246596,"results":"57","hashOfConfig":"54"},{"size":362,"mtime":1612129189000,"results":"58","hashOfConfig":"54"},{"size":886,"mtime":1612129189000,"results":"59","hashOfConfig":"54"},{"size":1673,"mtime":1613409365618,"results":"60","hashOfConfig":"54"},{"size":5646,"mtime":1613058002987,"results":"61","hashOfConfig":"54"},{"size":2830,"mtime":1612631987699,"results":"62","hashOfConfig":"54"},{"size":1827,"mtime":1612129189000,"results":"63","hashOfConfig":"54"},{"size":1699,"mtime":1612857896587,"results":"64","hashOfConfig":"54"},{"size":2740,"mtime":1612129189000,"results":"65","hashOfConfig":"54"},{"size":4953,"mtime":1612819846911,"results":"66","hashOfConfig":"54"},{"size":5870,"mtime":1612617918561,"results":"67","hashOfConfig":"54"},{"size":626,"mtime":1612129189000,"results":"68","hashOfConfig":"54"},{"size":601,"mtime":1612745777121,"results":"69","hashOfConfig":"54"},{"size":1509,"mtime":1612897264410,"results":"70","hashOfConfig":"54"},{"size":764,"mtime":1612486470119,"results":"71","hashOfConfig":"54"},{"size":1222,"mtime":1612129189000,"results":"72","hashOfConfig":"54"},{"size":5069,"mtime":1613440330662,"results":"73","hashOfConfig":"54"},{"size":5942,"mtime":1612820017238,"results":"74","hashOfConfig":"54"},{"size":9756,"mtime":1613423732902,"results":"75","hashOfConfig":"54"},{"size":11386,"mtime":1612836605118,"results":"76","hashOfConfig":"54"},{"size":8749,"mtime":1612897966262,"results":"77","hashOfConfig":"54"},{"size":4127,"mtime":1612630597633,"results":"78","hashOfConfig":"54"},{"size":4975,"mtime":1613182516344,"results":"79","hashOfConfig":"54"},{"size":8902,"mtime":1612649040257,"results":"80","hashOfConfig":"54"},{"size":4083,"mtime":1612540001086,"results":"81","hashOfConfig":"54"},{"size":5956,"mtime":1612266848918,"results":"82","hashOfConfig":"54"},{"size":6096,"mtime":1612130953271,"results":"83","hashOfConfig":"54"},{"size":429,"mtime":1612129189000,"results":"84","hashOfConfig":"54"},{"size":2618,"mtime":1613410326833,"results":"85","hashOfConfig":"54"},{"size":1532,"mtime":1612617763350,"results":"86","hashOfConfig":"54"},{"size":4851,"mtime":1612267775383,"results":"87","hashOfConfig":"54"},{"size":554,"mtime":1612824891496,"results":"88","hashOfConfig":"54"},{"size":611,"mtime":1612129189000,"results":"89","hashOfConfig":"54"},{"size":420,"mtime":1612129189000,"results":"90","hashOfConfig":"54"},{"size":580,"mtime":1612129189000,"results":"91","hashOfConfig":"54"},{"size":9818,"mtime":1613499064824,"results":"92","hashOfConfig":"54"},{"size":4940,"mtime":1612746879242,"results":"93","hashOfConfig":"54"},{"size":3582,"mtime":1612819348447,"results":"94","hashOfConfig":"54"},{"size":4732,"mtime":1612129189000,"results":"95","hashOfConfig":"54"},{"size":4366,"mtime":1613422184763,"results":"96","hashOfConfig":"54"},{"size":421,"mtime":1613419137956,"results":"97","hashOfConfig":"54"},{"size":1422,"mtime":1612737550858,"results":"98","hashOfConfig":"54"},{"size":3856,"mtime":1613175068048,"results":"99","hashOfConfig":"54"},{"size":4530,"mtime":1612979796192,"results":"100","hashOfConfig":"54"},{"size":1128,"mtime":1612836009442,"results":"101","hashOfConfig":"54"},{"size":1642,"mtime":1613420011192,"results":"102","hashOfConfig":"54"},{"size":1789,"mtime":1613059680966,"results":"103","hashOfConfig":"54"},{"size":3510,"mtime":1613423895050,"results":"104","hashOfConfig":"54"},{"size":349,"mtime":1613382663829,"results":"105","hashOfConfig":"54"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},"jkitux",{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"108"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"108"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"108"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"108"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"108"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"108"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"108"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"108"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"108"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"108"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"108"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"108"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"108"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"108"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"195"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"108"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"108"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"108"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"108"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"108"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"108"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"195"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"108"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"108"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"108"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"108"},"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\index.js",[],["236","237"],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\redux\\store.js",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\scroll-to-top\\ScrollToTop.jsx",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\App.js",["238"],"import React, { useEffect } from \"react\";\nimport Header from \"./components/header/Header\";\nimport Footer from \"./components/footer/Footer\";\nimport Shop from \"./screens/shop/Shop\";\nimport { Route } from \"react-router-dom\";\nimport ProductScreen from \"./screens/product-screen/ProductScreen\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { toggleCartShow } from \"./redux/cart/cart.actions.js\";\nimport Login from \"./screens/login-screen/Login.js\";\nimport Signup from \"./screens/signup-screen/Signup.js\";\nimport ProfileScreen from \"./screens/profile-screen/ProfileScreen.js\";\nimport ShippingScreen from \"./screens/shipping-screen/ShippingScreen.js\";\nimport PaymentScreen from \"./screens/payment-screen/PaymentScreen\";\nimport CompleteOrder from \"./screens/complete-order-screen/CompleteOrder\";\n\n//!==================================================================\nfunction App() {\n  const dispatch = useDispatch();\n  const showCart = useSelector((state) => state.cartToggle.showCart);\n  const overlayClickHandler = () => {\n    dispatch(toggleCartShow());\n  };\n\n  return (\n    <>\n      <Header />\n      <main className=\"app-main\">\n        <div>\n          <Route path=\"/shipping\" component={ShippingScreen} />{\" \"}\n          <Route path=\"/payment\" component={PaymentScreen} />{\" \"}\n          <Route path=\"/complete-order\" component={CompleteOrder} />{\" \"}\n        </div>\n        {showCart ? (\n          <div onClick={overlayClickHandler} className=\"overlay\">\n            {\" \"}\n          </div>\n        ) : null}{\" \"}\n        <Route path=\"/shop/:category\" component={Shop} />\n        <Route path=\"/product/:id\" component={ProductScreen} />{\" \"}\n        <Route path=\"/login\" component={Login} />{\" \"}\n        <Route path=\"/register\" component={Signup} />{\" \"}\n        <Route path=\"/profile\" component={ProfileScreen} />{\" \"}\n      </main>{\" \"}\n      <Footer className=\"footer\" />\n    </>\n  );\n}\n\nexport default App;\n","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\redux\\cart\\cart.reducers.js",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\redux\\product\\product.reducers.js",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\redux\\user\\user.reducers.js",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\redux\\order\\order.reducers.js",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\redux\\cart\\cart.actions.js",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\profile-screen\\ProfileScreen.js",["239"],"import React from \"react\";\r\nimport \"./ProfileScreen.scss\";\r\nimport { Route } from \"react-router-dom\";\r\nimport ProfileSidebar from \"../../components/profile-sidebar/ProfileSidebar.js\";\r\nimport YourInfo from \"../profile-info-screen/YourInfo.js\";\r\nimport ProfileAddresses from \"../profile-addresses-screen/ProfileAddresses.js\";\r\nimport Checkout from \"../checkout-screen/Checkout.js\";\r\nimport ProfileOrders from \"../profile-orders/ProfileOrders\";\r\n//todo ADD GSAP SCROLL TO MAKE LEFT MENU STICKY\r\nimport gsap from \"gsap\";\r\nimport AddressEdit from \"../address-edit-modal/AddressEdit\";\r\nimport FavoriteScreen from \"../profile-favorite-screen/FavoriteScreen\";\r\nimport OrderScreen from \"../order-screen/OrderScreen\";\r\nimport ProfileReviews from \"../profile-reviews-screen/ProfileReviews.js\";\r\n//!=================================================================\r\nconst ProfileScreen = () => {\r\n  return (\r\n    <div className=\"profile-screen\">\r\n      <ProfileSidebar />\r\n      <div className=\"profile-screen__right\">\r\n        <Route exact path=\"/profile/info\" component={YourInfo} />\r\n        <Route exact path=\"/profile/addresses\" component={ProfileAddresses} />\r\n        <Route exact path=\"/profile/checkout/:id?\" component={Checkout} />{\" \"}\r\n        <Route exact path=\"/profile/addresses/:id\" component={AddressEdit} />{\" \"}\r\n        <Route exact path=\"/profile/favorites\" component={FavoriteScreen} />{\" \"}\r\n        <Route exact path=\"/profile/orders/:id\" component={OrderScreen} />\r\n        <Route exact path=\"/profile/orders\" component={ProfileOrders} />\r\n        <Route exact path=\"/profile/reviews\" component={ProfileReviews} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileScreen;\r\n","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\login-screen\\Login.js",["240"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link,useHistory } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport ErrorMessage from \"../../components/error-message/ErrorMessage.js\";\r\nimport { login } from \"../../redux/user/user.actions.js\";\r\nimport \"./Login.scss\";\r\n\r\n//!==========================================================\r\nconst Login = ({ location }) => {\r\n  const history=useHistory();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { error, userInfo } = userLogin;\r\n\r\n  const redirect = location.search ? location.search.split(\"+\")[1] : \"/shop\";\r\n\r\n  //! Check if we are logged in so you get a redirect if you try to access the login route while logged in\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect);\r\n    }\r\n  }, [history, userInfo, redirect]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    //! Dispatch Login ====================\r\n    dispatch(login(email, password));\r\n  };\r\n  return (\r\n    <div className=\"login-screen\">\r\n      <div className=\"home-screen__top\">\r\n        <h1 className=\"heading-1  home-screen__title\">SIGNIN</h1>\r\n      </div>\r\n      {error && <ErrorMessage color=\"alert\">{error}</ErrorMessage>}\r\n\r\n      <div className=\"login-screen__form-container\">\r\n        <form className=\"login-screen__form\" onSubmit={submitHandler}>\r\n          <label className=\"login-screen__form--input-label\" htmlFor=\"email\">\r\n            Email Address\r\n          </label>\r\n          <input\r\n            placeholder=\"Enter email\"\r\n            className=\"login-screen__form--input\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            name=\"email\"\r\n            type=\"email\"\r\n          />\r\n          <label className=\"login-screen__form--input-label\" htmlFor=\"password\">\r\n            Password\r\n          </label>\r\n          <input\r\n            placeholder=\"Enter password\"\r\n            className=\"login-screen__form--input\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            name=\"password\"\r\n            type=\"password\"\r\n          />\r\n          <input\r\n            className=\"login-screen__form--submit-btn\"\r\n            type=\"submit\"\r\n            value=\"Sign In\"\r\n          />\r\n        </form>\r\n        <Link\r\n          className=\"login-screen__create-account-link\"\r\n          to={redirect ? \"/register?redirect=${redirect}\" : \"/register\"}\r\n        >\r\n          Don't have an account? Create one here.\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\shipping-screen\\ShippingScreen.js",["241","242","243"],"import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport \"./ShippingScreen.scss\";\r\nimport { getUserAddresses } from \"../../redux/user/user.actions.js\";\r\nimport AddAddress from \"../../components/add-address/AddAddress\";\r\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport CheckoutSteps from \"../../components/checkout-steps/CheckoutSteps\";\r\nimport { addOrderAddress } from \"../../redux/order/order.actions.js\";\r\nimport { AiOutlineDoubleRight } from \"react-icons/ai\";\r\nimport AddressEdit from \"../address-edit-modal/AddressEdit.js\";\r\nimport { IoMdArrowDropdown } from \"react-icons/io\";\r\nimport { IoMdArrowDropup } from \"react-icons/io\";\r\n\r\n//!=======================================================\r\nconst ShippingScreen = () => {\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const dispatch = useDispatch();\r\n\r\n  const [addAddressShow, setAddAddressShow] = useState(false);\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const orderAddressSelector = useSelector((state) => state.orderAddress);\r\n  const { orderAddress } = orderAddressSelector;\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { user } = userDetails;\r\n\r\n  const userAddresses = useSelector((state) => state.userAddresses);\r\n  const { addresses } = userAddresses;\r\n\r\n  useEffect(() => {\r\n    if (orderAddress.fullName) {\r\n      history.push(\"/payment\");\r\n    }\r\n    if (!userInfo) {\r\n      history.push(\"/login\");\r\n    } else {\r\n      dispatch(getUserAddresses());\r\n    }\r\n  }, [history, userInfo, user, dispatch]);\r\n\r\n  const deleteAddressHandler = (id) => {\r\n    const deleteAddress = async () => {\r\n      try {\r\n        const config = {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${userInfo.token}`,\r\n          },\r\n        };\r\n        await axios.delete(`/api/users/profile/addresses/${id}`, config);\r\n\r\n        dispatch(getUserAddresses());\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    deleteAddress();\r\n  };\r\n\r\n  const handleSubmit = (address) => {\r\n    dispatch(addOrderAddress(address));\r\n    history.push(\"/payment\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"shipping-screen shipping-section\">\r\n      <CheckoutSteps />\r\n      <div>\r\n        <h1 className=\"heading-1  mt-sm mb-sm\">Chose a delivery address</h1>\r\n        <div className=\"shipping-screen__address-container\">\r\n          {addresses\r\n            ? addresses.map((address) => (\r\n                <div key={address._id} className=\"shipping-screen__address\">\r\n                  <address\r\n                    style={{\r\n                      display: \"flex\",\r\n                      flexDirection: \"column\",\r\n                      alignItems: \"center\",\r\n                      marginBottom: \"2rem\",\r\n                    }}\r\n                  >\r\n                    <p className=\"profile-addresses__text\">\r\n                      <strong>{address.fullName}</strong>\r\n                    </p>\r\n                    <p className=\"profile-addresses__text\">{address.line1}</p>\r\n                    <p className=\"profile-addresses__text\">{address.line2}</p>\r\n                    <p className=\"profile-addresses__text\">\r\n                      {address.city} , {address.stateProvinceRegion} ,{\" \"}\r\n                      {address.postalCode}\r\n                    </p>\r\n\r\n                    <p className=\"profile-addresses__text\">{address.country}</p>\r\n                  </address>\r\n                  <button\r\n                    onClick={() => handleSubmit(address)}\r\n                    className=\"shipping-screen__ship-btn\"\r\n                  >\r\n                    Deliver to this address{\" \"}\r\n                    <AiOutlineDoubleRight className=\"payment-screen__arrows\" />{\" \"}\r\n                  </button>\r\n                  <div className=\"shipping-screen__delete-edit-container mt-xs mb-xs\">\r\n                    <AddressEdit address={address} />\r\n                    <span\r\n                      onClick={() => {\r\n                        deleteAddressHandler(address._id);\r\n                      }}\r\n                      className=\"shipping-screen--action shipping-screen--action--delete\"\r\n                    >\r\n                      Delete\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              ))\r\n            : \"\"}\r\n        </div>\r\n\r\n        <div className=\"line-break\" />\r\n        <h2\r\n          onClick={() => setAddAddressShow(!addAddressShow)}\r\n          className=\"heading-2 shipping-screen__add-address mb-sm\"\r\n        >\r\n          Add new address&nbsp;\r\n          {addAddressShow ? <IoMdArrowDropup /> : <IoMdArrowDropdown />}\r\n        </h2>\r\n        {addAddressShow ? <AddAddress /> : \"\"}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ShippingScreen;\r\n","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\signup-screen\\Signup.js",["244","245"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport ErrorMessage from \"../../components/error-message/ErrorMessage.js\";\r\nimport { register } from \"../../redux/user/user.actions.js\";\r\nimport \"./Signup.scss\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\n//!==========================================================\r\nconst Signup = ({ location }) => {\r\n  const redirect = location.search ? location.search.split(\"+\")[1] : \"/\";\r\n  const dispatch = useDispatch();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setconfirmPassword] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [message, setMessage] = useState(null);\r\n  const userRegister = useSelector((state) => state.userRegister);\r\n  const { loading, error, userInfo } = userRegister;\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect);\r\n    }\r\n  }, [userInfo, redirect, history]);\r\n  const passwordLength = password.length < 6 ? false : true;\r\n  const passwordLowercase = /[a-z]/.test(password) < 1 ? false : true;\r\n  const passwordUppercase = /[A-Z]/.test(password) < 1 ? false : true;\r\n  const passwordNumber = /[0-9]/.test(password) < 1 ? false : true;\r\n  const passwordEqualConfirmPassword =\r\n    password !== confirmPassword ? false : true;\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    history.push(\"/shop\");\r\n    //!Password check =====================\r\n\r\n    if (\r\n      passwordLength &&\r\n      passwordLowercase &&\r\n      passwordUppercase &&\r\n      passwordNumber &&\r\n      passwordEqualConfirmPassword\r\n    ) {\r\n      //! Dispatch Login ====================\r\n      dispatch(register(name, email, password));\r\n    } else {\r\n      setMessage(\"You must comply with all the password requisites.\");\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"login-screen\">\r\n      <div className=\"home-screen__top\">\r\n        <h1 className=\"heading-1  home-screen__title\">SIGNUP</h1>\r\n      </div>\r\n      {error && <ErrorMessage color=\"alert\">{error}</ErrorMessage>}\r\n\r\n      <div className=\"login-screen__form-container\">\r\n        <form className=\"login-screen__form\" onSubmit={submitHandler}>\r\n          <label className=\"login-screen__form--input-label\" htmlFor=\"name\">\r\n            Name\r\n          </label>\r\n          <input\r\n            placeholder=\"Enter name\"\r\n            className=\"login-screen__form--input\"\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n            name=\"name\"\r\n            type=\"text\"\r\n          />\r\n          <label className=\"login-screen__form--input-label\" htmlFor=\"email\">\r\n            Email\r\n          </label>\r\n          <input\r\n            placeholder=\"Enter email\"\r\n            className=\"login-screen__form--input\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            name=\"email\"\r\n            type=\"email\"\r\n          />\r\n          <label className=\"login-screen__form--input-label\" htmlFor=\"password\">\r\n            Password\r\n          </label>\r\n          <input\r\n            placeholder=\"Enter password\"\r\n            className=\"login-screen__form--input\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            name=\"password\"\r\n            type=\"password\"\r\n          />\r\n          <label\r\n            className=\"login-screen__form--input-label\"\r\n            htmlFor=\"confirmPassword\"\r\n          >\r\n            Confirm Password\r\n          </label>\r\n          <input\r\n            placeholder=\"Confirm password\"\r\n            className=\"login-screen__form--input\"\r\n            value={confirmPassword}\r\n            onChange={(e) => setconfirmPassword(e.target.value)}\r\n            name=\"confirmPassword\"\r\n            type=\"password\"\r\n          />\r\n          {message && <p className=\"signup__password-error\">{message}</p>}\r\n          <div className=\"signup__password-box\">\r\n            <h3>Password must:</h3>\r\n            <p\r\n              className={\r\n                passwordEqualConfirmPassword\r\n                  ? \"signup__password-box--fail\"\r\n                  : \"signup__password-box--checked\"\r\n              }\r\n            >\r\n              match Confirm Password\r\n            </p>\r\n            <p\r\n              className={\r\n                passwordUppercase\r\n                  ? \"signup__password-box--fail\"\r\n                  : \"signup__password-box--checked\"\r\n              }\r\n            >\r\n              contain an uppercase letter\r\n            </p>\r\n            <p\r\n              className={\r\n                passwordLowercase\r\n                  ? \"signup__password-box--fail\"\r\n                  : \"signup__password-box--checked\"\r\n              }\r\n            >\r\n              contain an lowercase letter\r\n            </p>\r\n            <p\r\n              className={\r\n                passwordNumber\r\n                  ? \"signup__password-box--fail\"\r\n                  : \"signup__password-box--checked\"\r\n              }\r\n            >\r\n              contain a number\r\n            </p>\r\n            <p\r\n              className={\r\n                passwordLength\r\n                  ? \"signup__password-box--fail\"\r\n                  : \"signup__password-box--checked\"\r\n              }\r\n            >\r\n              be at least 6 characters long\r\n            </p>\r\n          </div>\r\n          <input\r\n            className=\"login-screen__form--submit-btn\"\r\n            type=\"submit\"\r\n            value=\"Register\"\r\n          />\r\n        </form>\r\n\r\n        <Link\r\n          className=\"login-screen__create-account-link\"\r\n          to={redirect ? \"/login?redirect=${redirect}\" : \"/login\"}\r\n        >\r\n          Have an account? Log in here.\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\redux\\cart\\cart.constants.js",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\redux\\product\\product.constants.js",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\redux\\user\\user.constants.js",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\redux\\order\\order.constants.js",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\footer\\Footer.js",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\header\\Header.js",["246"],"//! Core\r\nimport React from \"react\";\r\nimport \"./Header.scss\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\n//! Components\r\nimport CartDropdown from \"../cart-dropdown/CartDropdown.js\";\r\nimport UserDropdown from \"../user-menu-dropdown/UserDropdown.js\";\r\nimport SearchBox from \"../searchbox/SearchBox.js\";\r\n\r\n//! Icons\r\nimport { GiTechnoHeart } from \"react-icons/gi\";\r\nimport { TiShoppingCart, TiUserOutline } from \"react-icons/ti\";\r\nimport { FaHeart } from \"react-icons/fa\";\r\nimport { IoMdArrowDropdown } from \"react-icons/io\";\r\n\r\n//! Redux Actions\r\nimport { toggleCartShow } from \"../../redux/cart/cart.actions.js\";\r\nimport { toggleUserMenuShow } from \"../../redux/user/user.actions.js\";\r\n\r\n//!==============================================================\r\n\r\nconst Header = () => {\r\n  //! Hooks declaration\r\n  const location = useLocation();\r\n  const { pathname } = location;\r\n  const dispatch = useDispatch();\r\n\r\n  //! Redux data selection hook\r\n  const cartToggle = useSelector((state) => state.cartToggle.showCart);\r\n  const cartItems = useSelector((state) => state.cart);\r\n  const { loading, cartProducts } = cartItems;\r\n\r\n  const cartItemsNumber = cartProducts.reduce(\r\n    (accum, cartItem) => accum + cartItem.quantity,\r\n    0\r\n  );\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const dropdownShow = useSelector((state) => state.showUserMenu);\r\n  const { showUserMenu } = dropdownShow;\r\n\r\n  return (\r\n    <>\r\n      {\" \"}\r\n      {pathname === \"/shipping\" ||\r\n      pathname === \"/payment\" ||\r\n      pathname === \"/complete-order\" ? (\r\n        \"\"\r\n      ) : (\r\n        <header className=\"header\">\r\n          <nav className=\"nav\">\r\n            <div className=\"nav__logo-container\">\r\n              <GiTechnoHeart className=\"nav__logo\" />{\" \"}\r\n              <Link title=\"Go home\" to=\"/\">\r\n                <h2 className=\"nav__title\">Cyber Heart</h2>\r\n              </Link>\r\n            </div>\r\n\r\n            <div className=\" nav__searchbox-container\">\r\n              <SearchBox nav__icon />{\" \"}\r\n              <div className=\"nav__subnav\">\r\n                <h4 className=\"heading-4 nav__subnav--text mr-md\">\r\n                  <NavLink\r\n                    activeClassName=\"nav__subnav--text nav__subnav--text--active\"\r\n                    to=\"/shop/all-products\"\r\n                  >\r\n                    All Products\r\n                  </NavLink>\r\n                </h4>\r\n                <h4 className=\"heading-4 nav__subnav--text mr-md\">\r\n                  <NavLink\r\n                    activeClassName=\"nav__subnav--text nav__subnav--text--active\"\r\n                    to=\"/shop/electronics\"\r\n                  >\r\n                    Electronics\r\n                  </NavLink>\r\n                </h4>\r\n                <h4 className=\"heading-4 nav__subnav--text mr-md\">\r\n                  <NavLink\r\n                    activeClassName=\"nav__subnav--text nav__subnav--text--active\"\r\n                    to=\"/shop/home-appliances\"\r\n                  >\r\n                    Home Appliances\r\n                  </NavLink>\r\n                </h4>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"nav__icons-container\">\r\n              <NavLink\r\n                title=\"Favorites\"\r\n                className=\"nav__icon  nav__icon--heart\"\r\n                activeClassName=\"nav__icon--heart--active\"\r\n                to=\"/profile/favorites\"\r\n              >\r\n                {\" \"}\r\n                <FaHeart />\r\n              </NavLink>\r\n\r\n              <div\r\n                title=\"Shopping cart\"\r\n                onClick={() => dispatch(toggleCartShow())}\r\n                className=\"nav__icon nav__icon--cart\"\r\n              >\r\n                {\" \"}\r\n                <TiShoppingCart />\r\n                <span className=\"nav__cart-items-number\">\r\n                  {cartItemsNumber}\r\n                </span>\r\n              </div>\r\n              {cartToggle ? <CartDropdown /> : null}\r\n              {userInfo ? (\r\n                <>\r\n                  {\" \"}\r\n                  <span\r\n                    className=\"nav__welcome-message\"\r\n                    onClick={() => dispatch(toggleUserMenuShow())}\r\n                  >\r\n                    Your menu &nbsp;\r\n                    <IoMdArrowDropdown\r\n                      style={{ fontSize: \"2rem\" }}\r\n                      className={\r\n                        showUserMenu\r\n                          ? \"dropdown-arrow-class\"\r\n                          : \"dropdown-revert\"\r\n                      }\r\n                    />\r\n                  </span>\r\n                  {showUserMenu ? <UserDropdown /> : null}\r\n                </>\r\n              ) : (\r\n                <Link className=\"nav__icon\" to=\"/login\">\r\n                  {\" \"}\r\n                  <TiUserOutline />\r\n                </Link>\r\n              )}\r\n            </div>\r\n          </nav>\r\n        </header>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\payment-screen\\PaymentScreen.js",["247","248"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./PaymentScreen.scss\";\r\nimport CheckoutSteps from \"../../components/checkout-steps/CheckoutSteps\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { saveOrderPaymentMethod } from \"../../redux/order/order.actions.js\";\r\nimport { GrPaypal, GrStripe } from \"react-icons/gr\";\r\nimport { AiOutlineDoubleRight } from \"react-icons/ai\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nimport { BsCreditCard } from \"react-icons/bs\";\r\nimport { ReactComponent as DHL } from \"../../assets/dhl-express.svg\";\r\nimport { ReactComponent as Correos } from \"../../assets/correos.svg\";\r\n//!=======================================================\r\n\r\nconst PaymentScreen = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const orderAddressState = useSelector((state) => state.orderAddress);\r\n  const { orderAddress } = orderAddressState;\r\n\r\n  const orderPaymentMethod = useSelector((state) => state.orderPaymentMethod);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      orderPaymentMethod.paymentMethod &&\r\n      orderPaymentMethod.shippingMethod.name\r\n    ) {\r\n      history.push(\"/complete-order\");\r\n    }\r\n    if (!orderAddress.fullName) {\r\n      history.push(\"/shipping\");\r\n    }\r\n  }, [orderAddress, history]);\r\n\r\n  const [paymentMethod, setPaymentMethod] = useState(\"PayPal\");\r\n  const [shippingMethod, setShippingMethod] = useState({\r\n    name: \"DHL Standard Delivery\",\r\n    price: 5.99,\r\n  });\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(saveOrderPaymentMethod(paymentMethod, shippingMethod));\r\n    history.push(\"/complete-order\");\r\n  };\r\n\r\n  const paymentMethodHandler = (e) => setPaymentMethod(e.target.value);\r\n  const shippmentMethodHandler = (e) =>\r\n    setShippingMethod({ price: Number(e.target.value), name: e.target.id });\r\n  return (\r\n    <div className=\"payment-screen shipping-section\">\r\n      <CheckoutSteps />\r\n      <div>\r\n        <h1 className=\"heading-1  mt-sm mb-sm\">Chose a payment method</h1>\r\n        <form onSubmit={handleSubmit}>\r\n          <label className=\"payment-screen__label mb-md\" htmlFor=\"PayPal\">\r\n            <input\r\n              id=\"PayPal\"\r\n              className=\"payment-screen__input mr-md\"\r\n              name=\"paymentmethod\"\r\n              type=\"radio\"\r\n              value=\"PayPal\"\r\n              onChange={paymentMethodHandler}\r\n              defaultChecked\r\n            />\r\n            <GrPaypal className=\"payment-screen__payment-icon mr-sm\" />\r\n            PayPal\r\n          </label>\r\n          <label\r\n            className=\"payment-screen__label payment-screen__label--disabled mb-md\"\r\n            htmlFor=\"CreditCard\"\r\n          >\r\n            <input\r\n              id=\"CreditCard\"\r\n              className=\"payment-screen__input  mr-md\"\r\n              name=\"paymentmethod\"\r\n              type=\"radio\"\r\n              value=\"Credit Card\"\r\n              onChange={paymentMethodHandler}\r\n              disabled\r\n            />\r\n            <BsCreditCard className=\"payment-screen__payment-icon payment-screen__payment-icon--disabled mr-sm\" />{\" \"}\r\n            Credit Card\r\n          </label>\r\n          <label\r\n            className=\"payment-screen__label  payment-screen__label--disabled mb-md\"\r\n            htmlFor=\"Stripe\"\r\n          >\r\n            <input\r\n              id=\"Stripe\"\r\n              className=\"payment-screen__input payment-screen__input--disabled mr-md\"\r\n              name=\"paymentmethod\"\r\n              type=\"radio\"\r\n              value=\"Stripe\"\r\n              onChange={paymentMethodHandler}\r\n              disabled\r\n            />\r\n            <GrStripe className=\"payment-screen__payment-icon mr-sm\" /> Stripe\r\n          </label>\r\n\r\n          <div className=\"line-break\" />\r\n          <h1 className=\"heading-1  mt-sm mb-sm\">Chose a shipping method</h1>\r\n\r\n          <label className=\"payment-screen__label \" htmlFor=\"DHLStandard\">\r\n            <input\r\n              id=\"DHL Standard Shipping\"\r\n              className=\"payment-screen__input mr-md\"\r\n              name=\"shippingOption\"\r\n              type=\"radio\"\r\n              value={5.99}\r\n              onChange={shippmentMethodHandler}\r\n              defaultChecked\r\n            />\r\n            <DHL\r\n              style={{ width: \"7rem\", height: \"7rem\" }}\r\n              className=\"payment-screen__payment-icon mr-sm\"\r\n            />\r\n            DHL Standard Shipping <strong>&nbsp;&nbsp;( + 5.99 €)</strong>\r\n          </label>\r\n          <label className=\"payment-screen__label \" htmlFor=\"DHL1Day\">\r\n            <input\r\n              id=\"DHL 1 Day Delivery\"\r\n              className=\"payment-screen__input mr-md\"\r\n              name=\"shippingOption\"\r\n              type=\"radio\"\r\n              value={8.99}\r\n              onChange={shippmentMethodHandler}\r\n            />\r\n            <DHL\r\n              style={{ width: \"7rem\", height: \"7rem\" }}\r\n              className=\"payment-screen__payment-icon mr-sm\"\r\n            />\r\n            DHL 1 Day Delivery <strong>&nbsp;&nbsp;( + 8.99 €)</strong>\r\n          </label>\r\n          <label className=\"payment-screen__label mb-md\" htmlFor=\"Correos\">\r\n            <input\r\n              id=\"Correos 3-5 Day Delivery\"\r\n              className=\"payment-screen__input mr-md\"\r\n              name=\"shippingOption\"\r\n              type=\"radio\"\r\n              value={3.99}\r\n              onChange={shippmentMethodHandler}\r\n            />\r\n            <Correos\r\n              style={{ width: \"7rem\", height: \"7rem\" }}\r\n              className=\"payment-screen__payment-icon mr-sm\"\r\n            />\r\n            Correos 3-5 Day Delivery <strong>&nbsp;&nbsp;( + 3.99 €)</strong>\r\n          </label>\r\n          <button className=\"payment-screen__ship-btn\">\r\n            Continue <AiOutlineDoubleRight className=\"payment-screen__arrows\" />{\" \"}\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PaymentScreen;\r\n","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\product-screen\\ProductScreen.js",["249","250"],"//! Core\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport \"./ProductScreen.scss\";\r\nimport axios from \"axios\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\n//! Components\r\nimport LoaderGeneric from \"../../components/loader-generic/LoaderGeneric.js\";\r\nimport ActionShow from \"../../components/action-show/ActionShow.js\";\r\nimport AddReview from \"../../components/add-review/AddReview.js\";\r\nimport Review from \"../../components/review/Review\";\r\n\r\nimport Rating from \"@material-ui/lab/Rating\";\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\n//! Icons\r\nimport { FaHeart } from \"react-icons/fa\";\r\nimport { TiShoppingCart } from \"react-icons/ti\";\r\nimport { AiOutlineCheckCircle, AiOutlineCloseCircle } from \"react-icons/ai\";\r\n\r\n//! Redux Actions\r\nimport { addToCart, getCartProducts } from \"../../redux/cart/cart.actions.js\";\r\nimport { listFavoriteProducts } from \"../../redux/user/user.actions.js\";\r\n\r\n//!==================================================================\r\n\r\nconst ProductScreen = ({ match }) => {\r\n  //! Hooks declaration\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  //! State\r\n  const [like, setLike] = useState(false);\r\n  const [product, setProduct] = useState({ reviews: [], likedBy: [] });\r\n  const [loading, setLoading] = useState(true);\r\n  const [qty, setQty] = useState(1);\r\n  const [toCart, setToCart] = useState(false);\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  //! Redux data selection hook\r\n  const favoriteProductsList = useSelector(\r\n    (state) => state.userFavoriteProducts\r\n  );\r\n  const { userFavoriteProducts } = favoriteProductsList;\r\n  const isFavorite = userFavoriteProducts.find(\r\n    (favoriteProduct) => favoriteProduct._id == product._id\r\n  );\r\n  //! Get the product by id from the API\r\n  useEffect(async () => {\r\n    const { data } = await axios.get(`/api/products/${match.params.id}`);\r\n    setProduct(data);\r\n    setLoading(false);\r\n\r\n    if (isFavorite) {\r\n      setLike(true);\r\n    } else {\r\n      setLike(false);\r\n    }\r\n    return () => clearTimeout();\r\n  }, [match, isFavorite]);\r\n\r\n  //!Handlers\r\n  const addToCartHandler = () => {\r\n    dispatch(addToCart(match.params.id, Number(qty)));\r\n    dispatch(getCartProducts());\r\n    setToCart(true);\r\n    setTimeout(() => {\r\n      setToCart(false);\r\n    }, 3100);\r\n  };\r\n\r\n  const handleAddUserToLikedArrayAndProductToFavorites = async (id) => {\r\n    try {\r\n      if (!userInfo) {\r\n        history.push(\"/login\");\r\n      } else {\r\n        const config = {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${userInfo.token}`,\r\n          },\r\n        };\r\n        await axios.put(`/api/products/`, { _id: id }, config);\r\n        await axios.post(`/api/users/profile/favorites`, { _id: id }, config);\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const removeFromFavoriteHandler = (id) => {\r\n    const deleteProduct = async () => {\r\n      try {\r\n        const config = {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${userInfo.token}`,\r\n          },\r\n        };\r\n        await axios.delete(`/api/users/profile/favorites/${id}`, config);\r\n\r\n        dispatch(listFavoriteProducts());\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    deleteProduct();\r\n  };\r\n\r\n  const likedByNumber = product.likedBy.length;\r\n\r\n  return (\r\n    <>\r\n      {toCart ? <ActionShow /> : null}\r\n      <div className=\" top-links mb-sm\">\r\n        {\" \"}\r\n        <Link className=\"product-screen__link\" to=\"/\">\r\n          &#10092;&#10092; Home\r\n        </Link>\r\n        <span onClick={() => history.goBack()} className=\"product-screen__link\">\r\n          &#10092;&#10092; Shop\r\n        </span>\r\n      </div>\r\n      {loading ? (\r\n        <LoaderGeneric />\r\n      ) : (\r\n        <>\r\n          <div className=\"product-screen__body\">\r\n            <h1 className=\"product-screen__name\">{product.name}</h1>\r\n            <div className=\"product-screen__image-wrapper\">\r\n              <img\r\n                className=\"product-screen__image\"\r\n                src={product.image}\r\n                alt=\"product\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"product-screen__price\">\r\n              <h4 className=\" product-screen__price--title\">PRICE</h4>\r\n              <span className=\" product-screen__price--value\">\r\n                € {product.price}\r\n              </span>\r\n              {product.countInStock > 0 ? (\r\n                <p className=\"product-screen__stock\">\r\n                  <AiOutlineCheckCircle />\r\n                  &nbsp;&nbsp;Product is in stock\r\n                </p>\r\n              ) : (\r\n                <p className=\"product-screen__stock product-screen__stock--out\">\r\n                  <AiOutlineCloseCircle />\r\n                  &nbsp;&nbsp; Product out of stock\r\n                </p>\r\n              )}\r\n\r\n              {product.countInStock > 0 && (\r\n                <div className=\"product-screen__quantity-selector\">\r\n                  <form action=\"\">\r\n                    <label\r\n                      className=\"product-screen__quantity-selector--text\"\r\n                      htmlFor=\"quantity\"\r\n                    >\r\n                      Select quantity\r\n                    </label>\r\n                    <select\r\n                      className=\"product-screen__quantity-selector--selection\"\r\n                      value={qty}\r\n                      name=\"quantity\"\r\n                      id=\"quantity\"\r\n                      onChange={(e) => setQty(e.target.value)}\r\n                    >\r\n                      {[...Array(product.countInStock).keys()].map((el) => (\r\n                        <option\r\n                          className=\"product-screen__quantity-selector--option\"\r\n                          key={el + 1}\r\n                          value={el + 1}\r\n                        >\r\n                          {el + 1}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                  </form>\r\n                </div>\r\n              )}\r\n              {product.countInStock === 0 ? (\r\n                <button className=\"product-screen__button-disabled\">\r\n                  {\" \"}\r\n                  <TiShoppingCart className=\"product-screen__button--icon\" />{\" \"}\r\n                  out of stock{\" \"}\r\n                </button>\r\n              ) : (\r\n                <button\r\n                  onClick={async () => addToCartHandler()}\r\n                  className=\"product-screen__button\"\r\n                >\r\n                  <TiShoppingCart className=\"product-screen__button--icon\" />{\" \"}\r\n                  Add to cart\r\n                </button>\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"product-screen__rating\">\r\n              <span className=\"product__rating-text\">\r\n                User Rating:&nbsp;&nbsp;&nbsp;\r\n                <strong>{product.rating}</strong> ({product.numReviews} reviews)\r\n              </span>\r\n              <Box component=\"fieldset\" borderColor=\"transparent\">\r\n                <Rating\r\n                  name=\"Product Rating\"\r\n                  title=\"Product Rating\"\r\n                  value={product.rating}\r\n                  size=\"large\"\r\n                  readOnly\r\n                />\r\n              </Box>\r\n            </div>\r\n            <div className=\"product-screen__add-favorite\">\r\n              {like ? (\r\n                <div className=\"product-screen__add-favorite--flex\">\r\n                  <FaHeart\r\n                    onClick={async () => {\r\n                      await removeFromFavoriteHandler(product._id);\r\n                      await dispatch(listFavoriteProducts());\r\n                    }}\r\n                    className=\"product-screen__heart product-screen__heart--selected\"\r\n                  />\r\n                  <span className=\"product-screen__add-favorite--text ml-sm\">\r\n                    FAVORITE PRODUCT\r\n                  </span>{\" \"}\r\n                </div>\r\n              ) : (\r\n                <div className=\"product-screen__add-favorite--flex\">\r\n                  <FaHeart\r\n                    onClick={async () => {\r\n                      await handleAddUserToLikedArrayAndProductToFavorites(\r\n                        product._id\r\n                      );\r\n                      await dispatch(listFavoriteProducts());\r\n                    }}\r\n                    className=\"product-screen__heart\"\r\n                  />\r\n                  <span className=\"product-screen__add-favorite--text ml-sm\">\r\n                    ADD TO FAVORITES\r\n                  </span>\r\n                </div>\r\n              )}\r\n              <span className=\"product-screen__add-favorite--favorite-by\">\r\n                {\" \"}\r\n                ( Favorite by {likedByNumber}{\" \"}\r\n                {likedByNumber > 1 ? \"users\" : \"user\"} )\r\n              </span>\r\n            </div>\r\n            <div className=\"product-screen__details\">\r\n              <h3 className=\"heading-3 product-screen__product-description-title\">\r\n                {\" \"}\r\n                <strong>PRODUCT DESCRIPTION</strong>{\" \"}\r\n              </h3>\r\n              <p className=\"product-screen__details--text\">\r\n                {product.description}\r\n              </p>\r\n            </div>\r\n          </div>\r\n          <AddReview productId={product._id} />\r\n          <div className=\"line-break\"></div>\r\n\r\n          {product.reviews.map((review) => (\r\n            <Review key={review._id} review={review} />\r\n          ))}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductScreen;\r\n","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\complete-order-screen\\CompleteOrder.js",["251","252","253"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./CompleteOrder.scss\";\r\nimport CheckoutSteps from \"../../components/checkout-steps/CheckoutSteps\";\r\nimport axios from \"axios\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { GrPaypal, GrCreditCard, GrStripe } from \"react-icons/gr\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { addToCart, getCartProducts } from \"../../redux/cart/cart.actions.js\";\r\nimport { roundToTwo } from \"../../utils.js\";\r\n\r\nimport {\r\n  addOrderAddress,\r\n  createOrder,\r\n  saveOrderPaymentMethod,\r\n} from \"../../redux/order/order.actions\";\r\n\r\n//todo implement gsapp to stop the buy now on screen\r\n//!=======================================================\r\n\r\nconst CompleteOrder = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const cart = useSelector((state) => state.cart);\r\n  const { cartProducts } = cart;\r\n  const orderAddressState = useSelector((state) => state.orderAddress);\r\n  const { orderAddress } = orderAddressState;\r\n\r\n  const orderCreate = useSelector((state) => state.orderCreate);\r\n  const { order, success, error } = orderCreate;\r\n\r\n  const orderPaymentMethod = useSelector((state) => state.orderPaymentMethod);\r\n  const paymentMethod = orderPaymentMethod.paymentMethod;\r\n  const { shippingMethod } = orderPaymentMethod;\r\n  //! REMOVE ALL CART ITEMS WHEN YOU PLACE THE ORDER==\r\n\r\n  const clearCartHandler = async () => {\r\n    try {\r\n      if (!userInfo) {\r\n        history.push(\"/login\");\r\n      } else {\r\n        const config = {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${userInfo.token}`,\r\n          },\r\n        };\r\n        await axios.delete(`/api/cart`, config);\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n  //!==================================================\r\n  useEffect(() => {\r\n    if (success) {\r\n      history.push(`/profile/orders/${order._id}`);\r\n    }\r\n    if (!orderAddress.fullName) {\r\n      history.push(\"/shipping\");\r\n    } else if (!orderPaymentMethod.paymentMethod) {\r\n      history.push(\"/payment\");\r\n    }\r\n  }, [orderAddress, history, orderPaymentMethod, order]);\r\n  const removeCartProduct = (id) => {\r\n    const deleteProduct = async () => {\r\n      try {\r\n        const config = {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${userInfo.token}`,\r\n          },\r\n        };\r\n        await axios.delete(`/api/cart/${id}`, config);\r\n\r\n        dispatch(getCartProducts());\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    deleteProduct();\r\n  };\r\n\r\n  const subtotal = cartProducts.reduce(\r\n    (accum, cartItem) => accum + cartItem.quantity * cartItem.product.price,\r\n    0\r\n  );\r\n  const totalPrice = roundToTwo(subtotal + shippingMethod.price);\r\n\r\n  //* Place order action ======================================\r\n  const placeOrderHandler = async () => {\r\n    dispatch(\r\n      createOrder({\r\n        orderItems: cartProducts,\r\n        shippingAddress: orderAddress,\r\n        paymentMethod: paymentMethod,\r\n        itemsPrice: roundToTwo(subtotal),\r\n        shippingPrice: roundToTwo(shippingMethod.price),\r\n        shippingMethod: shippingMethod.name,\r\n        totalPrice: roundToTwo(totalPrice),\r\n      })\r\n    );\r\n\r\n    clearCartHandler();\r\n    dispatch(getCartProducts());\r\n  };\r\n  //*============================================================\r\n  return (\r\n    <div className=\"complete-order shipping-section\">\r\n      <CheckoutSteps active3=\"selected-3\" />\r\n      <div>\r\n        <h1 className=\"heading-1  mt-sm mb-sm\">Order summary</h1>\r\n      </div>\r\n      <div className=\"complete-order__grid\">\r\n        <div className=\"complete-order__address-info complete-order__steps-container\">\r\n          <h3 className=\"heading-3 complete-order__steps-title mb-sm mt-sm\">\r\n            1. Shipping address\r\n          </h3>\r\n          <address className=\"complete-order__middle-text\">\r\n            <p>{orderAddress.fullName}</p>\r\n            <p>{orderAddress.line1}</p>\r\n            <p>{orderAddress.line2}</p>\r\n            <p>{orderAddress.city}</p>\r\n            <p>{orderAddress.stateProvinceRegion}</p>\r\n            <p>{orderAddress.country}</p>\r\n            <p>{orderAddress.postalCode}</p>\r\n            <p>{orderAddress.phoneNumber}</p>\r\n          </address>\r\n          <span\r\n            onClick={() => {\r\n              dispatch(addOrderAddress({}));\r\n            }}\r\n            className=\"complete-order__change-link\"\r\n          >\r\n            Change address\r\n          </span>\r\n        </div>\r\n        <div className=\"complete-order__payment-info complete-order__steps-container\">\r\n          <h3 className=\"heading-3 complete-order__steps-title mb-sm mt-sm\">\r\n            2. Payment Method\r\n          </h3>\r\n          <p\r\n            style={{ alignSelf: \"center\", fontSize: \"1.4rem\" }}\r\n            className=\"complete-order__middle-text\"\r\n          >\r\n            {paymentMethod === \"PayPal\" ? (\r\n              <GrPaypal className=\" mr-sm\" />\r\n            ) : paymentMethod === \"Credit Card\" ? (\r\n              <GrCreditCard className=\" mr-sm\" />\r\n            ) : (\r\n              <GrStripe className=\" mr-sm\" />\r\n            )}\r\n            {paymentMethod}\r\n          </p>\r\n          <span\r\n            onClick={() => {\r\n              dispatch(saveOrderPaymentMethod(\"\", {}));\r\n            }}\r\n            className=\"complete-order__change-link\"\r\n          >\r\n            Change payment\r\n          </span>\r\n        </div>\r\n        <div className=\"complete-order__shipment-info complete-order__steps-container\">\r\n          <h3 className=\"heading-3 complete-order__steps-title mb-sm mt-sm\">\r\n            3. Shipment Method\r\n          </h3>\r\n          <p\r\n            style={{ alignSelf: \"center\" }}\r\n            className=\"complete-order__middle-text\"\r\n          >\r\n            {shippingMethod.name} &nbsp;{\" \"}\r\n            <span style={{ color: \" #fd3e3e\" }}>\r\n              + {shippingMethod.price} €\r\n            </span>\r\n          </p>\r\n\r\n          <span\r\n            onClick={() => dispatch(saveOrderPaymentMethod(\"\", {}))}\r\n            className=\"complete-order__change-link\"\r\n          >\r\n            Change shipment\r\n          </span>\r\n        </div>\r\n        <div className=\"complete-order__products-info \">\r\n          <h3\r\n            style={{ padding: \"1rem\" }}\r\n            className=\"heading-3 complete-order__steps-title mb-sm mt-sm\"\r\n          >\r\n            4. Review Products\r\n          </h3>\r\n\r\n          {cartProducts.length === 0 ? (\r\n            <h3 className=\"heading-3 complete-order__steps-title\">\r\n              Cart is empty\r\n            </h3>\r\n          ) : (\r\n            cartProducts.map((item) => (\r\n              <div key={item.product._id} className=\"complete-order__item\">\r\n                <img\r\n                  onClick={() => history.push(`/product/${item.product._id}`)}\r\n                  src={item.product.image}\r\n                  alt={item.product.name}\r\n                  className=\"complete-order__image\"\r\n                />\r\n                <div className=\"complete-order__item-details\">\r\n                  <h4\r\n                    onClick={() => history.push(`/product/${item.product._id}`)}\r\n                    className=\"heading-4 complete-order__item-details--title\"\r\n                  >\r\n                    {item.product.name} x {item.quantity}\r\n                  </h4>\r\n                  {item.product.countInStock ? (\r\n                    <h3 className=\"in-stock\">In stock</h3>\r\n                  ) : (\r\n                    <h3 className=\"out-of-stock-favorites\">Not in stock</h3>\r\n                  )}\r\n                  <h4 className=\"heading-4 complete-order__item-details--price\">\r\n                    PRICE:\r\n                  </h4>\r\n                  <h4 className=\"heading-4 complete-order__item-details--price-value\">\r\n                    € {item.product.price} &#10006;&nbsp;\r\n                    {item.product.countInStock > 0 && (\r\n                      <div className=\"complete-order__quantity-selector complete-order__quantity-selector\">\r\n                        <form action=\"\">\r\n                          <label\r\n                            className=\"complete-order__quantity-selector--text\"\r\n                            htmlFor=\"quantity\"\r\n                          >\r\n                            quantity\r\n                          </label>\r\n                          <select\r\n                            className=\"complete-order__quantity-selector--selection\"\r\n                            value={item.quantity}\r\n                            name=\"quantity\"\r\n                            id=\"quantity\"\r\n                            onChange={(e) => {\r\n                              dispatch(\r\n                                addToCart(\r\n                                  item.product._id,\r\n                                  Number(e.target.value)\r\n                                )\r\n                              );\r\n                              dispatch(getCartProducts());\r\n                            }}\r\n                          >\r\n                            {[...Array(item.product.countInStock).keys()].map(\r\n                              (el) => (\r\n                                <option\r\n                                  className=\"complete-order__quantity-selector--option\"\r\n                                  key={el + 1}\r\n                                  value={el + 1}\r\n                                >\r\n                                  {el + 1}\r\n                                </option>\r\n                              )\r\n                            )}\r\n                          </select>\r\n                        </form>\r\n                      </div>\r\n                    )}\r\n                  </h4>\r\n                  <span\r\n                    onClick={() => removeCartProduct(item._id)}\r\n                    className=\"complete-order__remove\"\r\n                  >\r\n                    Remove\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            ))\r\n          )}\r\n        </div>\r\n        <div className=\"complete-order__summary\">\r\n          <button\r\n            onClick={placeOrderHandler}\r\n            className=\"complete-order__buy-btn\"\r\n          >\r\n            PLACE ORDER\r\n          </button>\r\n\r\n          <h3 className=\"heading-3 complete-order__summary--title\">\r\n            Order Price\r\n          </h3>\r\n          <span style={{ gridColumn: \"1/3\", fontSize: \"1.2rem\" }}>\r\n            (All prices include VAT)\r\n          </span>\r\n          <h4 className=\"heading-4 complete-order__summary--text\">Products:</h4>\r\n          <span className=\"complete-order__summary--value\">\r\n            {roundToTwo(subtotal)}€\r\n          </span>\r\n          <h4 className=\"heading-4 complete-order__summary--text\">Shipping:</h4>\r\n          <span className=\"complete-order__summary--value\">\r\n            {shippingMethod.price}€\r\n          </span>\r\n          <h2 className=\"heading-2 complete-order__summary--total\">TOTAL:</h2>\r\n          <h2 className=\"heading-2 complete-order__summary--total-value\">\r\n            {totalPrice}€\r\n          </h2>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CompleteOrder;\r\n","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\redux\\user\\user.actions.js",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\redux\\order\\order.actions.js",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\profile-sidebar\\ProfileSidebar.js",["254"],"import React, { useEffect } from \"react\";\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport \"./ProfileSidebar.scss\";\r\nimport { listFavoriteProducts } from \"../../redux/user/user.actions.js\";\r\nimport { FaHeart } from \"react-icons/fa\";\r\nimport { BiShoppingBag } from \"react-icons/bi\";\r\n//!=======================================================================\r\n\r\nfunction ProfileSidebar() {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const favoriteProductsList = useSelector(\r\n    (state) => state.userFavoriteProducts\r\n  );\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const { userFavoriteProducts, loading } = favoriteProductsList;\r\n  const favoriteProductsLength = userFavoriteProducts.length;\r\n\r\n  const cartItems = useSelector((state) => state.cart);\r\n  const { cartProducts } = cartItems;\r\n  const cartItemsNumber = cartProducts.reduce(\r\n    (accum, cartItem) => accum + cartItem.quantity,\r\n    0\r\n  );\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/login\");\r\n    }\r\n    dispatch(listFavoriteProducts());\r\n  }, [history, userInfo, dispatch]);\r\n  return (\r\n    <div className=\"profile-sidebar\">\r\n      <h1 className=\"profile-screen__title\">Your Account</h1>\r\n      <NavLink\r\n        className=\"profile-sidebar__options\"\r\n        activeClassName=\"profile-sidebar__active-link\"\r\n        to=\"/profile/info\"\r\n      >\r\n        {\" \"}\r\n        <p>Info</p>{\" \"}\r\n      </NavLink>\r\n\r\n      <NavLink\r\n        className=\"profile-sidebar__options\"\r\n        activeClassName=\"profile-sidebar__active-link\"\r\n        to=\"/profile/addresses\"\r\n      >\r\n        {\" \"}\r\n        <p>Addresses</p>{\" \"}\r\n      </NavLink>\r\n\r\n      <NavLink\r\n        className=\"profile-sidebar__options\"\r\n        activeClassName=\"profile-sidebar__active-link\"\r\n        to=\"/profile/favorites\"\r\n      >\r\n        {\" \"}\r\n        <p\r\n          style={{\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          Favorites &nbsp;\r\n          <i\r\n            style={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            ({favoriteProductsLength}&nbsp;{\" \"}\r\n            <FaHeart style={{ color: \" #fd3e3e\" }} />)\r\n          </i>{\" \"}\r\n        </p>\r\n      </NavLink>\r\n\r\n      <NavLink\r\n        activeClassName=\"profile-sidebar__active-link\"\r\n        className=\"profile-sidebar__options\"\r\n        to=\"/profile/reviews\"\r\n      >\r\n        {\" \"}\r\n        <p>Reviews</p>{\" \"}\r\n      </NavLink>\r\n\r\n      <NavLink\r\n        className=\"profile-sidebar__options\"\r\n        activeClassName=\"profile-sidebar__active-link\"\r\n        to=\"/profile/messages\"\r\n      >\r\n        {\" \"}\r\n        <p>Messages</p>{\" \"}\r\n      </NavLink>\r\n\r\n      <h1 className=\"profile-screen__title\">Orders</h1>\r\n      <NavLink\r\n        className=\"profile-sidebar__options\"\r\n        activeClassName=\"profile-sidebar__active-link\"\r\n        to=\"/profile/orders\"\r\n      >\r\n        {\" \"}\r\n        <p>Orders & Bills</p>{\" \"}\r\n      </NavLink>\r\n\r\n      <NavLink\r\n        className=\"profile-sidebar__options\"\r\n        activeClassName=\"profile-sidebar__active-link\"\r\n        to=\"/profile/checkout\"\r\n      >\r\n        {\" \"}\r\n        <p\r\n          style={{\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          Checkout &nbsp;\r\n          <i\r\n            style={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            ({cartItemsNumber}&nbsp;\r\n            <BiShoppingBag />)\r\n          </i>\r\n        </p>{\" \"}\r\n      </NavLink>\r\n\r\n      <NavLink\r\n        className=\"profile-sidebar__options\"\r\n        activeClassName=\"profile-sidebar__active-link\"\r\n        to=\"/profile/returns\"\r\n      >\r\n        {\" \"}\r\n        <p>Item returns</p>{\" \"}\r\n      </NavLink>\r\n\r\n      <NavLink\r\n        activeClassName=\"profile-sidebar__active-link\"\r\n        className=\"profile-sidebar__options\"\r\n        to=\"/profile/warranty\"\r\n      >\r\n        {\" \"}\r\n        <p>Warranty</p>{\" \"}\r\n      </NavLink>\r\n\r\n      <h1 className=\"profile-screen__title\">Payment</h1>\r\n      <NavLink\r\n        activeClassName=\"profile-sidebar__active-link\"\r\n        className=\"profile-sidebar__options\"\r\n        to=\"/profile/cards\"\r\n      >\r\n        {\" \"}\r\n        <p>Your cards</p>{\" \"}\r\n      </NavLink>\r\n\r\n      <NavLink\r\n        className=\"profile-sidebar__options\"\r\n        activeClassName=\"profile-sidebar__active-link\"\r\n        to=\"/profile/payment-methods\"\r\n      >\r\n        {\" \"}\r\n        <p>Other payment methods</p>{\" \"}\r\n      </NavLink>\r\n\r\n      <NavLink\r\n        className=\"profile-sidebar__options\"\r\n        activeClassName=\"profile-sidebar__active-link\"\r\n        to=\"/profile/discounts\"\r\n      >\r\n        {\" \"}\r\n        <p>Discount coupons</p>{\" \"}\r\n      </NavLink>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProfileSidebar;\r\n","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\profile-info-screen\\YourInfo.js",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\profile-addresses-screen\\ProfileAddresses.js",["255"],"import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getUserAddresses } from \"../../redux/user/user.actions.js\";\r\nimport \"./ProfileAddresses.scss\";\r\nimport AddressEdit from \"../address-edit-modal/AddressEdit.js\";\r\nimport AddAddress from \"../../components/add-address/AddAddress.js\";\r\nimport axios from \"axios\";\r\n//!=============================================\r\n\r\nconst ProfileAddresses = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const [addAddressToggle, setAddAddressToggle] = useState(false);\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { user } = userDetails;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile);\r\n  const { success } = userUpdateProfile;\r\n\r\n  const userAddresses = useSelector((state) => state.userAddresses);\r\n\r\n  const { addresses } = userAddresses;\r\n\r\n  const handleAddAddress = () => {\r\n    setAddAddressToggle(!addAddressToggle);\r\n  };\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/login\");\r\n    }\r\n    dispatch(getUserAddresses());\r\n  }, [history, userInfo, user, dispatch]);\r\n\r\n  const deleteAddressHandler = (id) => {\r\n    const deleteAddress = async () => {\r\n      try {\r\n        const config = {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${userInfo.token}`,\r\n          },\r\n        };\r\n        await axios.delete(`/api/users/profile/addresses/${id}`, config);\r\n\r\n        dispatch(getUserAddresses());\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    deleteAddress();\r\n  };\r\n\r\n  return (\r\n    <div className=\"profile-addresses\">\r\n      <h1 className=\"heading-1 \">YOUR ADDRESSES</h1>\r\n      <div className=\"profile-addresses__grid\">\r\n        {addresses\r\n          ? addresses.map((address, idx) => (\r\n              <div key={address._id} className=\"gradient-wrapper\">\r\n                <div className=\"profile-addresses__address\">\r\n                  <h3 className=\"profile-addresses__address__title\">\r\n                    Address {idx + 1}\r\n                  </h3>\r\n\r\n                  <address>\r\n                    <p className=\"profile-addresses__text\">\r\n                      <strong>{address.fullName}</strong>\r\n                    </p>\r\n                    <p className=\"profile-addresses__text\">{address.line1}</p>\r\n                    <p className=\"profile-addresses__text\">{address.line2}</p>\r\n                    <p className=\"profile-addresses__text\">\r\n                      {address.city} , {address.stateProvinceRegion} ,{\" \"}\r\n                      {address.postalCode}\r\n                    </p>\r\n\r\n                    <p className=\"profile-addresses__text\">{address.country}</p>\r\n                    <p className=\"profile-addresses__text\">\r\n                      {address.phoneNumber}\r\n                    </p>\r\n                  </address>\r\n                  <div className=\"profile-addresses__address__bottom-links\">\r\n                    <AddressEdit address={address} />\r\n                    <span\r\n                      onClick={() => {\r\n                        deleteAddressHandler(address._id);\r\n                      }}\r\n                      className=\"profile-addresses__address__bottom-links--action \"\r\n                    >\r\n                      Delete\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))\r\n          : \"\"}\r\n        <address\r\n          onClick={handleAddAddress}\r\n          className=\"profile-addresses__address profile-addresses__add-address\"\r\n        >\r\n          <span style={{ fontSize: \"8rem\" }}>&#9783;</span>\r\n          Add new address\r\n        </address>\r\n      </div>\r\n      <div className=\"line-break\" />\r\n\r\n      {addAddressToggle ? <AddAddress /> : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileAddresses;\r\n","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\checkout-screen\\Checkout.js",["256","257"],"import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport StarRatings from \"react-star-ratings\";\r\n\r\nimport \"./Checkout.scss\";\r\nimport { roundToTwo } from \"../../utils.js\";\r\nimport axios from \"axios\";\r\nimport { getCartProducts, addToCart } from \"../../redux/cart/cart.actions.js\";\r\n\r\n//!=======================================================\r\nconst Checkout = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const cartItems = useSelector((state) => state.cart);\r\n  const { loading, cartProducts } = cartItems;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const cartItemsNumber = cartProducts.reduce(\r\n    (accum, cartItem) => accum + cartItem.quantity,\r\n    0\r\n  );\r\n  //todo if the item is in cart but it runs out of stock it still calculates it to the total... do a check to eliminate the cart item out of stock first\r\n  const subtotal = cartProducts.reduce(\r\n    (accum, cartItem) => accum + cartItem.quantity * cartItem.product.price,\r\n    0\r\n  );\r\n\r\n  const removeCartProduct = (id) => {\r\n    const deleteProduct = async () => {\r\n      try {\r\n        const config = {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${userInfo.token}`,\r\n          },\r\n        };\r\n        await axios.delete(`/api/cart/${id}`, config);\r\n\r\n        dispatch(getCartProducts());\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    deleteProduct();\r\n  };\r\n\r\n  const checkoutHandler = () => {\r\n    history.push(\"/shipping\");\r\n  };\r\n  return (\r\n    <div className=\"checkout-screen\">\r\n      <h1 className=\"heading-1  \">CHECK OUT</h1>\r\n      <div className=\"checkout-screen__subtotal\">\r\n        <div>\r\n          <h3 className=\"checkout-screen__subtotal--title\">\r\n            Subtotal ({cartItemsNumber} products):\r\n          </h3>\r\n          <h3 className=\"checkout-screen__subtotal--value\">\r\n            € {roundToTwo(subtotal)}\r\n          </h3>\r\n        </div>\r\n        {cartItems.length === 0 ? (\r\n          <button className=\" btn-disabled\">Cart is empty</button>\r\n        ) : (\r\n          <button\r\n            onClick={() => {\r\n              checkoutHandler();\r\n            }}\r\n            className=\"checkout-screen__subtotal--button\"\r\n          >\r\n            Proceed to checkout\r\n          </button>\r\n        )}\r\n      </div>\r\n      <h2 className=\"checkout-screen__item-count\">\r\n        You have {cartItemsNumber} items in your cart.\r\n      </h2>\r\n      {cartProducts.map((item) => (\r\n        <div key={item.product._id} className=\"checkout-screen__item\">\r\n          <img\r\n            src={item.product.image}\r\n            alt={item.product.name}\r\n            className=\"checkout-screen__image\"\r\n          />\r\n          <div className=\"checkout-screen__item-details\">\r\n            <h3 className=\"heading-3 checkout-screen__item-details--title\">\r\n              {item.product.name} x {item.quantity}\r\n            </h3>\r\n            {item.product.countInStock ? (\r\n              <h3 className=\"in-stock\">In stock</h3>\r\n            ) : (\r\n              <h3 className=\"out-of-stock-favorites\">Not in stock</h3>\r\n            )}\r\n            <h3 className=\"heading-3 checkout-screen__item-details--price\">\r\n              PRICE:\r\n            </h3>\r\n            <h3 className=\"heading-3 checkout-screen__item-details--price-value\">\r\n              € {item.product.price} &#10006;&nbsp;\r\n              {item.product.countInStock > 0 && (\r\n                <div className=\"product-screen__quantity-selector checkout-screen__quantity-selector\">\r\n                  <form action=\"\">\r\n                    <label\r\n                      className=\"product-screen__quantity-selector--text\"\r\n                      htmlFor=\"quantity\"\r\n                    >\r\n                      quantity\r\n                    </label>\r\n                    <select\r\n                      className=\"product-screen__quantity-selector--selection\"\r\n                      value={item.quantity}\r\n                      name=\"quantity\"\r\n                      id=\"quantity\"\r\n                      onChange={(e) => {\r\n                        dispatch(\r\n                          addToCart(item.product._id, Number(e.target.value))\r\n                        );\r\n                        dispatch(getCartProducts());\r\n                      }}\r\n                    >\r\n                      {[...Array(item.product.countInStock).keys()].map(\r\n                        (el) => (\r\n                          <option\r\n                            className=\"product-screen__quantity-selector--option\"\r\n                            key={el + 1}\r\n                            value={el + 1}\r\n                          >\r\n                            {el + 1}\r\n                          </option>\r\n                        )\r\n                      )}\r\n                    </select>\r\n                  </form>\r\n                </div>\r\n              )}\r\n            </h3>\r\n            <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n              <StarRatings\r\n                className=\"product-screen__rating-stars \"\r\n                rating={item.product.rating}\r\n                starDimension=\"2rem\"\r\n                starSpacing=\".25rem\"\r\n                starRatedColor=\"rgb(255, 180, 3)\"\r\n              />\r\n              <span className=\"product__rating-text ml-sm\">\r\n                User Rating:&nbsp;&nbsp;&nbsp;\r\n                <strong>{item.product.rating}</strong> (\r\n                {item.product.numReviews} reviews)\r\n              </span>\r\n            </div>\r\n            <span\r\n              onClick={() => removeCartProduct(item._id)}\r\n              className=\"checkout-screen__remove\"\r\n            >\r\n              Remove\r\n            </span>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Checkout;\r\n","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\address-edit-modal\\AddressEdit.js",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\error-message\\ErrorMessage.js",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\redux\\product\\product.actions.js",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\user-menu-dropdown\\UserDropdown.js",["258"],"import React from \"react\";\r\nimport \"./UserDropdown.scss\";\r\nimport { FiLogOut } from \"react-icons/fi\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { logout } from \"../../redux/user/user.actions.js\";\r\nimport { toggleUserMenuShow } from \"../../redux/user/user.actions.js\";\r\nimport { useHistory } from \"react-router-dom\";\r\n//!==================================================\r\nconst UserDropdown = () => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  const logoutHandler = () => {\r\n    dispatch(logout());\r\n    // history.push(\"/\");\r\n  };\r\n  const menuToggler = () => {\r\n    dispatch(toggleUserMenuShow());\r\n  };\r\n  return (\r\n    <div className=\"user-dropdown\">\r\n      <ul>\r\n        <li className=\"user-dropdown__list-item\">\r\n          <Link onClick={menuToggler} to=\"/profile/info\">\r\n            Profile\r\n          </Link>\r\n        </li>\r\n\r\n        <Link\r\n          to=\"/profile/orders\"\r\n          onClick={menuToggler}\r\n          className=\"user-dropdown__list-item\"\r\n        >\r\n          My orders\r\n        </Link>\r\n        <div />\r\n        <li\r\n          onClick={() => {\r\n            logoutHandler();\r\n            menuToggler();\r\n          }}\r\n          style={{\r\n            borderTop: \"1px solid $color-grey-light-1-2\",\r\n            paddingTop: \".5rem\",\r\n          }}\r\n          className=\"user-dropdown__list-item\"\r\n        >\r\n          Log Out&nbsp; <FiLogOut />\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserDropdown;\r\n","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\cart-dropdown\\CartDropdown.js",["259"],"import React, { useRef, useEffect } from \"react\";\r\nimport \"./CartDropdown.scss\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { TweenMax, Power3 } from \"gsap\";\r\nimport { toggleCartShow } from \"../../redux/cart/cart.actions.js\";\r\nimport { roundToTwo } from \"../../utils.js\";\r\nimport { getCartProducts } from \"../../redux/cart/cart.actions.js\";\r\nimport axios from \"axios\";\r\nimport { AiOutlineDelete } from \"react-icons/ai\";\r\n//!========================================================================\r\n//!========================================================================\r\n//!========================================================================\r\nconst CartDropdown = () => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const cartItems = useSelector((state) => state.cart);\r\n  const { loading, cartProducts } = cartItems;\r\n\r\n  //! CALCULATE TOTAL NUMBER OF PRODUCTS IN CART ===========================\r\n  const cartItemsNumber = cartProducts.reduce(\r\n    (accum, cartItem) => accum + cartItem.quantity,\r\n    0\r\n  );\r\n  const subtotal = cartProducts.reduce(\r\n    (accum, cartItem) => accum + cartItem.quantity * cartItem.product.price,\r\n    0\r\n  );\r\n\r\n  //! GO TO CHECKOUT PAGE LINK =============================================\r\n  const checkoutClickHandler = () => {\r\n    dispatch(toggleCartShow());\r\n  };\r\n  //! GO TO THE PRODUCT PAGE LINK ==========================================\r\n  const goToProductPage = (id) => {\r\n    history.push(`/product/${id}`);\r\n    dispatch(toggleCartShow());\r\n  };\r\n\r\n  //! FADE IN ANIMATION  ====================================================\r\n  //TODO ADD GSAP OR SPRING FOR THE UNMOUNT ANIMATION =======================\r\n  const cartRef = useRef(null);\r\n  useEffect(() => {\r\n    TweenMax.to(cartRef.current, 0.8, {\r\n      opacity: 1,\r\n      x: 0,\r\n      ease: Power3.easeOut,\r\n    });\r\n    dispatch(getCartProducts());\r\n  }, [dispatch]);\r\n\r\n  //! REMOVE PRODUCT FROM CART ==============================================\r\n\r\n  const removeCartProduct = (id) => {\r\n    const deleteProduct = async () => {\r\n      try {\r\n        const config = {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${userInfo.token}`,\r\n          },\r\n        };\r\n        await axios.delete(`/api/cart/${id}`, config);\r\n\r\n        dispatch(getCartProducts());\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    deleteProduct();\r\n  };\r\n\r\n  return (\r\n    <div ref={cartRef} className=\"cart\">\r\n      <div className=\"cart__top\">\r\n        <h3 className=\"cart__top--text\">\r\n          You have {cartItemsNumber} items in your cart\r\n        </h3>\r\n      </div>\r\n      {cartProducts.map((item) => (\r\n        <div key={item.product._id} className=\"cart__item\">\r\n          <div className=\"cart__item--image-container\">\r\n            <img\r\n              onClick={() => goToProductPage(item.product._id)}\r\n              src={item.product.image}\r\n              alt={item.product.name}\r\n              className=\"cart__item--image\"\r\n            />\r\n          </div>\r\n          <div className=\"cart__details\">\r\n            <h3 className=\"cart__details--title\">\r\n              {item.product.name}{\" \"}\r\n              <AiOutlineDelete\r\n                onClick={() => removeCartProduct(item._id)}\r\n                className=\"cart__details--delete\"\r\n              />\r\n            </h3>\r\n            <h3 className=\"cart__details--price\">\r\n              Price: &nbsp;\r\n              <span className=\"cart__details--price-value\">\r\n                {item.product.price}\r\n              </span>\r\n            </h3>\r\n            <h3 className=\"cart__details--quantity\">\r\n              Quantity:&nbsp;\r\n              <span className=\"cart__details--quantity-value price-number\">\r\n                {item.quantity}\r\n              </span>\r\n            </h3>\r\n            <h3 className=\"cart__details--total\">TOTAL:</h3>\r\n            <h3 className=\"cart__details--total-value price-number\">\r\n              € {roundToTwo(item.quantity * item.product.price)}\r\n            </h3>\r\n          </div>\r\n        </div>\r\n      ))}\r\n      <div className=\"cart__subtotal\">\r\n        <h2 className=\"cart__subtotal--text\">SUBTOTAL:</h2>\r\n        <h2 className=\"cart__subtotal--value price-number\">\r\n          € {roundToTwo(subtotal)}\r\n        </h2>\r\n      </div>\r\n      <div className=\"cart__checkout\">\r\n        <Link to=\"/profile/checkout\">\r\n          <button\r\n            onClick={checkoutClickHandler}\r\n            className=\"cart__checkout--btn\"\r\n          >\r\n            Go to checkout\r\n          </button>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CartDropdown;\r\n","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\utils.js",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\loader\\Loader.js",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\loader-product\\LoaderProduct.js",[],["260","261"],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\action-show\\ActionShow.js",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\order-screen\\OrderScreen.js",["262"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./OrderScreen.scss\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { GrPaypal, GrStripe } from \"react-icons/gr\";\r\nimport { BsCreditCard } from \"react-icons/bs\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport LoaderGeneric from \"../../components/loader-generic/LoaderGeneric.js\";\r\nimport ErrorMessage from \"../../components/error-message/ErrorMessage.js\";\r\nimport { getOrderDetails, payOrder } from \"../../redux/order/order.actions\";\r\nimport axios from \"axios\";\r\nimport { PayPalButton } from \"react-paypal-button-v2\";\r\nimport { orderConstants } from \"../../redux/order/order.constants.js\";\r\nimport { getCartProducts } from \"../../redux/cart/cart.actions.js\";\r\n\r\n//todo implement gsapp to stop the buy now on screen\r\n//!=======================================================\r\n\r\nconst OrderScreen = ({ match }) => {\r\n  const orderId = match.params.id;\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const [sdkReady, setSdkReady] = useState(false);\r\n\r\n  const orderDetails = useSelector((state) => state.orderDetails);\r\n  const { order, loading, error } = orderDetails;\r\n\r\n  const orderPay = useSelector((state) => state.orderPay);\r\n  const { loading: loadingPay, success: successPay } = orderPay;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  useEffect(() => {\r\n    dispatch(getCartProducts());\r\n    const addPayPalScript = async () => {\r\n      const { data: clientId } = await axios.get(\"/api/config/paypal\");\r\n      const script = document.createElement(\"script\");\r\n      script.type = \"text/javascript\";\r\n      script.async = true;\r\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`;\r\n      script.onload = () => {\r\n        setSdkReady(true);\r\n      };\r\n      document.body.appendChild(script);\r\n    };\r\n\r\n    if (successPay || !order || order._id !== orderId) {\r\n      dispatch({ type: orderConstants.ORDER_PAY_RESET });\r\n      dispatch(getOrderDetails(orderId));\r\n    } else if (!order.isPaid) {\r\n      if (!window.paypal) {\r\n        addPayPalScript();\r\n      } else {\r\n        setSdkReady(true);\r\n      }\r\n    }\r\n  }, [order, orderId, dispatch, successPay]);\r\n\r\n  let orderCreatedDate = new Date(order.createdAt);\r\n  let orderPaidAtDate = new Date(order.paidAt);\r\n  let orderDeliveredAtDate = new Date(order.deliveredAt);\r\n\r\n  const successPaymentHandler = (paymentResult) => {\r\n    console.log(paymentResult);\r\n    dispatch(payOrder(orderId, paymentResult));\r\n  };\r\n\r\n  return loading ? (\r\n    <LoaderGeneric />\r\n  ) : error ? (\r\n    <ErrorMessage>{error}</ErrorMessage>\r\n  ) : (\r\n    <>\r\n      <div className=\" top-links mb-sm\">\r\n        {\" \"}\r\n        <Link className=\"product-screen__link\" to=\"/profile/orders\">\r\n          &#10092;&#10092; See all orders\r\n        </Link>\r\n      </div>\r\n      <div className=\"gradient-wrapper\">\r\n        <div className=\"order-screen \">\r\n          <div>\r\n            <h1 className=\"heading-1   mb-sm\">Order details</h1>\r\n            <h2 className=\"mb-sm\" style={{ fontWeight: \"400\" }}>\r\n              <strong>Order number:</strong> {order._id}{\" \"}\r\n              <span className=\"ml-sm\" style={{ color: \"grey\" }}>\r\n                |\r\n              </span>{\" \"}\r\n              <strong className=\"ml-sm\">Created at:</strong>{\" \"}\r\n              {orderCreatedDate.toLocaleString()}\r\n            </h2>\r\n          </div>\r\n          <div className=\"line-break\"></div>\r\n\r\n          <div className=\"order-screen__grid\">\r\n            <div className=\"order-screen__address-info \">\r\n              <h3 className=\"heading-3 order-screen__section-title mb-sm \">\r\n                Shipping address\r\n              </h3>\r\n              <address className=\"order-screen__middle-text\">\r\n                <p>{order.shippingAddress.fullName}</p>\r\n                <p>{order.shippingAddress.line1}</p>\r\n                <p>{order.shippingAddress.line2}</p>\r\n                <p>{order.shippingAddress.city}</p>\r\n                <p>{order.shippingAddress.stateProvinceRegion}</p>\r\n                <p>{order.shippingAddress.country}</p>\r\n                <p>{order.shippingAddress.postalCode}</p>\r\n                <p>{order.shippingAddress.phoneNumber}</p>\r\n              </address>\r\n            </div>\r\n            <div className=\"order-screen__payment-info order-screen__steps-container\">\r\n              <h3 className=\"heading-3 order-screen__section-title mb-sm \">\r\n                Payment Method\r\n              </h3>\r\n              <p\r\n                style={{ alignSelf: \"center\", fontSize: \"1.4rem\" }}\r\n                className=\"order-screen__middle-text\"\r\n              >\r\n                {order.paymentMethod === \"PayPal\" ? (\r\n                  <GrPaypal className=\" mr-sm\" />\r\n                ) : order.paymentMethod === \"Credit Card\" ? (\r\n                  <BsCreditCard className=\" mr-sm\" />\r\n                ) : (\r\n                  <GrStripe className=\" mr-sm\" />\r\n                )}\r\n                {order.paymentMethod}\r\n              </p>\r\n              {order.isPaid ? (\r\n                <p className=\"order-screen__status-success-message mb-sm\">\r\n                  &#10003; {`Paid at ${orderPaidAtDate.toLocaleString()}`}\r\n                </p>\r\n              ) : (\r\n                <p className=\"order-screen__status-fail-message mb-sm\">\r\n                  &#10005; Not paid\r\n                </p>\r\n              )}\r\n            </div>\r\n            <div className=\"order-screen__shipment-info order-screen__steps-container\">\r\n              <h3 className=\"heading-3 order-screen__section-title mb-sm \">\r\n                Shipment Method\r\n              </h3>\r\n              <p\r\n                style={{ alignSelf: \"center\", fontSize: \"1.4rem\" }}\r\n                className=\"order-screen__middle-text\"\r\n              >\r\n                {order.shippingMethod} &nbsp;{\" \"}\r\n              </p>\r\n              {order.isDelivered ? (\r\n                <span>\r\n                  &#10003;{\" \"}\r\n                  {`Delivered at ${orderDeliveredAtDate.toLocaleString()}`}\r\n                </span>\r\n              ) : (\r\n                <p className=\"order-screen__status-fail-message\">\r\n                  &#10005; Not delivered\r\n                </p>\r\n              )}\r\n            </div>\r\n          </div>\r\n          <div className=\"line-break\"></div>\r\n          <h3 className=\"heading-3 order-screen__section-title mb-sm mt-sm\">\r\n            Products\r\n          </h3>\r\n          <div className=\"order-screen__products-info \">\r\n            <div>\r\n              {order.orderItems.map((item) => (\r\n                <div\r\n                  key={item.product._id}\r\n                  className=\"order-screen__item mb-sm\"\r\n                >\r\n                  <img\r\n                    onClick={() => history.push(`/product/${item.product._id}`)}\r\n                    src={item.product.image}\r\n                    alt={item.product.name}\r\n                    className=\"order-screen__image mr-sm\"\r\n                  />\r\n                  <div className=\"order-screen__item-details\">\r\n                    <h4\r\n                      onClick={() =>\r\n                        history.push(`/product/${item.product._id}`)\r\n                      }\r\n                      className=\"heading-4 order-screen__item-details--title\"\r\n                    >\r\n                      {item.product.name} x {item.quantity}\r\n                    </h4>\r\n\r\n                    <h4 className=\"heading-4 order-screen__item-details--price price-number\">\r\n                      PRICE: € {item.product.price}\r\n                    </h4>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n            <div className=\"order-screen__payment\">\r\n              <div className=\"order-screen__summary\">\r\n                <h3\r\n                  style={{ gridColumn: \"1/3\" }}\r\n                  className=\"heading-3 order-screen__section-title mb-xs text-center\"\r\n                >\r\n                  Order Price\r\n                </h3>\r\n                <span style={{ gridColumn: \"1/3\", fontSize: \"1.2rem\" }}>\r\n                  (All prices include VAT)\r\n                </span>\r\n                <h4 className=\"heading-4 order-screen__summary--text\">\r\n                  Products:\r\n                </h4>\r\n                <span className=\"order-screen__middle-text text-end\">\r\n                  {order.itemsPrice}€\r\n                </span>\r\n                <h4 className=\"heading-4 order-screen__summary--text\">\r\n                  Shipping:\r\n                </h4>\r\n                <span className=\"order-screen__middle-text  text-end\">\r\n                  {order.shippingPrice}€\r\n                </span>\r\n                <h3 className=\"heading-3 order-screen__summary--total price-number\">\r\n                  TOTAL:\r\n                </h3>\r\n                <span className=\"heading-3 order-screen__summary--total price-number  text-end\">\r\n                  {order.totalPrice}€\r\n                </span>\r\n              </div>\r\n              {!order.isPaid && (\r\n                <div>\r\n                  {loadingPay && <LoaderGeneric />}\r\n                  {!sdkReady ? (\r\n                    <LoaderGeneric />\r\n                  ) : (\r\n                    <>\r\n                      <h3 className=\"heading-3 order-screen__section-title mb-xs mt-xs text-center\">\r\n                        Pay now\r\n                      </h3>\r\n                      <PayPalButton\r\n                        amount={order.totalPrice}\r\n                        onSuccess={successPaymentHandler}\r\n                      />\r\n                    </>\r\n                  )}\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OrderScreen;\r\n","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\profile-favorite-screen\\FavoriteScreen.js",["263"],"import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { listFavoriteProducts } from \"../../redux/user/user.actions.js\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { FaHeartBroken } from \"react-icons/fa\";\r\nimport axios from \"axios\";\r\nimport \"./FavoriteScreen.scss\";\r\nimport { addToCart, getCartProducts } from \"../../redux/cart/cart.actions.js\";\r\nimport { TiShoppingCart } from \"react-icons/ti\";\r\nimport ActionShow from \"../../components/action-show/ActionShow.js\";\r\nimport LoaderGeneric from \"../../components/loader-generic/LoaderGeneric.js\";\r\nimport ErrorMessage from \"../../components/error-message/ErrorMessage.js\";\r\n//!==============================================================\r\nconst FavoriteScreen = () => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const [toCart, setToCart] = useState(false);\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const removeFromFavoriteHandler = (id) => {\r\n    const deleteProduct = async () => {\r\n      try {\r\n        const config = {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${userInfo.token}`,\r\n          },\r\n        };\r\n        await axios.delete(`/api/users/profile/favorites/${id}`, config);\r\n\r\n        dispatch(listFavoriteProducts());\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    deleteProduct();\r\n  };\r\n  const favoriteProductsList = useSelector(\r\n    (state) => state.userFavoriteProducts\r\n  );\r\n  const { userFavoriteProducts, loading } = favoriteProductsList;\r\n  const favoriteProductsLength = userFavoriteProducts.length;\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/login\");\r\n    }\r\n    dispatch(listFavoriteProducts());\r\n  }, [history, userInfo, dispatch]);\r\n\r\n  const addToCartHandler = (id) => {\r\n    dispatch(addToCart(id, 1));\r\n    dispatch(getCartProducts());\r\n    setToCart(true);\r\n    setTimeout(() => {\r\n      setToCart(false);\r\n    }, 3100);\r\n  };\r\n  const productLink = (id) => {\r\n    history.push(`/product/${id}`);\r\n  };\r\n  return loading ? (\r\n    <LoaderGeneric />\r\n  ) : (\r\n    <div className=\"favorite-screen\">\r\n      {toCart ? <ActionShow /> : null}\r\n      <h1 className=\"heading-1  \">FAVORITE PRODUCTS</h1>\r\n\r\n      <h2 className=\"favorite-screen__item-count mb-md\">\r\n        You have {favoriteProductsLength} favorite products.\r\n      </h2>\r\n      {userFavoriteProducts.map((item) => (\r\n        <div key={item._id} className=\"favorite-screen__product-container\">\r\n          <div className=\"favorite-screen__item\">\r\n            <div\r\n              className=\"favorite-screen__image-wrapper\"\r\n              onClick={() => productLink(item._id)}\r\n            >\r\n              <img\r\n                src={item.image}\r\n                alt={item.name}\r\n                className=\"favorite-screen__image\"\r\n              />\r\n            </div>\r\n            <div className=\"favorite-screen__item-details\">\r\n              <h4\r\n                onClick={() => productLink(item._id)}\r\n                className=\"heading-4 favorite-screen__item-details--title\"\r\n              >\r\n                {item.name}\r\n              </h4>\r\n              {item.countInStock ? (\r\n                <h3 className=\"in-stock mt-xs\">In stock</h3>\r\n              ) : (\r\n                <h3 className=\"out-of-stock-favorites mt-xs\">Not in stock</h3>\r\n              )}\r\n              <span className=\"favorite-screen__item-details--default-text\">\r\n                Default quantity when addding to cart is 1\r\n              </span>\r\n              <h4 className=\"heading-4 favorite-screen__item-details--price\">\r\n                PRICE:{\" \"}\r\n                <span className=\"heading-3 favorite-screen__item-details--price-value price-number\">\r\n                  € {item.price}\r\n                </span>\r\n              </h4>\r\n              <span\r\n                onClick={() => removeFromFavoriteHandler(item._id)}\r\n                className=\"favorite-screen__remove\"\r\n              >\r\n                Remove Favorite &nbsp; <FaHeartBroken />\r\n              </span>\r\n              {item.countInStock === 0 ? (\r\n                <button className=\" favorite-screen__button-disabled\">\r\n                  {\" \"}\r\n                  <TiShoppingCart className=\"favorite-screen__button--icon\" />{\" \"}\r\n                  out of stock{\" \"}\r\n                </button>\r\n              ) : (\r\n                <button\r\n                  onClick={async () => addToCartHandler(item._id)}\r\n                  className=\"favorite-screen__button\"\r\n                >\r\n                  <TiShoppingCart className=\"favorite-screen__button--icon\" />{\" \"}\r\n                  Add to cart\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FavoriteScreen;\r\n","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\checkout-steps\\CheckoutSteps.js",["264","265"],"import React from \"react\";\r\nimport \"./CheckoutStepts.scss\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nimport { AiOutlineDoubleRight, AiOutlineCheck } from \"react-icons/ai\";\r\nimport { GiTechnoHeart } from \"react-icons/gi\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n//!=====================================================================\r\nconst CheckoutSteps = ({ active3 }) => {\r\n  const history = useHistory();\r\n  const orderAddressState = useSelector((state) => state.orderAddress);\r\n  const { orderAddress } = orderAddressState;\r\n\r\n  const orderPaymentMethod = useSelector((state) => state.orderPaymentMethod);\r\n  const selectedShipment = orderAddress.fullName ? \"selected\" : \"\";\r\n  const selectedPayment =\r\n    orderPaymentMethod.paymentMethod !== \"\" ? \"selected\" : \"\";\r\n  return (\r\n    <>\r\n      <div\r\n        style={{\r\n          marginTop: \"-8rem\",\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n        }}\r\n        className=\"nav__logo-container mb-sm\"\r\n      >\r\n        <GiTechnoHeart className=\"nav__logo\" />{\" \"}\r\n        <Link to=\"/\">\r\n          <h2 className=\"nav__title\">Cyber Heart</h2>\r\n        </Link>\r\n      </div>\r\n      <Link to=\"/\">\r\n        <h2 className=\"nav__title\"></h2>\r\n      </Link>\r\n      <div className=\"checkout-steps\">\r\n        <div className=\"checkout-steps__progress\">\r\n          <span\r\n            className={`checkout-steps__number checkout-steps__number--${selectedShipment}`}\r\n          >\r\n            {orderAddress.fullName ? <AiOutlineCheck /> : \"1\"}\r\n          </span>{\" \"}\r\n          <p\r\n            onClick={() => history.push(\"/shipping\")}\r\n            className=\"checkout-steps__container\"\r\n          >\r\n            <span\r\n              className={`checkout-steps--text checkout-steps--text--${selectedShipment} `}\r\n            >\r\n              Address\r\n            </span>\r\n          </p>\r\n          <AiOutlineDoubleRight\r\n            className={`checkout-steps--arrows checkout-steps--arrows--${selectedShipment}  checkout-steps--arrows--animate`}\r\n          />\r\n        </div>\r\n        <div className=\"checkout-steps__progress\">\r\n          <span\r\n            className={`checkout-steps__number  checkout-steps__number--${selectedPayment} `}\r\n          >\r\n            {orderPaymentMethod.paymentMethod !== \"\" ? <AiOutlineCheck /> : \"2\"}\r\n          </span>{\" \"}\r\n          <p\r\n            onClick={() => history.push(\"/payment\")}\r\n            className=\"checkout-steps__container\"\r\n          >\r\n            <span\r\n              className={`checkout-steps--text checkout-steps--text--${selectedPayment} `}\r\n            >\r\n              Payment & Shipping\r\n            </span>\r\n          </p>\r\n          <AiOutlineDoubleRight\r\n            className={`checkout-steps--arrows checkout-steps--arrows--${selectedPayment} checkout-steps--arrows--animate`}\r\n          />\r\n        </div>\r\n        <div className=\"checkout-steps__progress\">\r\n          <span\r\n            className={`checkout-steps__number checkout-steps__number--${active3}`}\r\n          >\r\n            3\r\n          </span>\r\n          <p\r\n            onClick={() => history.push(\"/complete-order\")}\r\n            className=\"checkout-steps__container\"\r\n          >\r\n            <span\r\n              className={`checkout-steps--text checkout-steps--text--${active3} `}\r\n            >\r\n              Complete Order\r\n            </span>\r\n          </p>\r\n          {/* Empty div for flex space */}\r\n          <div></div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CheckoutSteps;\r\n","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\add-address\\AddAddress.js",["266","267","268","269","270"],"import React, { useState } from \"react\";\r\nimport \"./AddAddress.scss\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport ErrorMessage from \"../error-message/ErrorMessage.js\";\r\nimport { getUserAddresses, addAddress } from \"../../redux/user/user.actions.js\";\r\n//!=============================================================================\r\nconst AddAddress = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [fullName, setFullName] = useState(\"\");\r\n  const [country, setCountry] = useState(\"\");\r\n  const [line1, setLine1] = useState(\"\");\r\n  const [line2, setLine2] = useState(\"\");\r\n  const [city, setCity] = useState(\"\");\r\n  const [stateProvinceRegion, setStateProvinceRegion] = useState(\"\");\r\n  const [postalCode, setPostalCode] = useState(\"\");\r\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\r\n\r\n  const [successColor, setSuccessColor] = useState(\"alert\");\r\n  const [error, setError] = useState(false);\r\n  const [message, setMessage] = useState(null);\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { user } = userDetails;\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    window.location.reload();\r\n    setMessage(\"Address added successfully.\");\r\n    setSuccessColor(\"success\");\r\n    dispatch(\r\n      addAddress({\r\n        id: user._id,\r\n        fullName,\r\n        country,\r\n        line1,\r\n        line2,\r\n        city,\r\n        stateProvinceRegion,\r\n        postalCode,\r\n        phoneNumber,\r\n      })\r\n    );\r\n    dispatch(getUserAddresses());\r\n    setFullName(\"\");\r\n    setCountry(\"\");\r\n    setLine1(\"\");\r\n    setLine2(\"\");\r\n    setCity(\"\");\r\n    setStateProvinceRegion(\"\");\r\n    setPostalCode(\"\");\r\n    setPhoneNumber(\"\");\r\n  };\r\n  return (\r\n    <>\r\n      <form onSubmit={handleSubmit} className=\"add-address__form-container\">\r\n        <label htmlFor=\"fullName\" className=\"add-address__label\">\r\n          <strong>Full name</strong>\r\n        </label>\r\n        <input\r\n          required\r\n          name=\"line1\"\r\n          onChange={(e) => setFullName(e.target.value)}\r\n          value={fullName}\r\n          type=\"text\"\r\n          className=\"add-address__input\"\r\n        />\r\n        <label htmlFor=\"line1\" className=\"add-address__label\">\r\n          <strong>Address line 1</strong>\r\n        </label>\r\n        <input\r\n          required\r\n          name=\"line1\"\r\n          onChange={(e) => setLine1(e.target.value)}\r\n          value={line1}\r\n          type=\"text\"\r\n          className=\"add-address__input\"\r\n        />\r\n\r\n        <label htmlFor=\"line2\" className=\"add-address__label\">\r\n          <strong>Address line 2</strong>\r\n        </label>\r\n        <input\r\n          required\r\n          name=\"line2\"\r\n          onChange={(e) => setLine2(e.target.value)}\r\n          value={line2}\r\n          type=\"text\"\r\n          className=\"add-address__input\"\r\n        />\r\n        <label htmlFor=\"city\" className=\"add-address__label\">\r\n          <strong>City</strong>\r\n        </label>\r\n        <input\r\n          required\r\n          name=\"city\"\r\n          onChange={(e) => setCity(e.target.value)}\r\n          value={city}\r\n          className=\"add-address__input\"\r\n        />\r\n        <label htmlFor=\"stateProvinceRegion\" className=\"add-address__label\">\r\n          <strong>State/Province/Region</strong>\r\n        </label>\r\n        <input\r\n          required\r\n          name=\"stateProvinceRegion\"\r\n          onChange={(e) => setStateProvinceRegion(e.target.value)}\r\n          value={stateProvinceRegion}\r\n          className=\"add-address__input\"\r\n        />\r\n        <label htmlFor=\"postalCode\" className=\"add-address__label\">\r\n          <strong>Postal Code</strong>\r\n        </label>\r\n        <input\r\n          required\r\n          name=\"postalCode\"\r\n          onChange={(e) => setPostalCode(e.target.value)}\r\n          value={postalCode}\r\n          className=\"add-address__input\"\r\n        />\r\n        <label htmlFor=\"country\" className=\"add-address__label\">\r\n          <strong>Country</strong>\r\n        </label>\r\n        <input\r\n          required\r\n          name=\"country\"\r\n          onChange={(e) => setCountry(e.target.value)}\r\n          value={country}\r\n          className=\"add-address__input\"\r\n        />\r\n        <label htmlFor=\"phoneNumber\" className=\"add-address__label\">\r\n          <strong>Phone Number</strong>\r\n        </label>\r\n        <input\r\n          required\r\n          name=\"phoneNumber\"\r\n          onChange={(e) => setPhoneNumber(e.target.value)}\r\n          value={phoneNumber}\r\n          className=\"add-address__input\"\r\n        />\r\n        <input\r\n          required\r\n          className=\"add-address__input-btn\"\r\n          type=\"submit\"\r\n          value=\"Add new Address\"\r\n        />\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddAddress;\r\n","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\product\\Product.js",["271","272","273"],"import React, { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport \"./Product.scss\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport StarRatings from \"react-star-ratings\";\r\n\r\nimport { FaHeart } from \"react-icons/fa\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { listFavoriteProducts } from \"../../redux/user/user.actions.js\";\r\nimport { ErrorMessage } from \"../error-message/ErrorMessage.js\";\r\n\r\nimport axios from \"axios\";\r\n//!==================================================================\r\nconst Product = ({ product }) => {\r\n  const dispatch = useDispatch();\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const history = useHistory();\r\n\r\n  const [like, setLike] = useState(false);\r\n\r\n  const favoriteProductsList = useSelector(\r\n    (state) => state.userFavoriteProducts\r\n  );\r\n  const { userFavoriteProducts } = favoriteProductsList;\r\n  const isFavorite = userFavoriteProducts.find(\r\n    (favoriteProduct) => favoriteProduct._id == product._id\r\n  );\r\n  useEffect(() => {\r\n    if (isFavorite) {\r\n      setLike(true);\r\n    } else {\r\n      setLike(false);\r\n    }\r\n  }, [isFavorite]);\r\n\r\n  const handleAddUserToLikedArrayAndProductToFavorites = (id) => {\r\n    const addProduct = async () => {\r\n      try {\r\n        if (!userInfo) {\r\n          history.push(\"/login\");\r\n        } else {\r\n          const config = {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n          };\r\n          await axios.put(`/api/products/`, { _id: id }, config);\r\n          await axios.post(`/api/users/profile/favorites`, { _id: id }, config);\r\n          setLike(true);\r\n        }\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n    addProduct();\r\n  };\r\n\r\n  const removeFromFavoriteHandler = (id) => {\r\n    const deleteProduct = async () => {\r\n      try {\r\n        const config = {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${userInfo.token}`,\r\n          },\r\n        };\r\n        await axios.delete(`/api/users/profile/favorites/${id}`, config);\r\n\r\n        dispatch(listFavoriteProducts());\r\n        setLike(false);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    deleteProduct();\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={\r\n        product.countInStock === 0 ? \"product out-of-stock\" : \"product\"\r\n      }\r\n    >\r\n      <Link className=\"product__card\" to={`/product/${product._id}`}>\r\n        <div className=\"product__image-container\">\r\n          <img className=\"product__image\" src={product.image} alt=\"\" />\r\n        </div>\r\n        <h3 className=\"heading-4 heading-4--center product__title\">\r\n          {product.name}\r\n        </h3>\r\n        <div className=\"product__center\">\r\n          <span className=\"product__rating-text\">Rating:</span>\r\n          <div className=\"product__rating-stars\">\r\n            <span className=\"product__rating-text\">\r\n              <strong>{product.rating}</strong> ({product.numReviews})\r\n            </span>\r\n            <StarRatings\r\n              rating={product.rating}\r\n              starDimension=\"1.2rem\"\r\n              starSpacing=\".25rem\"\r\n              starRatedColor=\"rgb(255, 180, 3)\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"product__bottom\">\r\n          <span className=\"product__price-text\">Price: </span>\r\n          <span className=\"product__price-text\">\r\n            <strong> € {product.price}</strong>\r\n          </span>\r\n        </div>\r\n      </Link>\r\n      {like ? (\r\n        <span\r\n          onClick={async () => {\r\n            await removeFromFavoriteHandler(product._id);\r\n            await dispatch(listFavoriteProducts());\r\n          }}\r\n          title=\"Remove from Favorites\"\r\n        >\r\n          <FaHeart className=\"product__heart product__heart--selected\" />\r\n        </span>\r\n      ) : (\r\n        <span\r\n          onClick={async () => {\r\n            await handleAddUserToLikedArrayAndProductToFavorites(product._id);\r\n            await dispatch(listFavoriteProducts());\r\n          }}\r\n          title=\"Add to Favorites\"\r\n        >\r\n          <FaHeart className=\"product__heart\" />\r\n        </span>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Product;\r\n","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\loader-generic\\LoaderGeneric.js",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\profile-orders\\ProfileOrders.js",["274"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./ProfileOrders.scss\";\r\nimport { getMyOrders } from \"../../redux/order/order.actions.js\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport LoadingGeneric from \"../../components/loader-generic/LoaderGeneric.js\";\r\nimport ErrorMessage from \"../../components/error-message/ErrorMessage.js\";\r\nimport OrderOfOrders from \"../../components/order-of-orders/OrderOfOrders\";\r\n//!======================================================\r\nconst AllOrdersScreen = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const orderMyOrders = useSelector((state) => state.orderMyOrders);\r\n  const { loading, error, orders } = orderMyOrders;\r\n  useEffect(() => {\r\n    dispatch(getMyOrders());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <>\r\n      <h1 className=\"heading-1  \">YOUR ORDERS</h1>\r\n      {loading ? (\r\n        <LoadingGeneric />\r\n      ) : error ? (\r\n        <ErrorMessage color=\"alert\">{error}</ErrorMessage>\r\n      ) : (\r\n        <div className=\"my-orders\">\r\n          <h2 className=\"favorite-screen__item-count mb-md\">\r\n            You have made{\" \"}\r\n            {orders.length === 1 ? \"1 order\" : `${orders.length} orders`} in the\r\n            past .\r\n          </h2>\r\n          {orders.map((order) => (\r\n            <OrderOfOrders key={order._id} order={order} />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AllOrdersScreen;\r\n","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\order-of-orders\\OrderOfOrders.js",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\add-review\\AddReview.js",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\review\\Review.js",[],"C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\searchbox\\SearchBox.js",["275","276"],"//! Core\r\nimport React, { useState } from \"react\";\r\nimport \"./SearchBox.scss\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n//! Icons\r\nimport { BiSearchAlt } from \"react-icons/bi\";\r\n\r\n//! Redux Actions\r\nimport { listProducts } from \"../../redux/product/product.actions.js\";\r\nimport { listFavoriteProducts } from \"../../redux/user/user.actions.js\";\r\n//!============================================================\r\nconst SearchBox = () => {\r\n  //! Hooks declaration\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  //! State\r\n  const [keyword, setKeyword] = useState(\"\");\r\n\r\n  //!Handlers\r\n  const handleSearchSubmit = (e) => {\r\n    e.preventDefault();\r\n    const sendToShop = async () => {\r\n      await history.push(\"/shop/all-products\");\r\n\r\n      if (keyword.trim().toLowerCase()) {\r\n        await dispatch(\r\n          listProducts({ name: { $regex: `.*${keyword}.*`, $options: \"i\" } }, 1)\r\n        );\r\n        setKeyword(\"\");\r\n      } else {\r\n        dispatch(listProducts({}));\r\n      }\r\n    };\r\n    sendToShop();\r\n  };\r\n  return (\r\n    <div className=\"search-box\">\r\n      <form onSubmit={handleSearchSubmit}>\r\n        <input\r\n          className=\"search-box__input\"\r\n          type=\"text\"\r\n          title=\"Search for products\"\r\n          placeholder=\"Search all products ...\"\r\n          value={keyword}\r\n          onChange={(e) => setKeyword(e.target.value)}\r\n        />\r\n        <button title=\"Search\" className=\"search-box__search-btn\">\r\n          <BiSearchAlt />\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\profile-reviews-screen\\ProfileReviews.js",["277","278","279","280"],"import React, { useEffect } from \"react\";\r\nimport \"./ProfileReviews.scss\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { listProductReviews } from \"../../redux/user/user.actions\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Review from \"../../components/review/Review.js\";\r\n//!======================================================\r\nconst ProfileReviews = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { user } = userDetails;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n  const reviews = useSelector((state) => state.userReviews);\r\n  const { loading, userReviews } = reviews;\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/login\");\r\n    } else {\r\n      dispatch(listProductReviews());\r\n    }\r\n  }, [dispatch, listProductReviews]);\r\n  return (\r\n    <>\r\n      <h1 className=\"heading-1 mb-sm\">YOUR REVIEWS</h1>\r\n      {userReviews.map((el) => (\r\n        <div key={el._id}>\r\n          <h4 className=\"profile-reviews__product-name\">{el.productName}</h4>\r\n          <div className=\"profile-reviews__flex\">\r\n            <div className=\"profile-reviews__image-title\">\r\n              <img\r\n                onClick={() => history.push(`/product/${el.productId}`)}\r\n                className=\"profile-reviews__image\"\r\n                src={el.image}\r\n              />\r\n            </div>\r\n            <h4>{el.title}</h4>\r\n            {el.reviews.map((review) => (\r\n              <Review key={review._id} review={review} />\r\n            ))}\r\n          </div>\r\n          <div className=\"line-break\"></div>\r\n        </div>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProfileReviews;\r\n","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\screens\\shop\\Shop.js",["281","282"],"//! Core\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"./Shop.scss\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\n//! Components\r\nimport Product from \"../../components/product/Product\";\r\nimport Loader from \"../../components/loader/Loader.js\";\r\nimport ErrorMessage from \"../../components/error-message/ErrorMessage.js\";\r\nimport ProductFilter from \"../../components/product-filter/ProductFilter.js\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\n\r\n//! Redux actions\r\nimport { listProducts } from \"../../redux/product/product.actions.js\";\r\nimport { listFavoriteProducts } from \"../../redux/user/user.actions.js\";\r\nimport { getCartProducts } from \"../../redux/cart/cart.actions.js\";\r\n\r\n//!=======================================================\r\nconst Shop = () => {\r\n  //! Hooks declaration\r\n  const location = useLocation();\r\n  const dispatch = useDispatch();\r\n\r\n  //! State\r\n  const [pageParams, setPageParams] = useState(1);\r\n\r\n  //! Redux data selection hook\r\n\r\n  const productList = useSelector((state) => state.productList);\r\n  const { loading, error, products, pages, page } = productList;\r\n\r\n  //! Use effect\r\n  useEffect(() => {\r\n    if (location.pathname === `/shop/all-products`) {\r\n      dispatch(listProducts({}, 1));\r\n    } else if (location.pathname === `/shop/electronics`) {\r\n      dispatch(listProducts({ category: \"Electronics\" }, 1));\r\n    } else if (location.pathname === `/shop/home-appliances`) {\r\n      dispatch(listProducts({ category: \"Home\" }, 1));\r\n    }\r\n    window.scrollTo(0, 0);\r\n    setPageParams(1);\r\n    dispatch(listFavoriteProducts());\r\n    dispatch(getCartProducts());\r\n  }, [dispatch, location]);\r\n\r\n  //! MaterialUI Pagination Style\r\n  const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      \"& > *\": {\r\n        marginTop: theme.spacing(2),\r\n      },\r\n    },\r\n  }));\r\n  const classes = useStyles();\r\n\r\n  //! Handlers\r\n  const pageChangeHandler = (event, value) => {\r\n    setPageParams(value);\r\n    if (location.pathname === `/shop/all-products`) {\r\n      dispatch(listProducts({}, value));\r\n    } else if (location.pathname === `/shop/electronics`) {\r\n      dispatch(listProducts({ category: \"Electronics\" }, value));\r\n    } else if (location.pathname === `/shop/home-appliances`) {\r\n      dispatch(listProducts({ category: \"Home\" }, value));\r\n    }\r\n    window.scrollTo(0, 0);\r\n    dispatch(listFavoriteProducts());\r\n  };\r\n  //!=======================================================\r\n  return (\r\n    <div className=\"shop\">\r\n      <div className=\"shop__filter\">\r\n        {/* //todo ==========================================\r\n        <ProductFilter />\r\n        //todo ========================================== */}\r\n      </div>\r\n\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <ErrorMessage color=\"alert\">{error}</ErrorMessage>\r\n      ) : (\r\n        <>\r\n          <div className=\"shop__products\">\r\n            {products.map((product) => (\r\n              <Product key={product._id} product={product} />\r\n            ))}\r\n          </div>\r\n        </>\r\n      )}\r\n\r\n      <div className={`${classes.root} mt-md pagination-container`}>\r\n        <Pagination\r\n          count={Number(pages)}\r\n          page={Number(pageParams)}\r\n          onChange={pageChangeHandler}\r\n          variant=\"outlined\"\r\n          shape=\"rounded\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Shop;\r\n","C:\\Users\\crist\\Documents\\projects\\techHeart-main\\frontend\\src\\components\\product-filter\\ProductFilter.js",["283","284"],"import React, { useState } from \"react\";\r\nimport \"./ProductFilter.scss\";\r\n//!=====================================================================\r\nconst ProductFilter = () => {\r\n  //! State\r\n  const [filterShow, setFilterShow] = useState(false);\r\n  return <div className=\"product-filter\">product filter</div>;\r\n};\r\n\r\nexport default ProductFilter;\r\n",{"ruleId":"285","replacedBy":"286"},{"ruleId":"287","replacedBy":"288"},{"ruleId":"289","severity":1,"message":"290","line":1,"column":17,"nodeType":"291","messageId":"292","endLine":1,"endColumn":26},{"ruleId":"289","severity":1,"message":"293","line":10,"column":8,"nodeType":"291","messageId":"292","endLine":10,"endColumn":12},{"ruleId":"294","severity":1,"message":"295","line":71,"column":26,"nodeType":"296","messageId":"297","endLine":71,"endColumn":58},{"ruleId":"289","severity":1,"message":"298","line":6,"column":10,"nodeType":"291","messageId":"292","endLine":6,"endColumn":14},{"ruleId":"289","severity":1,"message":"299","line":18,"column":9,"nodeType":"291","messageId":"292","endLine":18,"endColumn":17},{"ruleId":"300","severity":1,"message":"301","line":44,"column":6,"nodeType":"302","endLine":44,"endColumn":41,"suggestions":"303"},{"ruleId":"289","severity":1,"message":"304","line":18,"column":11,"nodeType":"291","messageId":"292","endLine":18,"endColumn":18},{"ruleId":"294","severity":1,"message":"295","line":164,"column":26,"nodeType":"296","messageId":"297","endLine":164,"endColumn":55},{"ruleId":"289","severity":1,"message":"304","line":34,"column":11,"nodeType":"291","messageId":"292","endLine":34,"endColumn":18},{"ruleId":"289","severity":1,"message":"298","line":9,"column":10,"nodeType":"291","messageId":"292","endLine":9,"endColumn":14},{"ruleId":"300","severity":1,"message":"305","line":35,"column":6,"nodeType":"302","endLine":35,"endColumn":29,"suggestions":"306"},{"ruleId":"307","severity":1,"message":"308","line":49,"column":46,"nodeType":"309","messageId":"310","endLine":49,"endColumn":48},{"ruleId":"300","severity":1,"message":"311","line":52,"column":13,"nodeType":"312","endLine":63,"endColumn":4},{"ruleId":"289","severity":1,"message":"313","line":1,"column":17,"nodeType":"291","messageId":"292","endLine":1,"endColumn":25},{"ruleId":"289","severity":1,"message":"314","line":33,"column":27,"nodeType":"291","messageId":"292","endLine":33,"endColumn":32},{"ruleId":"300","severity":1,"message":"315","line":67,"column":6,"nodeType":"302","endLine":67,"endColumn":56,"suggestions":"316"},{"ruleId":"289","severity":1,"message":"304","line":19,"column":33,"nodeType":"291","messageId":"292","endLine":19,"endColumn":40},{"ruleId":"289","severity":1,"message":"317","line":24,"column":11,"nodeType":"291","messageId":"292","endLine":24,"endColumn":18},{"ruleId":"289","severity":1,"message":"290","line":1,"column":17,"nodeType":"291","messageId":"292","endLine":1,"endColumn":26},{"ruleId":"289","severity":1,"message":"304","line":16,"column":11,"nodeType":"291","messageId":"292","endLine":16,"endColumn":18},{"ruleId":"289","severity":1,"message":"318","line":12,"column":9,"nodeType":"291","messageId":"292","endLine":12,"endColumn":16},{"ruleId":"289","severity":1,"message":"304","line":22,"column":11,"nodeType":"291","messageId":"292","endLine":22,"endColumn":18},{"ruleId":"285","replacedBy":"319"},{"ruleId":"287","replacedBy":"320"},{"ruleId":"289","severity":1,"message":"321","line":33,"column":11,"nodeType":"291","messageId":"292","endLine":33,"endColumn":19},{"ruleId":"289","severity":1,"message":"322","line":12,"column":8,"nodeType":"291","messageId":"292","endLine":12,"endColumn":20},{"ruleId":"289","severity":1,"message":"323","line":7,"column":23,"nodeType":"291","messageId":"292","endLine":7,"endColumn":34},{"ruleId":"324","severity":1,"message":"325","line":35,"column":9,"nodeType":"326","endLine":35,"endColumn":36},{"ruleId":"289","severity":1,"message":"322","line":4,"column":8,"nodeType":"291","messageId":"292","endLine":4,"endColumn":20},{"ruleId":"289","severity":1,"message":"327","line":19,"column":10,"nodeType":"291","messageId":"292","endLine":19,"endColumn":22},{"ruleId":"289","severity":1,"message":"314","line":20,"column":10,"nodeType":"291","messageId":"292","endLine":20,"endColumn":15},{"ruleId":"289","severity":1,"message":"328","line":20,"column":17,"nodeType":"291","messageId":"292","endLine":20,"endColumn":25},{"ruleId":"289","severity":1,"message":"329","line":21,"column":10,"nodeType":"291","messageId":"292","endLine":21,"endColumn":17},{"ruleId":"289","severity":1,"message":"330","line":1,"column":38,"nodeType":"291","messageId":"292","endLine":1,"endColumn":53},{"ruleId":"289","severity":1,"message":"322","line":10,"column":10,"nodeType":"291","messageId":"292","endLine":10,"endColumn":22},{"ruleId":"307","severity":1,"message":"308","line":28,"column":46,"nodeType":"309","messageId":"310","endLine":28,"endColumn":48},{"ruleId":"289","severity":1,"message":"313","line":1,"column":17,"nodeType":"291","messageId":"292","endLine":1,"endColumn":25},{"ruleId":"289","severity":1,"message":"331","line":5,"column":23,"nodeType":"291","messageId":"292","endLine":5,"endColumn":34},{"ruleId":"289","severity":1,"message":"332","line":12,"column":10,"nodeType":"291","messageId":"292","endLine":12,"endColumn":30},{"ruleId":"289","severity":1,"message":"333","line":13,"column":11,"nodeType":"291","messageId":"292","endLine":13,"endColumn":15},{"ruleId":"289","severity":1,"message":"304","line":18,"column":11,"nodeType":"291","messageId":"292","endLine":18,"endColumn":18},{"ruleId":"300","severity":1,"message":"334","line":26,"column":6,"nodeType":"302","endLine":26,"endColumn":36,"suggestions":"335"},{"ruleId":"336","severity":1,"message":"337","line":35,"column":15,"nodeType":"326","endLine":39,"endColumn":17},{"ruleId":"289","severity":1,"message":"338","line":11,"column":8,"nodeType":"291","messageId":"292","endLine":11,"endColumn":21},{"ruleId":"289","severity":1,"message":"339","line":33,"column":44,"nodeType":"291","messageId":"292","endLine":33,"endColumn":48},{"ruleId":"289","severity":1,"message":"340","line":6,"column":10,"nodeType":"291","messageId":"292","endLine":6,"endColumn":20},{"ruleId":"289","severity":1,"message":"341","line":6,"column":22,"nodeType":"291","messageId":"292","endLine":6,"endColumn":35},"no-native-reassign",["342"],"no-negated-in-lhs",["343"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'gsap' is defined but never used.","no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","'Link' is defined but never used.","'location' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'orderAddress.fullName'. Either include it or remove the dependency array.","ArrayExpression",["344"],"'loading' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'orderPaymentMethod.paymentMethod' and 'orderPaymentMethod.shippingMethod.name'. Either include them or remove the dependency array.",["345"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","'useState' is defined but never used.","'error' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'success'. Either include it or remove the dependency array.",["346"],"'success' is assigned a value but never used.","'history' is assigned a value but never used.",["342"],["343"],"'userInfo' is assigned a value but never used.","'ErrorMessage' is defined but never used.","'useDispatch' is defined but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","'successColor' is assigned a value but never used.","'setError' is assigned a value but never used.","'message' is assigned a value but never used.","'useLayoutEffect' is defined but never used.","'useSelector' is defined but never used.","'listFavoriteProducts' is defined but never used.","'user' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'history' and 'userInfo'. Either include them or remove the dependency array. Outer scope values like 'listProductReviews' aren't valid dependencies because mutating them doesn't re-render the component.",["347"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'ProductFilter' is defined but never used.","'page' is assigned a value but never used.","'filterShow' is assigned a value but never used.","'setFilterShow' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"348","fix":"349"},{"desc":"350","fix":"351"},{"desc":"352","fix":"353"},{"desc":"354","fix":"355"},"Update the dependencies array to be: [history, userInfo, user, dispatch, orderAddress.fullName]",{"range":"356","text":"357"},"Update the dependencies array to be: [orderAddress, history, orderPaymentMethod.paymentMethod, orderPaymentMethod.shippingMethod.name]",{"range":"358","text":"359"},"Update the dependencies array to be: [orderAddress, history, orderPaymentMethod, order, success]",{"range":"360","text":"361"},"Update the dependencies array to be: [dispatch, history, userInfo]",{"range":"362","text":"363"},[1663,1698],"[history, userInfo, user, dispatch, orderAddress.fullName]",[1278,1301],"[orderAddress, history, orderPaymentMethod.paymentMethod, orderPaymentMethod.shippingMethod.name]",[2251,2301],"[orderAddress, history, orderPaymentMethod, order, success]",[914,944],"[dispatch, history, userInfo]"]